{"version":3,"sources":["tonva-tools/index.ts","tonva-react-form/index.ts","tonva-react-uq/controllers/CVEntity.tsx","tonva-tools/ui/nav.tsx","tonva-react-uq/index.ts","tonva-react-uq/controllers/form/viewModel.tsx","tonva-tools/net/guestApi.ts","tonva-tools/net/index.ts","tonva-react-uq/tools/jsonStringify.ts","tonva-react-uq/tools/tv.tsx","tonva-react-uq/tools/index.ts","tonva-tools/ui/index.ts","tonva-tools/net/appBridge.ts","tonva-tools/net/httpChannelUI.ts","tonva-tools/net/uqApi.ts","tonva-react-uq/controllers/link/cLink.tsx","tonva-react-uq/controllers/link/index.ts","tonva-tools/net/wsChannel.ts","tonva-tools/ui/page.tsx","tonva-react-form/uid.ts","tonva-tools/ui/image.tsx","tonva-tools/net/host.ts","tonva-tools/user.ts","tonva-tools/uid.ts","tonva-react-uq/controllers/tuid/vTuidMain.tsx","tonva-react-uq/controllers/tuid/vTuidEdit.tsx","tonva-react-uq/controllers/tuid/vTuidSelect.tsx","tonva-react-uq/controllers/tuid/vTuidView.tsx","tonva-react-uq/controllers/tuid/vTuidInfo.tsx","tonva-react-uq/controllers/tuid/pageItems.ts","tonva-react-uq/controllers/tuid/vTuidList.tsx","tonva-react-uq/controllers/tuid/cTuid.ts","tonva-react-uq/controllers/tuid/index.tsx","tonva-react-uq/controllers/form/vBand.tsx","tonva-react-uq/controllers/form/vSubmit.tsx","tonva-react-uq/controllers/form/rule.ts","tonva-react-uq/controllers/form/vField/vField.tsx","tonva-react-uq/controllers/form/vField/vComputeField.tsx","tonva-react-uq/controllers/form/vArr.tsx","tonva-react-uq/controllers/form/vField/vTuidField.tsx","tonva-react-uq/controllers/form/bandsBuilder.ts","tonva-react-uq/controllers/form/vField/buildVmField.ts","tonva-react-uq/controllers/form/vForm.tsx","tonva-react-uq/controllers/form/index.ts","tonva-tools/net/httpChannel.ts","tonva-tools/ui/res.ts","tonva-react-uq/controllers/index.ts","tonva-react-form/form/control/control.tsx","tonva-react-form/form/control/buttonsControl.tsx","tonva-react-form/form/control/charsControl.tsx","tonva-react-form/form/control/stringControl.tsx","tonva-react-form/form/control/numberControl.tsx","tonva-react-form/form/control/unknownControl.tsx","tonva-react-form/form/control/pickIdControl.tsx","tonva-react-form/form/control/pickTuidControl.tsx","tonva-react-form/form/control/pickControl.tsx","tonva-react-form/form/control/index.ts","tonva-react-form/form/control/checkControl.tsx","tonva-react-form/form/control/radioControl.tsx","tonva-react-form/form/control/selectControl.tsx","tonva-react-form/form/control/textAreaControl.tsx","tonva-react-uq/entities/entity.ts","tonva-react-uq/entities/tuid.ts","tonva-react-uq/entities/action.ts","tonva-react-uq/entities/sheet.ts","tonva-react-uq/entities/query.ts","tonva-react-uq/entities/book.ts","tonva-react-uq/entities/history.ts","tonva-react-uq/entities/map.ts","tonva-react-uq/entities/pending.ts","tonva-react-uq/entities/entities.ts","tonva-react-uq/entities/index.ts","tonva-react-form/form/rowContainer/index.tsx","tonva-tools/net/apiBase.ts","tonva-tools/ui/titleBar.tsx","tonva-react-uq/controllers/query/defaultRow.tsx","tonva-react-uq/controllers/query/vQueryMain.tsx","tonva-react-uq/controllers/query/vQuerySelect.tsx","tonva-react-uq/controllers/query/cQuery.ts","tonva-react-uq/controllers/query/index.ts","tonva-tools/ui/edit/imageItemEdit.tsx","tonva-tools/ui/loading.tsx","tonva-tools/ui/resUploader.tsx","tonva-react-uq/controllers/CApp.tsx","tonva-react-form/form/index.ts","tonva-react-form/form/formView.tsx","tonva-react-uq/controllers/icons.tsx","tonva-react-uq/controllers/ControllerUq.ts","tonva-react-uq/centerApi.ts","tonva-react-uq/controllers/sheet/vMain.tsx","tonva-react-uq/controllers/sheet/vNew.tsx","tonva-react-uq/controllers/sheet/vSheetView.tsx","tonva-react-uq/controllers/sheet/vEdit.tsx","tonva-react-uq/controllers/sheet/vSheetAction.tsx","tonva-react-uq/controllers/sheet/vSchema.tsx","tonva-react-uq/controllers/sheet/vArchives.tsx","tonva-react-uq/controllers/sheet/vList.tsx","tonva-react-uq/controllers/sheet/vArchived.tsx","tonva-react-uq/controllers/sheet/vSheet.tsx","tonva-react-uq/controllers/sheet/vSaved.tsx","tonva-react-uq/controllers/sheet/vSheetProcessing.tsx","tonva-react-uq/controllers/sheet/cSheet.ts","tonva-react-uq/controllers/sheet/index.ts","tonva-react-uq/controllers/book/vBookMain.tsx","tonva-react-uq/controllers/book/cBook.ts","tonva-react-uq/controllers/uq/vUq.tsx","tonva-react-uq/controllers/uq/cUq.tsx","tonva-react-uq/controllers/uq/index.ts","tonva-react-uq/controllers/map/vMain.tsx","tonva-react-uq/controllers/map/inputValues.tsx","tonva-react-uq/controllers/map/cMap.ts","tonva-react-uq/controllers/map/index.ts","tonva-react-uq/controllers/action/vActionMain.tsx","tonva-react-uq/controllers/action/cAction.ts","tonva-react-uq/controllers/action/index.ts","tonva-react-uq/controllers/pending/vPendingMain.tsx","tonva-react-uq/controllers/pending/cPending.ts","tonva-react-uq/controllers/pending/index.ts","tonva-react-uq/controllers/history/vHistoryMain.tsx","tonva-react-uq/controllers/history/cHistory.ts","tonva-react-uq/controllers/history/index.ts","tonva-tools/ui/edit/itemEdit.tsx","tonva-tools/net/netToken.ts","tonva-tools/entry/userApi.ts","tonva-tools/left0.ts","tonva-tools/ui/VM.tsx","tonva-tools/ui/schema/index.ts","tonva-tools/pageItems.ts","tonva-tools/cacheIds.ts","tonva-react-form/form/TonvaForm.tsx","tonva-react-form/dropDownActions/index.tsx","tonva-react-form/easyDate/index.tsx","tonva-react-form/media.tsx","tonva-react-form/searchBox.tsx","tonva-react-form/multiStep/index.tsx","tonva-tools/ui/form/rules/index.ts","tonva-tools/ui/form/widgets/widget.tsx","tonva-tools/ui/form/widgets/textWidget.tsx","tonva-tools/ui/form/widgets/numberWidget.tsx","tonva-tools/ui/form/widgets/updownWidget.tsx","tonva-tools/ui/form/widgets/dateWidget.tsx","tonva-tools/ui/form/widgets/checkBoxWidget.tsx","tonva-tools/ui/form/widgets/selectWidget.tsx","tonva-tools/ui/form/widgets/idWidget.tsx","tonva-tools/ui/form/widgets/unknown.tsx","tonva-tools/ui/form/widgets/buttonWidget.tsx","tonva-tools/ui/form/context.tsx","tonva-tools/ui/form/widgets/arrComponent.tsx","tonva-tools/ui/form/widgets/imageWidget.tsx","tonva-tools/ui/form/widgets/factory.tsx","tonva-tools/ui/form/widgets/textareaWidget.tsx","tonva-tools/ui/form/widgets/passwordWidget.tsx","tonva-tools/ui/form/widgets/radioWidget.tsx","tonva-tools/ui/form/widgets/rangeWidget.tsx","tonva-tools/ui/form/formRes.ts","tonva-tools/ui/form/form.tsx","tonva-tools/ui/form/field.tsx","tonva-tools/ui/form/index.ts","ui/jkOrder/res/index.ts","ui/jkOrder/res/zh/CN.tsx","ui/jkOrder/tuid/index.tsx","ui/jkOrder/sheet/order/index.tsx","ui/jkOrder/sheet/index.tsx","ui/jkOrder/sheet/order/vNew.tsx","ui/jkOrder/map/index.tsx","ui/jkOrder/index.tsx","tonva-react-form/components/Badge.tsx","tonva-react-form/components/LMR.tsx","tonva-react-form/components/FA.tsx","tonva-react-form/components/Muted.tsx","tonva-react-form/components/index.ts","tonva-react-form/list/base.tsx","tonva-react-form/list/clickable.tsx","tonva-react-form/list/static.tsx","tonva-react-form/list/selectable.tsx","tonva-react-form/list/index.tsx","tonva-react-form/propGrid/row.tsx","tonva-react-form/propGrid/propView.tsx","tonva-react-form/propGrid/PropGrid.tsx","tonva-react-form/listView/listRow.tsx","tonva-react-form/listView/listView.tsx","tonva-tools/ui/edit/stringItemEdit.tsx","tonva-tools/ui/edit/edit.tsx","tonva-tools/ui/edit/index.tsx","tonva-tools/entry/meInfo.tsx","tonva-tools/ui/tabs/tabs.tsx","tonva-tools/ui/fetchErrorView.tsx","tonva-tools/local.ts","tonva-tools/img/logo.svg","ui/$unitx/tuid/index.tsx","ui/$unitx/map/teamPerson/index.tsx","ui/$unitx/map/index.ts","ui/$unitx/query/getMessage/cGetMessge.tsx","ui/$unitx/query/teamPosts.tsx","ui/$unitx/query/index.ts","ui/$unitx/query/getMessage/index.ts","ui/$unitx/res/zh/CN.tsx","ui/$unitx/cTuid/vTuidMain.tsx","ui/$unitx/index.ts","ui/$unitx/cTuid/myCTuid.ts","ui/$unitx/res/index.ts","ui/devApp/index.tsx","ui/devApp/tuid/index.tsx","ui/devApp/sheet/index.tsx","ui/cart/index.tsx","ui/index.tsx","ui/CMyApp.tsx","ui/res/index.ts","ui/res/zh/CN.tsx","App.tsx","registerServiceWorker.ts","index.tsx"],"names":["_left0__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","d","__webpack_exports__","_net__WEBPACK_IMPORTED_MODULE_2__","_ui__WEBPACK_IMPORTED_MODULE_3__","o","_pageItems__WEBPACK_IMPORTED_MODULE_5__","_form__WEBPACK_IMPORTED_MODULE_0__","_list__WEBPACK_IMPORTED_MODULE_1__","_easyDate__WEBPACK_IMPORTED_MODULE_3__","_components__WEBPACK_IMPORTED_MODULE_5__","_searchBox__WEBPACK_IMPORTED_MODULE_8__","CEntity","_ControllerUq__WEBPACK_IMPORTED_MODULE_3__","[object Object]","cUq","entity","ui","res","super","Object","setPrototypeOf","this","x","name","typeName","label","icon","_icons__WEBPACK_IMPORTED_MODULE_2__","loadSchema","onSubmit","values","mode","options","buildFormOptions","ret","_form__WEBPACK_IMPORTED_MODULE_1__","setValues","none","submitCaption","arrNewCaption","arrEditCaption","arrTitleNewButton","fields","arrFields","undefined","new","formUI","form","arrs","inputs","buildInputs","buildFieldsInputs","arr","items","arrFieldInputs","field","_tuid","fieldUI","select","buildSelect","content","buildContent","placeHolder","getTuidPlaceHolder","__awaiter","_ownerField","cTuidSelect","cSelectFrom","param","getValue","autoList","console","log","call","removeCeased","id","idFromItem","useId","queryName","cQuerySelect","VEntity","tonva_tools__WEBPACK_IMPORTED_MODULE_0__","controller","createForm","mobileHeaderStyle","RegExp","test","navigator","userAgent","minHeight","logMark","logs","stackKey","NavView","react__WEBPACK_IMPORTED_MODULE_0__","props","waitCount","isHistoryBack","clearError","setState","fetchError","back","bind","navBack","stack","state","wait","window","addEventListener","nav","set","start","level","length","waitTimeHandler","global","setTimeout","clearTimeout","err","error","unauthorized","showLogin","view","disposer","clear","push","history","pushState","key","ceased","refresh","item","pop","dispose","p","i","len","backLevel","popAndDispose","find","v","confirmClose","confirm","self","top","postMessage","type","message","elWait","elError","className","_loading__WEBPACK_IMPORTED_MODULE_10__","_fetchErrorView__WEBPACK_IMPORTED_MODULE_4__","assign","map","index","style","visibility","Nav","local","_local__WEBPACK_IMPORTED_MODULE_6__","user","lang","district","_res__WEBPACK_IMPORTED_MODULE_9__","language","culture","guest","g","get","handler","ws","onWsReceiveAny","handlerId","endWsReceive","msg","receive","unitRes","fetch","json","unit","unitName","_net__WEBPACK_IMPORTED_MODULE_7__","getUnitName","unitId","unitFromName","hash","document","location","pos","_net_appBridge__WEBPACK_IMPORTED_MODULE_5__","hashParam","substring","startWait","url","resHost","centerHost","resUrl","wsHost","loadUnit","setGuest","exHash","mif","parent","_net_wsChannel__WEBPACK_IMPORTED_MODULE_8__","notLogined","logined","endWait","onLogined","_net_netToken__WEBPACK_IMPORTED_MODULE_3__","token","callback","connect","JSON","stringify","saveLocalUser","showAppView","withBack","lv","e","then","loginView","default","_page__WEBPACK_IMPORTED_MODULE_2__","header","onClick","logout","logoutClear","cp","ChangePasswordPage","onError","show","replace","topKey","popTo","ceaseTop","regConfirmClose","confirmBox","apiId","sheetType","sheetId","Promise","resolve","reject","sheet","includes","uh","src","open","date","Date","getTime","toTimeString","step","__decorate","mobx__WEBPACK_IMPORTED_MODULE_1__","startApp","appName","convertUIKeyToLowercase","obj","toLowerCase","Array","isArray","cApp","CApp","_controllers__WEBPACK_IMPORTED_MODULE_1__","uqs","ViewModel","PureJSONContent","JSONContent","RowContent","mobx_react__WEBPACK_IMPORTED_MODULE_1__","_tools__WEBPACK_IMPORTED_MODULE_2__","vm","guestApi","uqApi","wsChannel","apiBase","appBridge","host","replacer","value","substr","jsonStringify","Tv","index_module","tuidValue","nullUI","ttv","react","bi","_$tuid","_$com","t","controllers","com","getTuidContent","val","valueFromId","boxIdContent","tv","_nav__WEBPACK_IMPORTED_MODULE_0__","_VM__WEBPACK_IMPORTED_MODULE_3__","_schema__WEBPACK_IMPORTED_MODULE_4__","_form__WEBPACK_IMPORTED_MODULE_5__","_edit__WEBPACK_IMPORTED_MODULE_6__","_res__WEBPACK_IMPORTED_MODULE_7__","_image__WEBPACK_IMPORTED_MODULE_10__","uqTokens","logoutUqTokens","appsInFrame","meInFrame","_unit","isBridged","setMeInFrame","appHash","parts","split","Number","page","slice","getExHashPos","lastIndexOf","getExHash","appUrl","u","_uid__WEBPACK_IMPORTED_MODULE_2__","appUq","uq","uqOwner","uqName","uqToken","_uqApi__WEBPACK_IMPORTED_MODULE_3__","urlDebug","realUrl","_host__WEBPACK_IMPORTED_MODULE_5__","getUrlOrDebug","at","a","opener","apiName","evt","data","subWin","source","_wsChannel__WEBPACK_IMPORTED_MODULE_4__","el","getElementById","hidden","hideFrameBack","lodash__WEBPACK_IMPORTED_MODULE_0___default","clone","_ui__WEBPACK_IMPORTED_MODULE_1__","subFrameStarted","onReceive","initSubWin","from","callId","method","body","result","directCall","callCenterApiFromMessage","bca","brideCenterApis","bridgeCenterApiReturn","appInFrame","onReceiveAppApiMessage","action","onAppApiReturn","bridgeCenterApi","httpChannelUI_HttpChannelNavUI","channelUIs","channelNoUIs","logoutApis","uqApi_channels","uqLocalEntities","localUqs","ls","localStorage","getItem","parse","loginedUserId","isNet","un","__loadAccess","saveLocal","lodash_default","cloneDeep","removeItem","accessValue","str","setItem","isMatch","uqApi_UqApi","basePath","access","showWaiting","channels","channelUI","channel","httpChannel","acc","join","loadAccess","checkAccess","names","post","params","owner","pageStart","pageSize","order","$order","ids","proxy","put","uqApi_UnitxApi","buildChannel","centerAppApi","uqApi_CenterAppApi","unitxUq","setCenterUrl","centerToken","centerChannel","centerChannelUI","setCenterToken","userId","uqApi_CenterApi","path","uqTokenApi","unitParam","nowTick","tick","callCenterapi","appUqs","appOwner","rLs","rAppOwner","rAppName","uqsPure","cachedUqs","cachedId","retId","retUqs","loadAppUqs","checkUqs","Link","cLink_CLink","classnames_default","subAppWindow","setSubAppWindow","win","postWsToTop","WsBase","handlerSeed","anyHandlers","msgHandlers","seed","$type","wsBaseSeed","wsBridge","wsBaseId","WSChannel","that","WebSocket","onopen","ev","onerror","onmessage","wsMessage","onclose","close","event","postWsToSubApp","netThis","send","scrollTimeGap","ScrollView","bottomTime","topTime","onScroll","onScrollTop","onScrollBottom","target","scrollTop","offsetHeight","scrollHeight","c","direct","children","forEach","child","_$scroll","toString","eachChild","Page","cur","tabs","tabStates","tab","lodash__WEBPACK_IMPORTED_MODULE_3___default","isSelected","isMounted","t0","onTabClick","load","footer","right","keepHeader","titleBar","title","redDot","img","redDotView","cn","classnames__WEBPACK_IMPORTED_MODULE_2___default","_titleBar__WEBPACK_IMPORTED_MODULE_4__","center","sideBar","invisible","onTouchStart","elFooter","renderTabs","renderSingle","uid","ALPHABET","ID_LENGTH","rtn","charAt","Math","floor","random","Image","classnames__WEBPACK_IMPORTED_MODULE_1__","classnames__WEBPACK_IMPORTED_MODULE_1___default","n","_nav__WEBPACK_IMPORTED_MODULE_2__","startsWith","isDevelopment","NODE_ENV","PUBLIC_URL","REACT_APP_CENTER_HOST","hosts","centerhost","reshost","uqhost","unitxhost","uq-build","fetchOptions","headers","Content-Type","tryLocal","getCenterHost","centerUrlFromHost","centerWsFromHost","getResHost","promises","hostArr","hostValue","findIndex","fetchUrl","debugHostUrl","localCheck","results","all","j","hostString","indexOf","timeout","text","catch","Error","fetchLocalCheck","decodeUserToken","decodeGuestToken","jwt_decode__WEBPACK_IMPORTED_MODULE_0__","jwt_decode__WEBPACK_IMPORTED_MODULE_0___default","vTuidMain_VTuidMain","CVEntity","onNew","onList","onSearch","openPage","link","render","newButton","proxyLinks","isFrom","tonva_react_form","size","placeholder","entityRender","entityClick","tonva_tools","vTuidEdit_VTuidEdit","next","vTuidEdit_awaiter","vForm","reset","closePage","finish","getValues","save","unique","setError","isCalling","returnCall","openPageElement","editView","vTuidSelect_VTuidSelect","mainView","react_default","createElement","initKey","onSearchMain","PageItems","renderMainRow","clickMainRow","before","vTuidSelect_awaiter","searchMain","mainRowContent","ceasePage","showDiv","getIdFromObj","divView","renderDivRow","clickDivRow","divRowContent","showMain","rowContent","viewModel","ownerValue","divs","divItems","getDivItems","vTuidView_VTuidView","vTuidView_awaiter","alert","tools","buildForm","vTuidInfo_VTuidInfo","pageItems_TuidPageItems","tuid","search","vTuidList_VTuidMainListBase","vTuidList_awaiter","renderRow","clickRow","callOnSelected","rowKey","ownerTop","ownerObj","ownerId","onSelected","VTuidMainList","cTuid_CTuid","buildPageItems","first","searchArr","cTuid_CTuidMain","proxies","linkFromName","cFrom","cUqFrom","cTuidEditFromName","cTuidInfoFromName","cTuidSelectFromName","VTuidMain","VTuidEdit","VTuidList","schemaFrom","openVPage","edit","itemChanged","cTuidInfo","cTuid_CTuidInfo","merge","CTuidEdit","CTuidList","cTuid_CTuidSelect","VTuidSelect","VTuidInfo","vBand_VBand","renderContent","addRow","VFieldBand","vField","vBand_VArrBand","vArr","setAddRow","vBand_VSubmitBand","vSubmit","vSubmit_VSubmit","onClickSubmit","submit","isOk","disabled","caption","mobx_module","Rule","RuleRequired","defy","trim","NaN","RuleNum","RuleInt","isNaN","isInteger","RuleMin","min","check","RuleMax","max","vField_VField","fieldRes","init","buildRules","rules","required","null","checkRules","r","errors","readonly","FormMode","editable","vField_decorate","vField_VInputControl","renderError","ref","input","setInputValue","onFocus","onBlur","computeFields","onChange","currentTarget","setValue","inputGroup","suffix","ctrlCN","inputType","readOnly","maxLength","onKeyPress","RedMark","color","position","left","VStringField","KeyCode_Neg","KeyCode_Dot","vField_VNumberControl","ch","charCode","extraChars","onKeyDot","onKeyNeg","preventDefault","_a","vField_VIntField","VDecField","VTextField","VDateTimeField","vComputeField_VComputeField","vArr_VArr","ownerForm","onEditRow","rowPage","vArr_awaiter","valueBoxs","onRowChanged","rowValues","$owner","list","renderItem","showRow","editRow","editSubmitCaption","internalAddRow","newSubmitCaption","button","paddingTop","paddingBottom","arrsRes","arrRes","newSubmit","editSubmit","arrUI","vForm_VForm","buttonStyle","textAlign","paddingLeft","paddingRight","overflow","vTuidField_VTuidField","vTuidField_awaiter","showInfo","boxId","idBox","bandsBuilder_BandsBuilder","layout","formItems","bandsOnFly","bandsFromLayout","bands","bandsFromFields","bandFromArr","bandFromField","formItem","rfn","resFromName","buildVField","vFields","vArrs","onFormSubmit","buildFormValues","buildBands","bandColl","bandsBuilder","build","band","getVFields","f","getVArr","getVSubmit","rows","row","fn","initValues","arrList","ctrl","fieldName","valueFromFieldName","propName","buildFieldValues","array","deep","buildObservableValues","vForm_decorate","HttpChannel","isCenter","hostUrl","apiToken","showError","_host__WEBPACK_IMPORTED_MODULE_2__","keys","k","buildOptions","innerFetch","buildError","timeOutHandler","encodeURI","ok","statusText","ct","retJson","_ui_nav__WEBPACK_IMPORTED_MODULE_1__","_appBridge__WEBPACK_IMPORTED_MODULE_0__","Headers","append","resOptions","resLang","lodash__WEBPACK_IMPORTED_MODULE_0__","_","l","languages","setResOptions","_CApp__WEBPACK_IMPORTED_MODULE_0__","_tuid__WEBPACK_IMPORTED_MODULE_4__","_query__WEBPACK_IMPORTED_MODULE_6__","_map__WEBPACK_IMPORTED_MODULE_7__","_form_viewModel__WEBPACK_IMPORTED_MODULE_10__","_formUI__WEBPACK_IMPORTED_MODULE_12__","_ControllerUq__WEBPACK_IMPORTED_MODULE_13__","_CVEntity__WEBPACK_IMPORTED_MODULE_14__","control_ControlBase","formView","renderControl","hasError","filled","validate","control_Control","face","setProps","element","defaultValue","clearErrors","clearValue","isOK","getValueFromElement","rule","notes","buttonsControl_ButtonsControl","otherClick","onOther","readValues","nothing","btnOther","submitButton","otherButton","TxtRequired","charsControl_CharsControl","parseValue","lodash","classnames","form-control","has-success","is-invalid","is-valid","renderInput","stringControl_StringControl","ErrInvalidNumber","ErrMin","ErrMax","unknownControl_UnknownControl","role","unknownControl_EmptyControl","pickIdControl_PickIdControl","pick","fromPicked","onPicked","itemFromId","initCaption","String","controlContent","component","pickIdControl_decorate","pickTuidControl_PickTuidControl","onIdChanged","onFormValues","pickTuidControl_decorate","pickControl_PickControl","pickControl_awaiter","Content","pickControl_decorate","createControl","group","groupRow","createGroupControl","fieldRow","fieldType","defaultFaces","controls","createFieldControl","help","string","password","number","parseFloat","checkbox","trueValue","falseValue","checked","radiobox","selectedIndex","selectedOptions","pick-id","pick-tuid","textarea","int","dec","bool","ln","Entity","entities","typeId","fieldMaps","sys","sName","jName","tvApi","returns","schema","setSchema","buildFieldTuid","buildArrFieldsTuid","getTuid","arrName","fieldArr","an","buildFieldsParams","arrResult","pa","rowResult","packRow","packArr","charCodeAt","escape","unpackRow","unpackArr","ch0","fLen","to","vals","maxCacheSize","tuid_Tuid","queue","waitingIds","cache","buildIdBoxer","BoxId","prototype","defineProperty","writable","enumerable","getObj","getCacheValue","toJSON","idName","splice","_id","delete","defer","util","has","cacheTuids","moveToHead","shift","proxied","cacheValue","api","getApiFrom","tuids","tuidIds","cacheTuidFieldValues","afterCacheId","cacheDivIds","tuidGet","divName","cacheFieldsInValue","arrValues","tuidDiv","getDiv","tuidSave","inId","tuidSearch","tuidArrGet","tuidArrSave","tuidArrPos","showTuid","TuidMain","Main","TuidDiv","cacheIds","cUqFrm","getImportUq","retErrors","cTuidMainFromName","$proxy","action_Action","pack","sheet_Sheet","states","op","ops","actions","discription","appId","sheetSave","app","flow","sheetAction","brief","unpackSheet","flows","getSheet","getArchive","unpack","sheetArchive","sheetArchives","stateSheets","sheet_PageStateItems","stateSheetCount","s","count","getStateSheets","query_Query","isPaged","more","hasMore","startField","buildParams","unpackReturns","$page","query","table","book_Book","queryApiName","history_History","map_Map","queries","newAction","newQuery","add","del","pending_Pending","fieldDefaultValue","entities_Entities","sheets","books","maps","histories","pendings","tuidArr","actionArr","sheetArr","queryArr","bookArr","mapArr","historyArr","pendingArr","loadIds","clearCacheTimer","accesses","buildEntities","loadEntities","buildTuids","buildAccess","div","tuidUrl","cacheTimer","proxyColl","newTuid","fromType","fromObj","book","pending","uqId","newBook","newMap","newHistory","newSheet","newPending","buildSheet","mainFields","ownerField","af","bootstrapCreateRow","elementCreateRow","_control__WEBPACK_IMPORTED_MODULE_1__","RowContainer","cc","control","setInitValues","ElementRowContainer","BootStrapRowContainer","refetchApi","ApiBase","getHttpChannel","callFetch","TitleBar","logoutClick","_nav__WEBPACK_IMPORTED_MODULE_1__","showLogout","navChange","hasBack","href","debugLogout","rightView","b","nick","openWindow","DefaultRow","vQueryMain_VQueryMain","resetPage","loadPage","replacePage","pageResult","queryResult","again","renderExtra","rightClose","queryRow","vQuerySelect_VQuerySelect","vQuerySelect_awaiter","selectRow","vQuerySelect_QueryPageItems","cQuery_CQueryBase","cQuery_CQuery","VQueryMain","main","cQuery_CQuerySelect","VQuerySelect","ImageItemEdit","_itemEdit__WEBPACK_IMPORTED_MODULE_7__","overSize","upload","resUploader","resId","isChanged","_page__WEBPACK_IMPORTED_MODULE_6__","_resUploader__WEBPACK_IMPORTED_MODULE_3__","multiple","maxSize","border","padding","_image__WEBPACK_IMPORTED_MODULE_4__","_nav__WEBPACK_IMPORTED_MODULE_5__","mobx__WEBPACK_IMPORTED_MODULE_2__","Loading","ResUploader","files","fileInput","FormData","file","abortController","AbortController","signal","onFilesChange","tonva_tools__WEBPACK_IMPORTED_MODULE_2__","tonvaApp","cImportUqs","cUqCollection","tonva_react_form__WEBPACK_IMPORTED_MODULE_3__","onRowClick","selectUnitPage","appUnits","promiseChecks","roleAppUI","buildRoleAppUI","uqUI","newCUq","checks","retError","roles","lodash__WEBPACK_IMPORTED_MODULE_1___default","CUq","_uq__WEBPACK_IMPORTED_MODULE_4__","cUqArr","VAppMain","loadAppUnits","showUnsupport","appUnit","loadUqs","clearPrevPages","showMainPage","beforeStart","renderView","userName","sheetTypeId","getCUqFromId","navSheet","_centerApi__WEBPACK_IMPORTED_MODULE_5__","userAppUnits","appContent","appPage","_rule__WEBPACK_IMPORTED_MODULE_0__","_field__WEBPACK_IMPORTED_MODULE_1__","_face__WEBPACK_IMPORTED_MODULE_2__","_TonvaForm__WEBPACK_IMPORTED_MODULE_5__","FormView","buildRows","some","every","formRows","createRow","buildRow","buttonsRow","createButtons","_rowContainer__WEBPACK_IMPORTED_MODULE_4__","formRow","formRowCreator","_control__WEBPACK_IMPORTED_MODULE_3__","buttons","entityIcons","react__WEBPACK_IMPORTED_MODULE_0___default","tonva_react_form__WEBPACK_IMPORTED_MODULE_1__","fixWidth","ControllerUq","centerApi","vMain_VSheetMain","newClick","schemaClick","archivesClick","sheetStateClick","renderState","badge","getStateLabel","templet","statesCount","filter","isDev","vNew_VSheetNew","vNew_awaiter","valuesWithBox","onSave","leftFlowStyle","width","vSheetView_VSheetView","flowRow","preState","sheetView","removed","sheetData","vEdit_VSheetEdit","vEdit_awaiter","saveSheet","controllers_form","vSheetAction_VSheetAction","actionClick","vSheetAction_awaiter","acted","deleteClick","editClick","editSheet","actionButtons","startButtons","no","stateLabel","getActionLabel","backPage","vSchema_VSheetSchema","schemaStringify","vArchives_VArchives","archiveClick","vArchives_awaiter","processing","archiveRow","getArchives","vList_VSheetList","rowClick","vList_awaiter","pageStateItems","listRow","stateName","vArchived_VArchived","vSheet_VSheet","vSaved_VSheetSaved","restart","vSaved_awaiter","vSheetProcessing_VSheetProcessing","cSheet_CSheet","cSheet_awaiter","showSaved","loadStateSheetCount","createPageStateItems","VSheetMain","onSheet","me","$","sheetActPreState","sheetActState","changeStateCount","curState","delta","stateCount","VSheetNew","sheetNew","VSheetSaved","sheetSaved","VSheetEdit","sheetEdit","VSheetSchema","VArchives","VArchived","VSheetList","VSheetAction","VSheetProcessing","showArchived","showAction","showProcessing","onEvent","getSheetData","vCall","inBrief","getArchived","getStateUI","actionName","sheetTitle","disc","vBookMain_VBookMain","cBook_CBook","VBookMain","vUq_VUq","isSysVisible","linkItem","cLink","lists","tuidLinks","mapLinks","sheetLinks","actionLinks","queryLinks","bookLinks","historyLinks","pendingLinks","Fragment","isVisible","controllers_link","cTuidMain","cMap","cSheet","cAction","cQuery","cBook","cHistory","cPending","lowerPropertyName","cUq_CUq","schemaLoaded","CTuidMain","controllers_tuid","CTuidSelect","CTuidInfo","CQuery","CQuerySelect","CMap","CAction","CSheet","CBook","CHistory","controllers_history","CPending","baseUrl","loadEntites","collection","warn","tuidPlaceHolder","en","sheetFromTypeId","startSheet","entityName","cTuidEdit","entityType","cFromName","tUI","cEntity","getUI","VUq","vMain_VMapMain","itemRender","ItemRow","remove","valuesView","box","isLeaf","keyIndex","keyUI","keyUIs","keyContent","valuesContent","keyNone","addClick","removeClick","inputValues_VInputValues","onValuesSubmit","inputValues_awaiter","cMap_MapItem","cMap_CMap","cMap_awaiter","keysLen","keyFields","keysLast","idx","keyField","kn","searchParam","ki","searchOnKey","arr1","nullable","rowIndex","createItem","getLable","confirmDelete","template","v0","q","retFields","newItem","addItem","VMapMain","callParam","vActionMain_VActionMain","resultPage","mainPage","cAction_CAction","VActionMain","vPendingMain_VPendingMain","cPending_CPending","VPendingMain","vHistoryMain_VHistoryMain","cHistory_CHistory","VHistoryMain","ItemEdit","itemSchema","uiItem","internalStart","internalEnd","netToken","_uqApi__WEBPACK_IMPORTED_MODULE_0__","_wsChannel__WEBPACK_IMPORTED_MODULE_1__","userApi","_net__WEBPACK_IMPORTED_MODULE_0__","_user__WEBPACK_IMPORTED_MODULE_1__","account","verify","prop","left0","zero","num","fix","Controller","_net__WEBPACK_IMPORTED_MODULE_3__","onMessageReceive","onMessage","isLogined","unregisterReceiveHandler","receiveHandlerId","onDispose","vp","registerReceiveHandler","_resolve_$","View","VPage","_schema__WEBPACK_IMPORTED_MODULE_0__","_uiSchema__WEBPACK_IMPORTED_MODULE_1__","itemObservable","isFirst","loading","beforeLoad","loaded","allLoaded","firstSize","appendPosition","_items","mobx__WEBPACK_IMPORTED_MODULE_0__","topDiv","_uid__WEBPACK_IMPORTED_MODULE_1__","bottomDiv","setPageStart","unshift","reverse","maxCount","dict","Map","loadId","_loadIds","_loadId","TonvaForm","_formView__WEBPACK_IMPORTED_MODULE_2__","EasyDate","now","nDate","getDate","_date","hour","getHours","minute","getMinutes","month","getMonth","hm","getFullYear","SearchBox","allowEmptySearch","inputSize","lab","inputClassName","buttonText","RuleCustom","func","RulePredefined","rules_RuleNum","minMsg","maxMsg","checkMore","integer","widget_Widget","context","fieldProps","contextErrors","onInputChange","changeValue","container","visible","inNode","requiredFlag","FieldContainer","getUiItem","removeErrorWidget","addErrorWidget","isChanging","initData","newValue","fromElement","onChanging","onChanged","prev","allowChange","setDataValue","setElementValue","fieldClass","FieldClass","uiLabel","Templet","errorList","tag","textWidget_TextWidget","onKeyDown","internalOnKeyDown","keyCode","onEnter","checkContextRules","removeErrors","renderTemplet","renderErrors","numberWidget_NumberWidget","updownWidget_UpdownWidget","returnValue","isValidKey","dateWidget_DateWidget","checkBoxWidget_CheckBoxWidget","defaultChecked","selectWidget_SelectWidget","option","selectWidget_decorate","idWidget_IdWidget","idWidget_awaiter","pickId","clearContextError","required-item","cursor-pointer","idWidget_decorate","Unknown","dataType","uiType","dataTypes","buttonWidget_ButtonWidget","buttonWidget_awaiter","onButtonClick","observerRender","widget","widgetType","ButtonClass","context_Context","uiSchema","isRow","widgets","errorWidgets","subContexts","arrRowContexts","itemName","getDisabled","setDisabled","getReadOnly","setReadOnly","getVisible","setVisible","checkFieldRules","clearContextErrors","rowContext","setContextError","checkHasError","context_decorate","rowKeySeed","RowContext","parentContext","arrSchema","uiArr","itemSchemas","parentData","FormContext","ContextContainer","ArrComponent","selectable","deletable","restorable","getArrRowContexts","arrLabel","ArrContainer","RowSeperator","formSelectable","formDeletable","formRestorable","arrSelectable","arrDeletable","arrRestorable","ac","rc","rs","sep","typeofTemplet","factory","selectCheck","deleteIcon","$isSelected","$source","isDeleted","$isDeleted","onDelClick","editContainer","deleted","row-selected","Provider","imageWidget_ImageWidget","imageWidget_awaiter","imageItemEdit","imageSrc","end","ui_image","imageWidget_decorate","widgetsFactory","datetime","time","email","updown","image","checkboxes","radio","range","typeWidget","getItemSchema","getTypeWidget","WidgetClass","formRes","zh","form_Form","watch","formData","calcSelectOrDelete","DefaultContainer","DefaultFieldContainer","fieldLabelSize","labelView","fieldCol","DefaultFieldClass","DefaultButtonClass","DefaultRes","ui_res","py-3","Container","formContext","initDataItem","arrItem","arrItems","arrDict","arrItemOperated","formArrVal","beforeShow","buttonName","contextType","jkOrder_res","CN","team","staff","noStaff","noPost","product","usq","arrNew","arrEdit","packType","ratio","customer","detail","fromUnit","subject","products","price","quantity","amount","deliver","getMessage","newMessage","editSumbit","sectionTeam","teamPerson","teamOrganization","teamPosts","person","given","sur","gender","organization","productPackRowContent","rText","packName","tonva_react_uq","selectProduct","step1Next","cCustomerSelect","orderPage","customerPage","conformOrder","addProductRows","packRows","cProductSelect","priceRows","getPrices","productPage","stopOrder","step1SelectCustomer","addProduct","priceRow","retail","refQuantity","packId","renderPack","mapPrice","getBand","productId","sumAmount","toFixed","aa_bbJkOrder","uqUIs","Badge_Badge","badgeAlign","badgeVertical","LMR_LMR","cursor","LMR_decorate","FA_FA","spin","pull","pulse","rotate","flip","inverse","Muted","base_ListBase","pageItems","selectedItems","nextProps","clickable_Clickable","static_Static","selectable_Selectable","itemsArray","compare","_selectedItems","selected","labelId","si","buildItems","anySelected","onSelect","flex","marginBottom","htmlFor","selectable_decorate","list_List","listBase","nextState","nextContext","updateProps","isLoading","staticRow","list_decorate","PropRow","row_PropBorder","borderTop","row_PropGap","w","backgroundColor","valueAlignStart","valueAlignCenter","valueAlignEnd","row_LabeledPropRow","gridProps","bk","bg-white","renderLabel","renderProp","align","vAlign","col","full","alignValue","renderPropBody","renderPropContent","StringPropRow","NumberPropRow","row_ListPropRow","borderBottom","ComponentPropRow","propView_PropView","isGap","PropGrid_PropGrid","propView","listRow_ListRow","pressed","isIcon","noteNum","mid","viceSpan","vice","middle","midSize","unread","uv","va-action","listView_ListView","elHeader","itemClick","converter","ex","listItem","listView_decorate","stringItemEdit_StringItemEdit","edit_itemEdit","preValue","edit_Edit","defaultSepClassName","defaultRowContainerClassName","edit_awaiter","onItemChanged","onItemClick","itemEdit","createItemEdit","topBorderClassName","bottomBorderClassName","sepClassName","rowContainerClassName","topBorder","bottomBorder","elItems","divValue","userSetProp","Tab","_content","contentBuilder","tabs_Tabs","tabClick","selectedTab","tabBack","contentBack","notify","tabName","height","display","notifyCircle","FetchErrorView","reApi","_net__WEBPACK_IMPORTED_MODULE_1__","errContent","LocalData","Data","homeTabCur","module","exports","assigned","section","_super","searchOnPost","querySelect","cGetMessge_VMain","ret0","fromUser","vTuidMain_MyVTuidMain","$unitx","fieldTuidUI","myCTuid_awaiter","devApp","article","casNO","articles","cart","src_ui","cUsqArr","ui_awaiter","$$$/$unitx","DevApp/devappApi","JKDev/jkOrder","jkOrder","百灵威系统工程部/cart","aa-bb","src_App_0","click","App_awaiter","moniker","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","react_dom","URL","origin","response","status","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.687dcf19.chunk.js","sourcesContent":["export {left0} from './left0';\r\nexport * from './user';\r\nexport * from './net';\r\nexport * from './ui';\r\nexport * from './uid';\r\nexport {PageItems} from './pageItems';\r\nexport {CacheIds} from './cacheIds';\r\nexport * from './entry';\r\n\r\n","export * from './form';\r\nexport * from './list';\r\nexport * from './dropDownActions';\r\nexport * from './easyDate';\r\nexport * from './propGrid';\r\nexport * from './components';\r\nexport * from './media';\r\nexport * from './listView';\r\nexport * from './searchBox';\r\nexport * from './multiStep';\r\nexport * from './uid';\r\n","import * as React from 'react';\r\nimport { Controller, VPage, View } from 'tonva-tools';\r\nimport { Entity, Field, TuidMain } from '../entities';\r\nimport { CUq } from './uq/cUq';\r\nimport { VForm, FieldInputs, FieldCall, FormOptions, FormMode } from './form';\r\nimport { CQuerySelect } from './query';\r\nimport { FormUI, FieldTuidUI } from './formUI';\r\nimport { entityIcons } from './icons';\r\nimport { ControllerUq } from './ControllerUq';\r\n\r\nexport interface EntityUI {\r\n    form?: FormUI;\r\n}\r\n\r\nexport abstract class CEntity<T extends Entity, UI extends EntityUI> extends ControllerUq {\r\n    constructor(cUq: CUq, entity: T, ui: UI, res: any) {\r\n        super(cUq, res);\r\n        Object.setPrototypeOf(this.x, cUq.x);\r\n        let {name, typeName} = entity;\r\n        this.entity = entity;\r\n        this.ui = ui; // || entityUI.ui;\r\n        this.label = this.res.label || name;\r\n        this.icon = entityIcons[typeName];\r\n    }\r\n    readonly entity: T;\r\n    readonly ui: UI;\r\n\r\n    protected async beforeStart():Promise<boolean> {\r\n        //if (await super.beforeStart() === false) return false;\r\n        await this.entity.loadSchema();\r\n        return true;\r\n    }\r\n\r\n    createForm(onSubmit:()=>Promise<void>, values?:any, mode?:FormMode) {\r\n        let options = this.buildFormOptions(mode);\r\n        let ret = new VForm(options, onSubmit);\r\n        ret.setValues(values);\r\n        return ret;\r\n    }\r\n\r\n    private buildFormOptions(mode?:FormMode):FormOptions {\r\n        let {fields, arrFields} = this.entity;\r\n        let none, submitCaption, arrNewCaption, arrEditCaption, arrTitleNewButton;\r\n        if (this.res !== undefined) {\r\n            none = this.res['none'];\r\n            submitCaption = this.res['submit'];\r\n            arrNewCaption = this.res['arrNew'];\r\n            arrEditCaption = this.res['arrEdit'];\r\n            arrTitleNewButton = this.res['arrTitleNewButton'];\r\n        }\r\n        if (none === undefined) {\r\n            none = this.cUq.res['none'] || 'none';\r\n        }\r\n        if (submitCaption === undefined)\r\n            submitCaption = this.cUq.res['submit'] || 'Submit';\r\n        if (arrNewCaption === undefined)\r\n            arrNewCaption = this.cUq.res['arrNew'] || 'New';\r\n        if (arrEditCaption === undefined)\r\n            arrEditCaption = this.cUq.res['arrEdit'] || 'Edit';\r\n        if (arrTitleNewButton === undefined)\r\n        arrTitleNewButton = this.cUq.res['arrTitleNewButton'];\r\n        if (mode === undefined) mode = FormMode.new;\r\n        let formUI = this.ui.form;\r\n        let ret:FormOptions = {\r\n            fields: fields,\r\n            arrs: arrFields,\r\n            ui: formUI,\r\n            res: this.res || {},\r\n            inputs: this.buildInputs(formUI),\r\n            none: none,\r\n            submitCaption: submitCaption,\r\n            arrNewCaption: arrNewCaption,\r\n            arrEditCaption: arrEditCaption,\r\n            arrTitleNewButton: arrTitleNewButton,\r\n            mode: mode,\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    private buildInputs(formUI: FormUI):FieldInputs {\r\n        let {fields, arrFields} = this.entity;\r\n        let ret:FieldInputs = {};\r\n        this.buildFieldsInputs(ret, fields, undefined, formUI);\r\n        if (arrFields !== undefined) {\r\n            for (let arr of arrFields) {\r\n                let {name, fields} = arr;\r\n                let items = formUI && formUI.items;\r\n                this.buildFieldsInputs(ret, fields, name, items && items[name] as FormUI);\r\n            }\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    private buildFieldsInputs(ret:FieldInputs, fields:Field[], arr:string, formUI: FormUI) {\r\n        if (arr !== undefined) {\r\n            let arrFieldInputs = ret[arr];\r\n            if (arrFieldInputs === undefined) {\r\n                ret[arr] = arrFieldInputs = {};\r\n                ret = arrFieldInputs;\r\n            }\r\n        }\r\n        for (let field of fields) {\r\n            let {name, _tuid} = field;\r\n            if (_tuid === undefined) continue;\r\n            let fieldUI = formUI && formUI.items && formUI.items[name] as FieldTuidUI;\r\n            ret[name] = {\r\n                select: this.buildSelect(field, arr, fieldUI),\r\n                content: this.buildContent(field, arr),\r\n                placeHolder: this.cUq.getTuidPlaceHolder(_tuid),\r\n            };\r\n        }\r\n    }\r\n\r\n    protected buildSelect(field:Field, arr:string, fieldUI: FieldTuidUI):FieldCall {\r\n        return async (form:VForm, field:Field, values:any):Promise<any> => {\r\n            let {_tuid, _ownerField} = field;\r\n            let cTuidSelect = await (_tuid as TuidMain).cSelectFrom();\r\n            let param:any = undefined;\r\n            if (_ownerField !== undefined) param = form.getValue(_ownerField.name);\r\n            if (fieldUI && fieldUI.autoList === true) {\r\n                console.log('select search set param=empty string');\r\n                param = '';\r\n            }\r\n            let ret = await cTuidSelect.call(param);\r\n            cTuidSelect.removeCeased(); // 清除已经废弃的顶部页面\r\n            if (ret === undefined) return undefined;\r\n            let id = cTuidSelect.idFromItem(ret);\r\n            _tuid.useId(id);\r\n            return id;\r\n        };\r\n    }\r\n\r\n    protected buildContent(field:Field, arr:string): React.StatelessComponent<any> {\r\n        return;\r\n    }\r\n\r\n    cQuerySelect(queryName:string):CQuerySelect {\r\n        return this.cUq.cQuerySelect(queryName);\r\n    }\r\n}\r\n\r\nexport abstract class VEntity<T extends Entity, UI extends EntityUI, C extends CEntity<T, UI>> extends VPage<C> {\r\n    protected readonly entity: T;\r\n    protected readonly ui: UI;\r\n    constructor(controller: C) {\r\n        super(controller);\r\n        this.entity = controller.entity;\r\n        this.ui = controller.ui;\r\n    }\r\n\r\n    get label():string {return this.controller.label}\r\n\r\n    //private _form_$: VForm;\r\n    protected createForm(onSubmit:()=>Promise<void>, values?:any, mode?:FormMode): VForm {\r\n        //if (this._form_$ !== undefined) return this._form_$;\r\n        return this.controller.createForm(onSubmit, values, mode);\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {observable, has} from 'mobx';\r\nimport {User, Guest/*, UserInNav*/} from '../user';\r\nimport {Page} from './page';\r\nimport {netToken} from '../net/netToken';\r\nimport FetchErrorView from './fetchErrorView';\r\nimport {FetchError} from '../fetchError';\r\nimport {appUrl, setMeInFrame, logoutUqTokens, getExHash, getExHashPos} from '../net/appBridge';\r\nimport {LocalData} from '../local';\r\nimport {guestApi, logoutApis, setCenterUrl, setCenterToken, WSChannel, meInFrame, isDevelopment, host} from '../net';\r\nimport { WsBase, wsBridge } from '../net/wsChannel';\r\nimport { resOptions } from './res';\r\nimport { Loading } from './loading';\r\n\r\nimport 'font-awesome/css/font-awesome.min.css';\r\nimport '../css/va-form.css';\r\nimport '../css/va.css';\r\nimport '../css/animation.css';\r\n\r\nconst regEx = new RegExp('Android|webOS|iPhone|iPad|' +\r\n    'BlackBerry|Windows Phone|'  +\r\n    'Opera Mini|IEMobile|Mobile' , \r\n    'i');\r\nconst isMobile = regEx.test(navigator.userAgent);\r\nexport const mobileHeaderStyle = isMobile? {\r\n    minHeight:  '3em'\r\n} : undefined;\r\n\r\nconst logo = require('../img/logo.svg');\r\nlet logMark: number;\r\nconst logs:string[] = [];\r\n\r\nexport interface Props //extends React.Props<Nav>\r\n{\r\n    //view: JSX.Element | (()=>JSX.Element);\r\n    //start?: ()=>Promise<void>;\r\n    onLogined: ()=>Promise<void>;\r\n    notLogined?: ()=>Promise<void>;\r\n};\r\nlet stackKey = 1;\r\nexport interface StackItem {\r\n    key: number;\r\n    view: JSX.Element;\r\n    ceased: boolean;\r\n    confirmClose?: ()=>Promise<boolean>;\r\n    disposer?: ()=>void;\r\n}\r\nexport interface State {\r\n    stack: StackItem[];\r\n    wait: 0|1|2;\r\n    fetchError: FetchError\r\n}\r\n\r\nexport class NavView extends React.Component<Props, State> {\r\n    private stack: StackItem[];\r\n    private htmlTitle: string;\r\n    private waitCount: number = 0;\r\n    private waitTimeHandler?: NodeJS.Timer;\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.back = this.back.bind(this);\r\n        this.navBack = this.navBack.bind(this);\r\n        this.stack = [];\r\n        this.state = {\r\n            stack: this.stack,\r\n            wait: 0,\r\n            fetchError: undefined\r\n        };\r\n    }\r\n    async componentWillMount() {\r\n        window.addEventListener('popstate', this.navBack);\r\n    }\r\n\r\n    async componentDidMount()\r\n    {\r\n        nav.set(this);\r\n        /*\r\n        let start = this.props.start;\r\n        if (start !== undefined) {\r\n            await start();\r\n        }\r\n        else {\r\n        */\r\n            await nav.start();\r\n        //}\r\n    }\r\n\r\n    get level(): number {\r\n        return this.stack.length;\r\n    }\r\n\r\n    startWait() {\r\n        if (this.waitCount === 0) {\r\n            this.setState({wait: 1});\r\n            this.waitTimeHandler = global.setTimeout(\r\n                () => {\r\n                    this.waitTimeHandler = undefined;\r\n                    this.setState({wait: 2});\r\n                },\r\n                1000) as NodeJS.Timer;\r\n        }\r\n        ++this.waitCount;\r\n        this.setState({\r\n            fetchError: undefined,\r\n        });\r\n    }\r\n\r\n    endWait() {\r\n        setTimeout(() => {\r\n            /*\r\n            this.setState({\r\n                fetchError: undefined,\r\n            });*/\r\n            --this.waitCount;\r\n            if (this.waitCount === 0) {\r\n                if (this.waitTimeHandler !== undefined) {\r\n                    clearTimeout(this.waitTimeHandler);\r\n                    this.waitTimeHandler = undefined;\r\n                }\r\n                this.setState({wait: 0});\r\n            }\r\n        },100);\r\n    }\r\n\r\n    async onError(fetchError: FetchError)\r\n    {\r\n        let err = fetchError.error;\r\n        if (err !== undefined && err.unauthorized === true) {\r\n            await nav.showLogin(undefined);\r\n            return;\r\n        }\r\n        this.setState({\r\n            fetchError: fetchError,\r\n        });\r\n    }\r\n\r\n    show(view: JSX.Element, disposer?: ()=>void): number {\r\n        this.clear();\r\n        return this.push(view, disposer);\r\n    }\r\n\r\n    push(view: JSX.Element, disposer?: ()=>void): number {\r\n        this.removeCeased();\r\n        if (this.stack.length > 0) {\r\n            window.history.pushState('forward', null, null);\r\n        }\r\n        let key = stackKey++;\r\n        this.stack.push({\r\n            key: key,\r\n            view: view, \r\n            ceased: false,\r\n            disposer: disposer\r\n        });\r\n        this.refresh();\r\n        //console.log('push: %s pages', this.stack.length);\r\n        return key;\r\n    }\r\n\r\n    replace(view: JSX.Element, disposer?: ()=>void): number {\r\n        let item:StackItem = undefined;\r\n        let stack = this.stack;\r\n        if (stack.length > 0) {\r\n            item = stack.pop();\r\n            //this.popAndDispose();\r\n        }\r\n        let key = stackKey++;\r\n        this.stack.push({\r\n            key: key, \r\n            view: view, \r\n            ceased: false,\r\n            disposer: disposer\r\n        });\r\n        if (item !== undefined) this.dispose(item.disposer);\r\n        this.refresh();\r\n        //console.log('replace: %s pages', this.stack.length);\r\n        return key;\r\n    }\r\n\r\n    ceaseTop(level:number = 1) {\r\n        let p = this.stack.length - 1;\r\n        for (let i=0; i<level; i++, p--) {\r\n            if (p < 0) break;\r\n            let item = this.stack[p];\r\n            item.ceased = true;\r\n        }\r\n    }\r\n\r\n    pop(level:number = 1) {\r\n        let stack = this.stack;\r\n        let len = stack.length;\r\n        //console.log('pop start: %s pages level=%s', len, level);\r\n        if (level <= 0 || len <= 1) return;\r\n        if (len < level) level = len;\r\n        let backLevel = 0;\r\n        for (let i = 0; i < level; i++) {\r\n            if (stack.length === 0) break;\r\n            //stack.pop();\r\n            this.popAndDispose();\r\n            ++backLevel;\r\n        }\r\n        if (backLevel >= len) backLevel--;\r\n        this.refresh();\r\n        if (this.isHistoryBack !== true) {\r\n            //window.removeEventListener('popstate', this.navBack);\r\n            //window.history.back(backLevel);\r\n            //window.addEventListener('popstate', this.navBack);\r\n        }\r\n        //console.log('pop: %s pages', stack.length);\r\n    }\r\n\r\n    popTo(key: number) {\r\n        if (key === undefined) return;\r\n        if (this.stack.find(v => v.key === key) === undefined) return;\r\n        while (this.stack.length >0) {\r\n            let len = this.stack.length;\r\n            let top = this.stack[len-1];\r\n            if (top.key === key) break;\r\n            this.pop();\r\n        }\r\n    }\r\n\r\n    topKey():number {\r\n        let len = this.stack.length;\r\n        if (len === 0) return undefined;\r\n        return this.stack[len-1].key;\r\n    }\r\n\r\n    removeCeased() {\r\n        for (;;) {\r\n            let p=this.stack.length-1;\r\n            if (p < 0) break;\r\n            let top = this.stack[p];\r\n            if (top.ceased === false) break;\r\n            let item = this.stack.pop();\r\n            let {disposer} = item;\r\n            this.dispose(disposer);\r\n        }\r\n        this.refresh();\r\n    }\r\n\r\n    private popAndDispose() {\r\n        this.removeCeased();\r\n        let item = this.stack.pop();\r\n        if (item === undefined) return;\r\n        let {disposer} = item;\r\n        this.dispose(disposer);\r\n        this.removeCeased();\r\n        return item;\r\n    }\r\n\r\n    private dispose(disposer:()=>void) {\r\n        if (disposer === undefined) return;\r\n        let item = this.stack.find(v => v.disposer === disposer);\r\n        if (item === undefined) disposer();\r\n    }\r\n\r\n    clear() {\r\n        let len = this.stack.length;\r\n        while (this.stack.length > 0) this.popAndDispose();\r\n        //this.refresh();\r\n        if (len > 1) {\r\n            //window.removeEventListener('popstate', this.navBack);\r\n            //window.history.back(len-1);\r\n            //window.addEventListener('popstate', this.navBack);\r\n        }\r\n    }\r\n\r\n    regConfirmClose(confirmClose:()=>Promise<boolean>) {\r\n        let stack = this.stack;\r\n        let len = stack.length;\r\n        if (len === 0) return;\r\n        let top = stack[len-1];\r\n        top.confirmClose = confirmClose;\r\n    }\r\n\r\n    private isHistoryBack:boolean = false;\r\n    navBack() {\r\n        nav.log('backbutton pressed - nav level: ' + this.stack.length);\r\n        this.isHistoryBack = true;\r\n        this.back(true);\r\n        this.isHistoryBack = false;\r\n    }\r\n\r\n    async back(confirm:boolean = true) {\r\n        let stack = this.stack;\r\n        let len = stack.length;\r\n        if (len === 0) return;\r\n        if (len === 1) {\r\n            if (self != window.top) {\r\n                window.top.postMessage({type:'pop-app'}, '*');\r\n            }\r\n            return;\r\n        }\r\n        let top = stack[len-1];\r\n        if (confirm===true && top.confirmClose) {\r\n            if (await top.confirmClose()===true) this.pop();\r\n        }\r\n        else {\r\n            this.pop();\r\n        }\r\n    }\r\n\r\n    confirmBox(message?:string): boolean {\r\n        return window.confirm(message);\r\n    }\r\n    clearError = () => {\r\n        this.setState({fetchError: undefined});\r\n    }\r\n    render() {\r\n        const {wait, fetchError} = this.state;\r\n        let stack = this.state.stack;\r\n        let top = stack.length - 1;\r\n        let elWait = null, elError = null;\r\n        switch (wait) {\r\n            case 1:\r\n                elWait = <li className=\"va-wait va-wait1\">\r\n                </li>;\r\n                break;\r\n            case 2:\r\n                elWait = <li className=\"va-wait va-wait2\">\r\n                    <Loading />\r\n                </li>;\r\n                break;\r\n                //<i className=\"fa fa-spinner fa-spin fa-3x fa-fw\"></i>\r\n                //<span className=\"sr-only\">Loading...</span>\r\n        }\r\n        if (fetchError)\r\n            elError = <FetchErrorView clearError={this.clearError} {...fetchError} />\r\n        return (\r\n        <ul className='va'>\r\n            {\r\n                stack.map((item, index) => {\r\n                    let {key, view} = item;\r\n                    return <li key={key} style={index<top? {visibility: 'hidden'}:undefined}>\r\n                        {view}\r\n                    </li>\r\n                })\r\n            }\r\n            {elWait}\r\n            {elError}\r\n        </ul>\r\n        );\r\n    }\r\n\r\n    private refresh() {\r\n        // this.setState({flag: !this.state.flag});\r\n        this.setState({stack: this.stack });\r\n        // this.forceUpdate();\r\n    }\r\n}\r\n\r\nexport class Nav {\r\n    private nav:NavView;\r\n    private ws: WsBase;\r\n    private wsHost: string;\r\n    private local: LocalData = new LocalData();\r\n    @observable user: User/*InNav*/ = undefined;\r\n    language: string;\r\n    culture: string;\r\n    resUrl: string;\r\n\r\n    constructor() {\r\n        let {lang, district} = resOptions;\r\n        this.language = lang;\r\n        this.culture = district;\r\n    }\r\n\r\n    get guest(): number {\r\n        let guest = this.local.guest;\r\n        if (guest === undefined) return 0;\r\n        let g = guest.get();\r\n        if (g === undefined) return 0;\r\n        return g.guest;\r\n    }\r\n\r\n    set(nav:NavView) {\r\n        //this.logo = logo;\r\n        this.nav = nav;\r\n    }\r\n\r\n    registerReceiveHandler(handler: (message:any)=>Promise<void>):number {\r\n        if (this.ws === undefined) return;\r\n        return this.ws.onWsReceiveAny(handler);\r\n    }\r\n\r\n    unregisterReceiveHandler(handlerId:number) {\r\n        if (this.ws === undefined) return;\r\n        if (handlerId === undefined) return;\r\n        this.ws.endWsReceive(handlerId);\r\n    }\r\n\r\n    async onReceive(msg:any) {\r\n        if (this.ws === undefined) return;\r\n        await this.ws.receive(msg);\r\n    }\r\n\r\n    private async getUnitName() {\r\n        try {\r\n            let unitRes = await fetch('unit.json', {});\r\n            //if (unitRes)\r\n            let res = await unitRes.json();\r\n            return res.unit;\r\n        }\r\n        catch (err) {\r\n            this.local.unit.clear();\r\n            return;\r\n        }\r\n    }\r\n\r\n    private async loadUnit() {\r\n        let unitName:string;\r\n        let unit = this.local.unit.get();\r\n        if (unit !== undefined) {\r\n            if (isDevelopment !== true) return unit.id;\r\n            unitName = await this.getUnitName();\r\n            if (unitName === undefined) return;\r\n            if (unit.name === unitName) return unit.id;\r\n        }\r\n        else {\r\n            unitName = await this.getUnitName();\r\n            if (unitName === undefined) return;\r\n        }\r\n        let unitId = await guestApi.unitFromName(unitName);\r\n        if (unitId !== undefined) {\r\n            this.local.unit.set({id: unitId, name: unitName});\r\n        }\r\n        return unitId;\r\n    }\r\n\r\n    hashParam: string;\r\n    private centerHost: string;\r\n    async start() {\r\n        try {\r\n            let hash = document.location.hash;\r\n            if (hash !== undefined && hash.length > 0) {\r\n                let pos = getExHashPos();\r\n                if (pos < 0) pos = undefined;\r\n                this.hashParam = hash.substring(1, pos);\r\n            }\r\n            nav.clear();\r\n            this.startWait();\r\n            await host.start();\r\n            let {url, ws, resHost} = host;\r\n            this.centerHost = url;\r\n            this.resUrl = 'http://' + resHost + '/res/';\r\n            this.wsHost = ws;\r\n            setCenterUrl(url);\r\n            \r\n            let unit = await this.loadUnit();\r\n            meInFrame.unit = unit;\r\n\r\n            let guest:Guest = this.local.guest.get();\r\n            if (guest === undefined) {\r\n                guest = await guestApi.guest();\r\n            }\r\n            nav.setGuest(guest);\r\n\r\n            let exHash = getExHash();\r\n            let mif = setMeInFrame(exHash);\r\n            if (exHash !== undefined && window !== window.parent) {\r\n                if (mif !== undefined) {\r\n                    this.ws = wsBridge;\r\n                    console.log('this.ws = wsBridge in sub frame');\r\n                    //nav.user = {id:0} as User;\r\n                    if (self !== window.parent) {\r\n                        window.parent.postMessage({type:'sub-frame-started', hash: mif.hash}, '*');\r\n                    }\r\n                    // 下面这一句，已经移到 appBridge.ts 里面的 initSubWin，也就是响应从main frame获得user之后开始。\r\n                    //await this.showAppView();\r\n                    return;\r\n                }\r\n            }\r\n\r\n            let user: User = this.local.user.get();\r\n            if (user === undefined) {\r\n                let {notLogined} = this.nav.props;\r\n                if (notLogined !== undefined) {\r\n                    await notLogined();\r\n                }\r\n                else {\r\n                    await nav.showLogin(undefined);\r\n                }\r\n                return;\r\n            }\r\n\r\n            await nav.logined(user);\r\n        }\r\n        catch (err) {\r\n        }\r\n        finally {\r\n            this.endWait();\r\n        }\r\n    }\r\n\r\n    async showAppView() {\r\n        let {onLogined} = this.nav.props;\r\n        if (onLogined === undefined) {\r\n            nav.push(<div>NavView has no prop onLogined</div>);\r\n            return;\r\n        }\r\n        nav.clear();\r\n        await onLogined();\r\n        console.log('logined: AppView shown');\r\n    }\r\n\r\n    setGuest(guest: Guest) {\r\n        this.local.guest.set(guest);\r\n        netToken.set(0, guest.token);\r\n    }\r\n\r\n    saveLocalUser() {\r\n        this.local.user.set(this.user);\r\n    }\r\n\r\n    async logined(user: User, callback?: (user:User)=>Promise<void>) {\r\n        logoutApis();\r\n        let ws:WSChannel = this.ws = new WSChannel(this.wsHost, user.token);\r\n        ws.connect();\r\n\r\n        console.log(\"logined: %s\", JSON.stringify(user));\r\n        this.user = user;\r\n        this.saveLocalUser();\r\n        netToken.set(user.id, user.token);\r\n        if (callback !== undefined) //this.loginCallbacks.has)\r\n            callback(user);\r\n            //this.loginCallbacks.call(user);\r\n        else {\r\n            await this.showAppView();\r\n        }\r\n    }\r\n\r\n    async showLogin(callback?: (user:User)=>Promise<void>, top?:any, withBack?:boolean) {\r\n        let lv = await import('../entry/login');\r\n         let loginView = <lv.default withBack={withBack} callback={callback} top={top} />;\r\n        if (withBack !== true) {\r\n            this.nav.clear();\r\n            this.pop();\r\n        }\r\n        this.nav.push(loginView);\r\n    }\r\n\r\n    async showLogout(callback?: ()=>Promise<void>) {\r\n        nav.push(<Page header=\"安全退出\" back=\"close\">\r\n            <div className=\"m-5 border border-info bg-white rounded p-3 text-center\">\r\n                <div>退出当前账号不会删除任何历史数据，下次登录依然可以使用本账号</div>\r\n                <div className=\"mt-3\">\r\n                    <button className=\"btn btn-danger\" onClick={()=>this.logout(callback)}>退出</button>\r\n                </div>\r\n            </div>\r\n        </Page>);\r\n    }\r\n\r\n    async logout(callback?:()=>Promise<void>) { //notShowLogin?:boolean) {\r\n        this.local.logoutClear();\r\n        this.user = undefined; //{} as User;\r\n        logoutApis();\r\n        let guest = this.local.guest.get();\r\n        setCenterToken(0, guest && guest.token);\r\n        this.ws = undefined;\r\n        /*\r\n        if (this.loginCallbacks.has)\r\n            this.logoutCallbacks.call();\r\n        else {\r\n            if (notShowLogin === true) return;\r\n        }\r\n        await nav.start();\r\n        */\r\n        if (callback === undefined)\r\n            await nav.start();\r\n        else\r\n            await callback();\r\n    }\r\n\r\n    async changePassword() {\r\n        let cp = await import('../entry/changePassword');\r\n        nav.push(<cp.ChangePasswordPage />);\r\n    }\r\n\r\n    get level(): number {\r\n        return this.nav.level;\r\n    }\r\n    startWait() {\r\n        this.nav.startWait();\r\n    }\r\n    endWait() {\r\n        this.nav.endWait();\r\n    }\r\n    async onError(error: FetchError) {\r\n        await this.nav.onError(error);\r\n    }\r\n    show (view: JSX.Element, disposer?: ()=>void): void {\r\n        this.nav.show(view, disposer);\r\n    }\r\n    push(view: JSX.Element, disposer?: ()=>void): void {\r\n        this.nav.push(view, disposer);\r\n    }\r\n    replace(view: JSX.Element, disposer?: ()=>void): void {\r\n        this.nav.replace(view, disposer);\r\n    }\r\n    pop(level:number = 1) {\r\n        this.nav.pop(level);\r\n    }\r\n    topKey():number {\r\n        return this.nav.topKey();\r\n    }\r\n    popTo(key:number) {\r\n        this.nav.popTo(key);\r\n    }\r\n    clear() {\r\n        this.nav.clear();\r\n    }\r\n    navBack() {\r\n        this.nav.navBack();\r\n    }\r\n    ceaseTop(level?:number) {\r\n        this.nav.ceaseTop(level);\r\n    }\r\n    removeCeased() {\r\n        this.nav.removeCeased();\r\n    }\r\n    async back(confirm:boolean = true) {\r\n        await this.nav.back(confirm);\r\n    }\r\n    regConfirmClose(confirmClose: ()=>Promise<boolean>) {\r\n        this.nav.regConfirmClose(confirmClose);\r\n    }\r\n    confirmBox(message?:string): boolean {\r\n        return this.nav.confirmBox(message);\r\n    }\r\n    async navToApp(url: string, unitId: number, apiId?:number, sheetType?:number, sheetId?:number):Promise<void> {\r\n        return new Promise<void>((resolve, reject) => {\r\n            let sheet = this.centerHost.includes('http://localhost:') === true? 'sheet_debug':'sheet'\r\n            let uh = sheetId === undefined?\r\n                    appUrl(url, unitId) :\r\n                    appUrl(url, unitId, sheet, [apiId, sheetType, sheetId]);\r\n            console.log('navToApp: %s', JSON.stringify(uh));\r\n            nav.push(<article className='app-container'>\r\n                <span id={uh.hash} onClick={()=>this.back()} style={mobileHeaderStyle}>\r\n                    <i className=\"fa fa-arrow-left\" />\r\n                </span>\r\n                <iframe src={uh.url} />\r\n            </article>, \r\n            ()=> {\r\n                resolve();\r\n            });\r\n        });\r\n    }\r\n\r\n    navToSite(url: string) {\r\n        // show in new window\r\n        window.open(url);\r\n    }\r\n\r\n    get logs() {return logs};\r\n    log(msg:string) {\r\n        logs.push(msg);\r\n    }\r\n    logMark() {\r\n        let date = new Date();\r\n        logMark = date.getTime();\r\n        logs.push('log-mark: ' + date.toTimeString());\r\n    }\r\n    logStep(step:string) {\r\n        logs.push(step + ': ' + (new Date().getTime() - logMark));\r\n    }\r\n}\r\nexport const nav: Nav = new Nav();\r\n","import * as React from 'react';\r\nimport { CApp, AppUI } from './controllers';\r\nexport * from './entities';\r\nexport * from './controllers';\r\nexport * from './centerApi';\r\nexport * from './tools';\r\n\r\nfunction convertUIKeyToLowercase(obj: any) {\r\n    for (let i in obj) {\r\n        let v = obj[i];\r\n        obj[i.toLowerCase()] = v;\r\n        if (typeof v !== 'object') continue;\r\n        if (React.isValidElement(v)) continue;\r\n        if (Array.isArray(v) !== true) {\r\n            convertUIKeyToLowercase(v);\r\n            continue;\r\n        }\r\n        for (let i of (v as any[])) {\r\n            convertUIKeyToLowercase(i);\r\n        }\r\n    }\r\n}\r\n\r\n// const appName = 'JKDev/jkOrder';\r\nexport async function startApp(appName:string, ui: AppUI) {\r\n    convertUIKeyToLowercase(ui);\r\n    let cApp = new (ui && ui.CApp || CApp)(appName, ui || {uqs:{}} );\r\n    await cApp.start();\r\n}\r\n","import * as React from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport { jsonStringify } from '../../tools';\r\n\r\nexport type TypeViewModel = typeof ViewModel;\r\nexport type TypeView = React.StatelessComponent<{vm: ViewModel, className?:string|string[]}>;\r\nexport type TypeContent = React.StatelessComponent<any>;\r\n\r\nexport abstract class ViewModel {\r\n    protected abstract get view(): TypeView;\r\n    render(className?:string|string[]):JSX.Element {\r\n        if (this.view === undefined) return <div>??? viewModel 必须定义 view ???</div>\r\n        return React.createElement(this.view, {vm: this, className:className});\r\n    }\r\n}\r\n\r\nexport const PureJSONContent = (values, x?:any) => <>content: {jsonStringify(values)}</>;\r\nexport const JSONContent = observer(PureJSONContent);\r\nexport const RowContent = \r\n    (values) => <div className=\"px-3 py-2\">{jsonStringify(values)}</div>\r\n;\r\n","import { decodeGuestToken } from '../user';\r\nimport { CenterApi } from './uqApi';\r\n\r\nexport class GuestApi extends CenterApi {\r\n    async guest(): Promise<any> {\r\n        //let guest = nav.local.guest.get();\r\n        let ret = await this.get('', {});\r\n        switch (typeof ret) {\r\n            default: return;\r\n            case 'string': return decodeGuestToken(ret);\r\n            case 'object':\r\n                let guest = decodeGuestToken(ret.token);\r\n                return guest;\r\n        }\r\n    }\r\n\r\n    async unitFromName(unitName:string): Promise<number> {\r\n        let ret = await this.get(unitName);\r\n        return ret && ret.unit;\r\n    }\r\n}\r\n\r\nexport const guestApi = new GuestApi('tv/guest/', undefined);\r\n","export {WSChannel, wsBridge, postWsToTop} from './wsChannel';\r\nexport * from './apiBase';\r\nexport * from './guestApi';\r\nexport * from './uqApi';\r\nexport {meInFrame, isBridged, getExHash} from './appBridge';\r\nexport * from './host';\r\nexport {httpGet} from './httpChannel';\r\n","function replacer(key:string, value:any) {\r\n    let first = key.substr(0, 1);\r\n    switch (first) {\r\n        default: return value;\r\n        case '$':\r\n        case '_': return;\r\n    }\r\n}\r\n\r\nexport function jsonStringify(value:any) {\r\n    return JSON.stringify(value, replacer, ' ');\r\n}\r\n","import * as React from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport { BoxId, Tuid } from \"../entities\";\r\nimport { PureJSONContent } from '../controllers';\r\n\r\ntype TvTemplet = (values?:any, x?:any) => JSX.Element;\r\n\r\ninterface Props {\r\n    tuidValue: number|BoxId, \r\n    ui?: TvTemplet,\r\n    x?: any,\r\n    nullUI?: ()=>JSX.Element\r\n}\r\n\r\nfunction boxIdContent(bi: number|BoxId, ui:TvTemplet, x:any) {\r\n    if (typeof bi === 'number') return <>{bi}</>;\r\n    let {id, _$tuid, _$com} = bi as BoxId;\r\n    let t:Tuid = _$tuid;\r\n    if (t === undefined) {\r\n        if (ui !== undefined) return ui(bi, x);\r\n        return PureJSONContent(bi, x);\r\n    }\r\n    let com = ui || _$com;\r\n    if (com === undefined) {\r\n        com = bi._$com = t.getTuidContent();\r\n    }\r\n    let val = t.valueFromId(id);\r\n    if (typeof val === 'number') val = {id: val};\r\n    if (ui !== undefined) {\r\n        let ret = ui(val, x);\r\n        if (ret !== undefined) return ret;\r\n        return <>{id}</>;\r\n    }\r\n    return React.createElement(com, val);\r\n}\r\n\r\nconst Tv = observer(({tuidValue, ui, x, nullUI}:Props) => {\r\n    let ttv = typeof tuidValue;\r\n    switch (ttv) {\r\n        default:\r\n            if (ui === undefined)\r\n                return <>{ttv}-{tuidValue}</>;\r\n            else {\r\n                let ret = ui(tuidValue, x);\r\n                if (ret !== undefined) return ret;\r\n                return <>{tuidValue}</>;\r\n            }\r\n        case 'undefined':\r\n            break;\r\n        case 'object':\r\n            if (tuidValue !== null) return boxIdContent(tuidValue, ui, x);\r\n            break;\r\n        case 'number':\r\n            return <>id...{tuidValue}</>;\r\n    }       \r\n    if (nullUI === undefined) return <>null</>;\r\n    return nullUI();\r\n});\r\n\r\nexport const tv = (tuidValue:number|BoxId, ui?:TvTemplet, x?:any, nullUI?:()=>JSX.Element):JSX.Element => {\r\n    return <Tv tuidValue={tuidValue} ui={ui} x={x} nullUI={nullUI} />;\r\n};\r\n","export * from './jsonStringify';\r\nexport * from './tv';\r\n","export * from './nav';\r\nexport * from './titleBar';\r\nexport * from './page';\r\nexport * from './VM';\r\nexport * from './schema';\r\nexport * from './form';\r\nexport * from './edit';\r\nexport * from './res';\r\nexport * from './tabs';\r\nexport * from './loading';\r\nexport * from './image';\r\nexport * from './resUploader';","import _ from 'lodash';\r\nimport {nav} from '../ui';\r\nimport {uid} from '../uid';\r\nimport {uqTokenApi as uqTokenApi, callCenterapi, CenterAppApi, AppUq, centerToken, App, setCenterToken} from './uqApi';\r\nimport {setSubAppWindow} from './wsChannel';\r\nimport { host } from './host';\r\n\r\nexport interface UqToken {\r\n    name: string;\r\n    url: string;\r\n    urlDebug: string;\r\n    token: string;\r\n}\r\ninterface UqTokenAction extends UqToken {\r\n    resolve: (value?: UqToken | PromiseLike<UqToken>) => void;\r\n    reject: (reason?: any) => void;\r\n}\r\nconst uqTokens:{[uqName:string]: UqTokenAction}  = {};\r\nexport function logoutUqTokens() {\r\n    for (let i in uqTokens) uqTokens[i] = undefined;\r\n}\r\n\r\nexport interface AppInFrame {\r\n    hash: string;\r\n    unit: number;       // unit id\r\n    page?: string;\r\n    param?: string[];\r\n}\r\nconst appsInFrame:{[key:string]:AppInFrame} = {};\r\n\r\nclass AppInFrameClass implements AppInFrame {\r\n    hash: string;\r\n    private _unit: number;\r\n    get unit(): number {return this._unit;}       // unit id\r\n    set unit(val:number) { this._unit=val;}\r\n    page?: string;\r\n    param?: string[];\r\n}\r\n\r\nexport let meInFrame:AppInFrame = new AppInFrameClass();\r\n/* {\r\n    hash: undefined,\r\n    get unit():number {return } undefined, //debugUnitId,\r\n    page: undefined;\r\n    param: undefined,\r\n}*/\r\n\r\nexport function isBridged():boolean {\r\n    return self !== window.parent;\r\n}\r\n\r\nwindow.addEventListener('message', async function(evt) {\r\n    var message = evt.data;\r\n    switch (message.type) {\r\n        case 'sub-frame-started':\r\n            subFrameStarted(evt);\r\n            break;\r\n        case 'ws':\r\n            //wsBridge.receive(message.msg);\r\n            await nav.onReceive(message.msg);\r\n            break;\r\n        case 'init-sub-win':\r\n            await initSubWin(message);\r\n            break;\r\n        case 'pop-app':\r\n            nav.navBack();\r\n            break;\r\n        case 'center-api':\r\n            await callCenterApiFromMessage(evt.source as Window, message);\r\n            break;\r\n        case 'center-api-return':\r\n            bridgeCenterApiReturn(message);\r\n            break;\r\n        case 'app-api':\r\n            console.log(\"receive PostMessage: %s\", JSON.stringify(message));\r\n            let ret = await onReceiveAppApiMessage(message.hash, message.apiName);\r\n            console.log(\"onReceiveAppApiMessage: %s\", JSON.stringify(ret));\r\n            (evt.source as Window).postMessage({\r\n                type: 'app-api-return', \r\n                apiName: message.apiName,\r\n                url: ret.url,\r\n                urlDebug: ret.urlDebug,\r\n                token: ret.token} as any, \"*\");\r\n            break;\r\n        case 'app-api-return':\r\n            console.log(\"app-api-return: %s\", JSON.stringify(message));\r\n            console.log('await onAppApiReturn(message);');\r\n            await onAppApiReturn(message);\r\n            break;\r\n        default:\r\n            this.console.log('message: %s', JSON.stringify(message));\r\n            break;\r\n    }\r\n});\r\n\r\nfunction subFrameStarted(evt:any) {\r\n    var message = evt.data;\r\n    let subWin = evt.source as Window;\r\n    setSubAppWindow(subWin);\r\n    hideFrameBack(message.hash);\r\n    let msg:any = _.clone(nav.user);\r\n    msg.type = 'init-sub-win';\r\n    subWin.postMessage(msg, '*');\r\n}\r\nfunction hideFrameBack(hash:string) {\r\n    let el = document.getElementById(hash);\r\n    if (el !== undefined) el.hidden = true;\r\n}\r\nasync function initSubWin(message:any) {\r\n    console.log('initSubWin: set nav.user', message);\r\n    let user = nav.user = message; // message.user;\r\n    setCenterToken(user.id, user.token);\r\n    await nav.showAppView();\r\n}\r\nasync function onReceiveAppApiMessage(hash: string, apiName: string): Promise<UqToken> {\r\n    let appInFrame = appsInFrame[hash];\r\n    if (appInFrame === undefined) return {name:apiName, url:undefined, urlDebug:undefined, token:undefined};\r\n    let {unit} = appInFrame;\r\n    let parts = apiName.split('/');\r\n    let ret = await uqTokenApi.uq({unit: unit, uqOwner: parts[0], uqName: parts[1]});\r\n    if (ret === undefined) {\r\n        console.log('apiTokenApi.api return undefined. api=%s, unit=%s', apiName, unit);\r\n        throw 'api not found';\r\n    }\r\n    return {name: apiName, url: ret.url, urlDebug:ret.urlDebug, token: ret.token};\r\n}\r\n\r\nasync function onAppApiReturn(message:any) {\r\n    let {apiName, url, urlDebug, token} = message;\r\n    let action = uqTokens[apiName];\r\n    if (action === undefined) {\r\n        throw 'error app api return';\r\n        //return;\r\n    }\r\n    let realUrl = host.getUrlOrDebug(url, urlDebug);\r\n    console.log('onAppApiReturn(message:any): url=' + url + ', debug=' + urlDebug + ', real=' + realUrl);\r\n    action.url = realUrl;\r\n    action.token = token;\r\n    action.resolve(action);\r\n}\r\n\r\nexport function setMeInFrame(appHash: string):AppInFrame {\r\n    if (appHash) {\r\n        let parts = appHash.split('-');\r\n        let len = parts.length;\r\n        if (len > 0) {\r\n            let p = 1;\r\n            meInFrame.hash = parts[p++];\r\n            if (len>0) meInFrame.unit = Number(parts[p++]);\r\n            if (len>1) meInFrame.page = parts[p++];\r\n            if (len>2) meInFrame.param = parts.slice(p++);\r\n        }\r\n    }\r\n    return meInFrame;\r\n}\r\n\r\nexport function getExHashPos():number {\r\n    let hash = document.location.hash;\r\n    if (hash !== undefined && hash.length > 0) {\r\n        let pos = hash.lastIndexOf('#tv-');\r\n        if (pos < 0) pos = hash.lastIndexOf('#tvdebug-');\r\n        return pos;\r\n    }\r\n    return -1;\r\n}\r\n\r\nexport function getExHash():string {\r\n    let pos = getExHashPos();\r\n    if (pos < 0) return undefined;\r\n    return document.location.hash.substring(pos);\r\n}\r\n\r\nexport function appUrl(url: string, unitId: number, page?:string, param?:any[]):{url:string; hash:string} {\r\n    let u:string;\r\n    for (;;) {\r\n        u = uid();\r\n        let a = appsInFrame[u];\r\n        if (a === undefined) {\r\n            appsInFrame[u] = {hash:u, unit:unitId};\r\n            break;\r\n        }\r\n    }\r\n    url += '#tv-' + u + '-' + unitId;\r\n    if (page !== undefined) {\r\n        url += '-' + page;\r\n        if (param !== undefined) {\r\n            for (let i=0; i<param.length; i++) {\r\n                url += '-' + param[i];\r\n            }\r\n        }\r\n    }\r\n    return {url: url, hash: u};\r\n}\r\n\r\nexport async function appUq(uq:string, uqOwner:string, uqName:string): Promise<UqToken> {\r\n    let uqToken = uqTokens[uq];\r\n    if (uqToken !== undefined) return uqToken;\r\n    if (!isBridged()) {\r\n        uqToken = await uqTokenApi.uq({unit: meInFrame.unit, uqOwner:uqOwner, uqName:uqName});\r\n        if (uqToken === undefined) {\r\n            let err = 'unauthorized call: uqTokenApi center return undefined!';\r\n            throw err;\r\n        }\r\n        if (uqToken.token === undefined) uqToken.token = centerToken;\r\n        let {url, urlDebug} = uqToken;\r\n        let realUrl = host.getUrlOrDebug(url, urlDebug);\r\n        console.log('realUrl: %s', realUrl);\r\n        uqToken.url = realUrl;\r\n        uqTokens[uq] = uqToken;\r\n        return uqToken;\r\n    }\r\n    console.log(\"appApi parent send: %s\", meInFrame.hash);\r\n    uqToken = {\r\n        name: uq,\r\n        url: undefined,\r\n        urlDebug: undefined,\r\n        token: undefined,\r\n        resolve: undefined,\r\n        reject: undefined,\r\n    };\r\n    uqTokens[uq] = uqToken;\r\n    return new Promise<UqToken>((resolve, reject) => {\r\n        uqToken.resolve = async (at) => {\r\n            let a = await at;\r\n            console.log('return from parent window: %s', JSON.stringify(a));\r\n            uqToken.url = a.url;\r\n            uqToken.urlDebug = a.urlDebug;\r\n            uqToken.token = a.token;\r\n            resolve(uqToken);\r\n        }\r\n        uqToken.reject = reject;\r\n        (window.opener || window.parent).postMessage({\r\n            type: 'app-api',\r\n            apiName: uq,\r\n            hash: meInFrame.hash,\r\n        }, \"*\");\r\n    });\r\n}\r\n\r\ninterface BridgeCenterApi {\r\n    id: string;\r\n    resolve: (value?:any)=>any;\r\n    reject: (reason?:any)=>void;\r\n}\r\nconst brideCenterApis:{[id:string]: BridgeCenterApi} = {};\r\nexport async function bridgeCenterApi(url:string, method:string, body:any):Promise<any> {\r\n    console.log('bridgeCenterApi: url=%s, method=%s', url, method);\r\n    return await new Promise<any>(async (resolve, reject) => {\r\n        let callId:string;\r\n        for (;;) {\r\n            callId = uid();\r\n            let bca = brideCenterApis[callId];\r\n            if (bca === undefined) {\r\n                brideCenterApis[callId] = {\r\n                    id: callId,\r\n                    resolve: resolve,\r\n                    reject: reject,\r\n                }\r\n                break;\r\n            }\r\n        }\r\n        (window.opener || window.parent).postMessage({\r\n            type: 'center-api',\r\n            callId: callId,\r\n            url: url,\r\n            method: method,\r\n            body: body\r\n        }, '*');\r\n    });\r\n}\r\n\r\nasync function callCenterApiFromMessage(from:Window, message):Promise<void> {\r\n    let {callId, url, method, body} = message;\r\n    let result = await callCenterapi.directCall(url, method, body);\r\n    from.postMessage({\r\n        type: 'center-api-return',\r\n        callId: callId,\r\n        result: result,\r\n    }, '*');\r\n}\r\n\r\nfunction bridgeCenterApiReturn(message:any) {\r\n    let {callId, result} = message;\r\n    let bca = brideCenterApis[callId];\r\n    if (bca === undefined) return;\r\n    brideCenterApis[callId] = undefined;\r\n    bca.resolve(result);\r\n}\r\n","import {nav} from '../ui/nav';\r\nimport {FetchError} from '../fetchError';\r\n\r\nexport interface HttpChannelUI {\r\n    startWait():void;\r\n    endWait():void;\r\n    showError(error:FetchError):Promise<void>;\r\n}\r\n\r\nexport class HttpChannelNavUI implements HttpChannelUI {\r\n    startWait() {\r\n        nav.startWait();\r\n    }\r\n    endWait() {\r\n        nav.endWait();\r\n    }\r\n    async showError(error:FetchError):Promise<void> {\r\n        nav.endWait();\r\n        /*\r\n        if (error.name === 'SyntaxError') {\r\n            error = {\r\n                name: error.name,\r\n                message: error.message,\r\n            }\r\n        }*/\r\n        await nav.onError(error);\r\n    }\r\n}\r\n\r\n","import _ from 'lodash';\r\nimport {HttpChannel} from './httpChannel';\r\nimport {HttpChannelUI, HttpChannelNavUI} from './httpChannelUI';\r\nimport {appUq, meInFrame, logoutUqTokens} from './appBridge';\r\nimport {ApiBase} from './apiBase';\r\nimport { host } from './host';\r\nimport { nav } from '../ui';\r\n\r\nlet channelUIs:{[name:string]: HttpChannel} = {};\r\nlet channelNoUIs:{[name:string]: HttpChannel} = {};\r\n\r\nexport function logoutApis() {\r\n    channelUIs = {};\r\n    channelNoUIs = {};\r\n    logoutUnitxApis();\r\n    logoutUqTokens();\r\n}\r\n\r\ninterface UqLocal {\r\n    value: any;\r\n    tick?: number;\r\n    isNet?: boolean;\r\n}\r\ninterface UqLocals {\r\n    user: number;\r\n    unit: number;\r\n    uqs: {[uq:string]: UqLocal};\r\n}\r\n\r\nconst uqLocalEntities = 'uqLocalEntities';\r\nclass CacheUqLocals {\r\n    private local:UqLocals;\r\n\r\n    async loadAccess(uqApi: UqApi):Promise<any> {\r\n        try {\r\n            let {uqOwner, uqName} = uqApi;\r\n            if (this.local === undefined) {\r\n                let ls = localStorage.getItem(uqLocalEntities);\r\n                if (ls !== null) {\r\n                    this.local = JSON.parse(ls);\r\n                }\r\n            }\r\n            if (this.local !== undefined) {\r\n                let {user, uqs} = this.local;\r\n                if (user !== loginedUserId || uqs === undefined) {\r\n                    this.local = undefined;\r\n                }\r\n                else {\r\n                    for (let i in uqs) {\r\n                        let ul = uqs[i];\r\n                        ul.isNet = undefined;\r\n                    }\r\n                }\r\n            }\r\n            if (this.local === undefined) {\r\n                this.local = {\r\n                    user: loginedUserId,\r\n                    unit: undefined,\r\n                    uqs: {}\r\n                };\r\n            }\r\n\r\n            let ret: any;\r\n            let un = uqOwner+'/'+uqName;\r\n            let uq = this.local.uqs[un];\r\n            if (uq !== undefined) {\r\n                let {value} = uq;\r\n                ret = value;\r\n            }\r\n            if (ret === undefined) {\r\n                ret = await uqApi.__loadAccess();\r\n                this.saveLocal(un, ret);\r\n            }\r\n            return _.cloneDeep(ret);\r\n        }\r\n        catch (err) {\r\n            this.local = undefined;\r\n            localStorage.removeItem(uqLocalEntities);\r\n            throw err;\r\n        }\r\n    }\r\n\r\n    private saveLocal(uqName:string, accessValue: any) {\r\n        this.local.uqs[uqName] = {\r\n            value: accessValue,\r\n            isNet: true,\r\n        }\r\n        let str = JSON.stringify(this.local);\r\n        localStorage.setItem(uqLocalEntities, str);\r\n    }\r\n\r\n    async checkAccess(uqApi: UqApi):Promise<boolean> {\r\n        let {uqOwner, uqName} = uqApi;\r\n        let un = uqOwner+'/'+uqName;\r\n        let uq = this.local.uqs[un];\r\n        if (uq === undefined) return false;\r\n        let {isNet, value} = uq;\r\n        if (isNet === true) return true;\r\n        let ret = await uqApi.__loadAccess();\r\n        let isMatch = _.isMatch(value, ret);\r\n        if (isMatch === false) {\r\n            this.saveLocal(un, ret);\r\n            return false;\r\n        }\r\n        uq.isNet = true;\r\n        return true;\r\n    }\r\n}\r\n\r\nconst localUqs = new CacheUqLocals;\r\nexport class UqApi extends ApiBase {\r\n    private access:string[];\r\n    uqOwner: string;\r\n    uqName: string;\r\n    uq: string;\r\n\r\n    constructor(basePath: string, uqOwner: string, uqName: string, access:string[], showWaiting?: boolean) {\r\n        super(basePath, showWaiting);\r\n        if (uqName) {\r\n            this.uqOwner = uqOwner;\r\n            this.uqName = uqName;\r\n            this.uq = uqOwner + '/' + uqName;\r\n        }\r\n        this.access = access;\r\n        this.showWaiting = showWaiting;\r\n    }\r\n\r\n    protected async getHttpChannel(): Promise<HttpChannel> {\r\n        let channels: {[name:string]: HttpChannel};\r\n        let channelUI: HttpChannelNavUI;\r\n        if (this.showWaiting === true || this.showWaiting === undefined) {\r\n            channels = channelUIs;\r\n            channelUI = new HttpChannelNavUI();\r\n        }\r\n        else {\r\n            channels = channelNoUIs;\r\n        }\r\n        let channel = channels[this.uq];\r\n        if (channel !== undefined) return channel;\r\n        let uqToken = await appUq(this.uq, this.uqOwner, this.uqName);\r\n        this.token = uqToken.token;\r\n        channel = new HttpChannel(false, uqToken.url, uqToken.token, channelUI);\r\n        return channels[this.uq] = channel;\r\n    }\r\n\r\n\r\n    async update():Promise<string> {\r\n        return await this.get('update');\r\n    }\r\n\r\n    async __loadAccess():Promise<any> {\r\n        let acc = this.access === undefined?\r\n            '' :\r\n            this.access.join('|');\r\n        let ret = await this.get('access', {acc:acc});\r\n        return ret;\r\n    }\r\n\r\n    async loadAccess():Promise<any> {\r\n        return await localUqs.loadAccess(this);\r\n    }\r\n\r\n    async loadEntities():Promise<any> {\r\n        return await this.get('entities');\r\n    }\r\n\r\n    async checkAccess():Promise<boolean> {\r\n        return await localUqs.checkAccess(this);\r\n    }\r\n\r\n    async schema(name:string):Promise<any> {\r\n        return await this.get('schema/' + name);\r\n    }\r\n\r\n    async schemas(names:string[]):Promise<any[]> {\r\n        return await this.post('schema', names);\r\n    }\r\n\r\n    async tuidGet(name:string, id:number):Promise<any> {\r\n        return await this.get('tuid/' + name + '/' + id);\r\n    }\r\n\r\n    async tuidGetAll(name:string):Promise<any[]> {\r\n        return await this.get('tuid-all/' + name + '/');\r\n    }\r\n\r\n    async tuidSave(name:string, params):Promise<any> {\r\n        return await this.post('tuid/' + name, params);\r\n    }\r\n\r\n    async tuidSearch(name:string, arr:string, owner:number, key:string, pageStart:string|number, pageSize:number):Promise<any> {\r\n        let ret = await this.post('tuids/' + name, {\r\n            arr: arr,\r\n            owner: owner,\r\n            key: key,\r\n            pageStart: pageStart,\r\n            pageSize: pageSize\r\n        });\r\n        return ret;\r\n    }\r\n    async tuidArrGet(name:string, arr:string, owner:number, id:number):Promise<any> {\r\n        return await this.get('tuid-arr/' + name + '/' + owner + '/' + arr + '/' + id);\r\n    }\r\n    async tuidArrGetAll(name:string, arr:string, owner:number):Promise<any[]> {\r\n        return await this.get('tuid-arr-all/' + name + '/' + owner + '/' + arr + '/');\r\n    }\r\n    async tuidArrSave(name:string, arr:string, owner:number, params):Promise<any> {\r\n        return await this.post('tuid-arr/' + name + '/' + owner + '/' + arr + '/', params);\r\n    }\r\n    async tuidArrPos(name:string, arr:string, owner:number, id:number, order:number):Promise<any> {\r\n        return await this.post('tuid-arr-pos/' + name + '/' + owner + '/' + arr + '/', {\r\n            id: id,\r\n            $order: order\r\n        });\r\n    }\r\n\r\n    async tuidIds(name:string, arr:string, ids:number[]):Promise<any[]> {\r\n        try {\r\n            let url = 'tuidids/' + name + '/';\r\n            if (arr !== undefined) url += arr;\r\n            else url += '$';\r\n            let ret = await this.post(url, ids);\r\n            return ret;\r\n        }\r\n        catch (e) {\r\n            console.error(e);\r\n        }\r\n    }\r\n\r\n    async proxied(name:string, proxy:string, id:number):Promise<any> {\r\n        try {\r\n            let url = 'tuid-proxy/' + name + '/' + proxy + '/' + id;\r\n            let ret = await this.get(url);\r\n            return ret;\r\n        }\r\n        catch (e) {\r\n            console.error(e);\r\n        }\r\n    }\r\n\r\n    async sheetSave(name:string, data:object):Promise<any> {\r\n        return await this.post('sheet/' + name, data);\r\n    }\r\n\r\n    async sheetAction(name:string, data:object) {\r\n        return await this.put('sheet/' + name, data);\r\n    }\r\n\r\n    async stateSheets(name:string, data:object) {\r\n        return await this.post('sheet/' + name + '/states', data);\r\n    }\r\n\r\n    async stateSheetCount(name:string):Promise<any> {\r\n        return await this.get('sheet/' + name + '/statecount');\r\n    }\r\n\r\n    async getSheet(name:string, id:number):Promise<any> {\r\n        return await this.get('sheet/' + name + '/get/' + id);\r\n    }\r\n\r\n    async sheetArchives(name:string, data:object):Promise<any> {\r\n        return await this.post('sheet/' + name + '/archives', data);\r\n    }\r\n\r\n    async sheetArchive(name:string, id:number):Promise<any> {\r\n        return await this.get('sheet/' + name + '/archive/' + id);\r\n    }\r\n\r\n    async action(name:string, data:object):Promise<any> {\r\n        return await this.post('action/' + name, data);\r\n    }\r\n\r\n    async page(name:string, pageStart:any, pageSize:number, params:any):Promise<string> {\r\n        let p:any;\r\n        switch (typeof params) {\r\n            case 'undefined': p = {key: ''}; break;\r\n            default: p = _.clone(params); break;\r\n        }\r\n        p['$pageStart'] = pageStart;\r\n        p['$pageSize'] = pageSize;\r\n        return await this.post('query-page/' + name, p);\r\n    }\r\n\r\n    async query(name:string, params:any):Promise<any> {\r\n        let ret = await this.post('query/' + name, params);\r\n        return ret;\r\n    }\r\n/*\r\n    async history(name:string, pageStart:any, pageSize:number, params:any):Promise<string> {\r\n        let p = _.clone(params);\r\n        p['$pageStart'] = pageStart;\r\n        p['$pageSize'] = pageSize;\r\n        let ret = await this.post('history/' + name, p);\r\n        return ret;\r\n    }\r\n\r\n    async book(name:string, pageStart:any, pageSize:number, params:any):Promise<string> {\r\n        let p = _.clone(params);\r\n        p['$pageStart'] = pageStart;\r\n        p['$pageSize'] = pageSize;\r\n        let ret = await this.post('history/' + name, p);\r\n        return ret;\r\n    }\r\n*/\r\n    async user():Promise<any> {\r\n        return await this.get('user');\r\n    }\r\n}\r\n\r\nlet channels:{[unitId:number]: HttpChannel} = {};\r\n\r\nexport function logoutUnitxApis() {\r\n    channels = {};\r\n}\r\n\r\nexport class UnitxApi extends UqApi {\r\n    private unitId:number;\r\n    constructor(unitId:number) {\r\n        super('tv/', undefined, undefined, undefined, true);\r\n        this.unitId = unitId;\r\n    }\r\n\r\n    protected async getHttpChannel(): Promise<HttpChannel> {\r\n        let channel = channels[this.unitId];\r\n        if (channel !== undefined) return channel;\r\n        return channels[this.unitId] = await this.buildChannel();\r\n    }\r\n\r\n    private async buildChannel():Promise<HttpChannel> {\r\n        let channelUI = new HttpChannelNavUI();\r\n        let centerAppApi = new CenterAppApi('tv/', undefined);\r\n        let ret = await centerAppApi.unitxUq(this.unitId);\r\n        let {token, url, urlDebug} = ret;\r\n        let realUrl = host.getUrlOrDebug(url, urlDebug);\r\n        this.token = token;\r\n        return new HttpChannel(false, realUrl, token, channelUI);\r\n    }\r\n}\r\n\r\nlet centerHost:string;\r\n\r\nexport function setCenterUrl(url:string) {\r\n    console.log('setCenterUrl %s', url);\r\n    centerHost = url;\r\n    centerToken = undefined;\r\n    centerChannel = undefined;\r\n    centerChannelUI = undefined;\r\n}\r\n\r\nexport let centerToken:string|undefined = undefined;\r\n\r\nlet loginedUserId:number = 0;\r\nexport function setCenterToken(userId:number, t?:string) {\r\n    loginedUserId = userId;\r\n    centerToken = t;\r\n    console.log('setCenterToken %s', t);\r\n    centerChannel = undefined;\r\n    centerChannelUI = undefined;\r\n}\r\n\r\nlet centerChannelUI:HttpChannel;\r\nlet centerChannel:HttpChannel;\r\nfunction getCenterChannelUI():HttpChannel {\r\n    if (centerChannelUI !== undefined) return centerChannelUI;\r\n    return centerChannelUI = new HttpChannel(true, centerHost, centerToken, new HttpChannelNavUI());\r\n}\r\nfunction getCenterChannel():HttpChannel {\r\n    if (centerChannel !== undefined) return centerChannel;\r\n    return centerChannel = new HttpChannel(true, centerHost, centerToken);\r\n}\r\n\r\nexport abstract class CenterApi extends ApiBase {\r\n    constructor(path: string, showWaiting?: boolean) {\r\n        super(path, showWaiting);\r\n    }\r\n\r\n    protected async getHttpChannel(): Promise<HttpChannel> {\r\n        return (this.showWaiting === true || this.showWaiting === undefined)?\r\n            getCenterChannelUI():\r\n            getCenterChannel();\r\n    }\r\n}\r\n\r\nconst uqTokens = 'uqTokens';\r\nexport class UqTokenApi extends CenterApi {\r\n    private local: UqLocals;\r\n    async uq(params: {unit:number, uqOwner:string, uqName:string}):Promise<any> {\r\n        try {\r\n            let {unit:unitParam, uqOwner, uqName} = params;\r\n            if (this.local === undefined) {\r\n                let ls = localStorage.getItem(uqTokens);\r\n                if (ls !== null) {\r\n                    this.local = JSON.parse(ls);\r\n                }\r\n            }\r\n            if (this.local !== undefined) {\r\n                let {unit, user} = this.local;\r\n                if (unit !== unitParam || user !== loginedUserId) this.local = undefined;\r\n            }\r\n            if (this.local === undefined) {\r\n                this.local = {\r\n                    user: loginedUserId,\r\n                    unit: params.unit,\r\n                    uqs: {}\r\n                };\r\n            }\r\n\r\n            let un = uqOwner+'/'+uqName;\r\n            let nowTick = new Date().getTime();\r\n            let uq = this.local.uqs[un];\r\n            if (uq !== undefined) {\r\n                let {tick, value} = uq;\r\n                if ((nowTick - tick) < 24*3600*1000) {\r\n                    return _.clone(value);\r\n                }\r\n            }\r\n            let ret = await this.get('app-uq', params);\r\n            this.local.uqs[un] = {\r\n                tick: nowTick,\r\n                value: ret,\r\n            }\r\n            localStorage.setItem(uqTokens, JSON.stringify(this.local));\r\n            return _.clone(ret);\r\n        }\r\n        catch (err) {\r\n            this.local = undefined;\r\n            localStorage.removeItem(uqTokens);\r\n            throw err;\r\n        }\r\n    }\r\n}\r\n\r\nexport const uqTokenApi = new UqTokenApi('tv/tie/', undefined);\r\n\r\nexport class CallCenterApi extends CenterApi {\r\n    directCall(url:string, method:string, body:any):Promise<any> {\r\n        return this.call(url, method, body);\r\n    }\r\n}\r\nexport const callCenterapi = new CallCenterApi('', undefined);\r\n\r\nexport interface App {\r\n    id: number;\r\n    uqs: AppUq[];\r\n}\r\n\r\nexport interface AppUq {\r\n    id: number;\r\n    uqOwner: string;\r\n    uqName: string;\r\n    access: string;\r\n}\r\n\r\nexport interface UqService {\r\n    id: number;\r\n    url: string;\r\n    urlDebug: string;\r\n    token: string;\r\n}\r\n\r\nconst appUqs = 'appUqs';\r\n\r\nexport class CenterAppApi extends CenterApi {\r\n    private cachedUqs: App;\r\n    async uqs(appOwner:string, appName:string):Promise<App> {\r\n        let ret:any;\r\n        let ls = localStorage.getItem(appUqs);\r\n        if (ls !== null) {\r\n            let rLs = JSON.parse(ls);\r\n            let {appOwner:rAppOwner, appName:rAppName, value} = rLs;\r\n            if (appOwner === rAppOwner && appName === rAppName) ret = value;\r\n        }\r\n        if (ret === undefined) {\r\n            ret = await this.uqsPure(appOwner, appName);\r\n            let obj = {\r\n                appOwner:appOwner, \r\n                appName:appName, \r\n                value: ret,\r\n            }\r\n            localStorage.setItem(appUqs, JSON.stringify(obj));\r\n        }\r\n        return this.cachedUqs = _.cloneDeep(ret);\r\n    }\r\n    private async uqsPure(appOwner:string, appName:string):Promise<App> {\r\n        return await this.get('tie/app-uqs', {appOwner:appOwner, appName:appName});\r\n    }\r\n    async checkUqs(appOwner:string, appName:string):Promise<boolean> {\r\n        let ret = await this.uqsPure(appOwner, appName);\r\n        let {id:cachedId, uqs:cachedUqs} = this.cachedUqs;\r\n        let {id:retId, uqs:retUqs} = ret;\r\n        if (cachedId !== retId) return false;\r\n        if (cachedUqs.length !== retUqs.length) return false;\r\n        let len = cachedUqs.length;\r\n        for (let i=0; i<len; i++) {\r\n            if (_.isMatch(cachedUqs[i], retUqs[i]) === false) return false;\r\n        }\r\n        return true;\r\n    }\r\n    async unitxUq(unit:number):Promise<UqService> {\r\n        return await this.get('tie/unitx-uq', {unit:unit});\r\n    }\r\n    async changePassword(param: {orgPassword:string, newPassword:string}) {\r\n        return await this.post('tie/reset-password', param);\r\n    }\r\n}\r\n\r\nexport async function loadAppUqs(appOwner:string, appName:string): Promise<App> {\r\n    let centerAppApi = new CenterAppApi('tv/', undefined);\r\n    //let unit = meInFrame.unit;\r\n    let ret = await centerAppApi.uqs(appOwner, appName);\r\n    centerAppApi.checkUqs(appOwner, appName).then(v => {\r\n        if (v === false) {\r\n            localStorage.removeItem(appUqs);\r\n            nav.start();\r\n        }\r\n    });\r\n    return ret;\r\n}\r\n","import * as React from 'react';\r\nimport classNames from 'classnames';\r\nimport { Controller } from 'tonva-tools';\r\n\r\nexport abstract class Link {\r\n    abstract onClick: () => void;\r\n    abstract render(className?:string):JSX.Element;\r\n}\r\n\r\nexport class CLink extends Link {\r\n    private controller: Controller;\r\n    protected icon:string|JSX.Element;\r\n    protected label:string|JSX.Element;\r\n\r\n    constructor(controller:Controller) {\r\n        super();\r\n        this.controller = controller;\r\n        this.icon = controller.icon;\r\n        this.label = controller.label;\r\n    }\r\n\r\n    onClick = async () => {\r\n        await this.controller.start();\r\n    }\r\n\r\n    render(className?:string) {\r\n        return <div\r\n            className={classNames('px-3', 'py-2', 'align-items-center', 'cursor-pointer', className)}\r\n            onClick={this.onClick}>\r\n            {this.icon} &nbsp; {this.label}\r\n        </div>;\r\n        //return React.createElement(this.view, className);\r\n    }\r\n}\r\n","export * from './cLink';\r\n","\r\nlet subAppWindow:Window;\r\nfunction postWsToSubApp(msg:any) {\r\n    if (subAppWindow === undefined) return;\r\n    subAppWindow.postMessage({\r\n        type: 'ws',\r\n        msg: msg\r\n    }, '*');\r\n}\r\n\r\nexport function setSubAppWindow(win:Window) {\r\n    subAppWindow = win;\r\n}\r\n\r\nexport function postWsToTop(msg:any) {\r\n    window.top.postMessage({\r\n        type: 'ws',\r\n        msg: msg\r\n    }, '*');\r\n}\r\n\r\nexport abstract class WsBase {\r\n    wsBaseId:string;\r\n    private handlerSeed = 1;\r\n    private anyHandlers:{[id:number]:(msg:any)=>Promise<void>} = {};\r\n    private msgHandlers:{[id:number]:{type:string, handler:(msg:any)=>Promise<void>}} = {};\r\n    onWsReceiveAny(handler:(msg:any)=>Promise<void>):number {\r\n        let seed = this.handlerSeed++;\r\n        this.anyHandlers[seed] = handler;\r\n        return seed;\r\n    }\r\n    onWsReceive(type:string, handler:(msg:any)=>Promise<void>):number {\r\n        let seed = this.handlerSeed++;\r\n        this.msgHandlers[seed] = {type:type, handler: handler};\r\n        return seed;\r\n    }\r\n    endWsReceive(handlerId:number) {\r\n        delete this.anyHandlers[handlerId];\r\n        delete this.msgHandlers[handlerId];\r\n    }\r\n    async receive(msg:any) {\r\n        let {$type} = msg;\r\n        for (let i in this.anyHandlers) {\r\n            await this.anyHandlers[i](msg);\r\n        }\r\n        for (let i in this.msgHandlers) {\r\n            let {type, handler} = this.msgHandlers[i];\r\n            if (type !== $type) continue;\r\n            await handler(msg);\r\n        }\r\n    }\r\n}\r\n\r\nlet wsBaseSeed = 1;\r\nexport class WsBridge extends WsBase {\r\n    wsBaseId:string = 'WsBridge seed ' + wsBaseSeed++;\r\n}\r\n\r\nexport const wsBridge = new WsBridge();\r\n\r\nexport class WSChannel extends WsBase {\r\n    wsBaseId:string = 'WSChannel seed ' + wsBaseSeed++;\r\n    static centerToken:string;\r\n    private wsHost: string;\r\n    private token: string;\r\n    private ws: WebSocket;\r\n\r\n    constructor(wsHost: string, token: string) {\r\n        super();\r\n        this.wsHost = wsHost;\r\n        this.token = token;\r\n    }\r\n\r\n    static setCenterToken(token?: string) {\r\n        WSChannel.centerToken = token;\r\n    }\r\n    \r\n    connect():Promise<void> {\r\n        //this.wsHost = wsHost;\r\n        //this.token = token || WSChannel.centerToken;\r\n        if (this.ws !== undefined) return;\r\n        let that = this;\r\n        return new Promise((resolve, reject) => {\r\n            let ws = new WebSocket(this.wsHost, this.token || WSChannel.centerToken);\r\n            console.log('connect webSocket %s', this.wsHost);\r\n            ws.onopen = (ev) => {\r\n                console.log('webSocket connected %s', this.wsHost);\r\n                that.ws = ws;\r\n                resolve();\r\n            };\r\n            ws.onerror = (ev) => {\r\n                reject('webSocket can\\'t open!');\r\n            };\r\n            ws.onmessage = async (msg) => await that.wsMessage(msg);\r\n            ws.onclose = (ev) => {\r\n                that.ws = undefined;\r\n                console.log('webSocket closed!');\r\n            }\r\n        });\r\n    }\r\n    close() {\r\n        if (this.ws !== undefined) {\r\n            this.ws.close();\r\n            this.ws = undefined;\r\n        }\r\n    }\r\n    private async wsMessage(event:any):Promise<void> {\r\n        try {\r\n            console.log('websocket message: %s', event.data);\r\n            let msg = JSON.parse(event.data);\r\n            postWsToSubApp(msg);\r\n            await this.receive(msg);\r\n        }\r\n        catch (err) {\r\n            console.log('ws msg error: ', err);\r\n        }\r\n    }\r\n    sendWs(msg:any) {\r\n        let netThis = this;\r\n        this.connect().then(() => {\r\n            netThis.ws.send(msg);\r\n        });\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {IComputedValue} from 'mobx';\r\nimport {observer} from 'mobx-react';\r\nimport classNames from 'classnames';\r\nimport _ from 'lodash';\r\nimport {TitleBar} from './titleBar';\r\n\r\nexport interface ScrollProps {\r\n    onScroll?: (e:any) => void;\r\n    onScrollTop?: () => void;\r\n    onScrollBottom?: () => void;\r\n}\r\ninterface ScrollViewProps extends ScrollProps {\r\n    className?: string;\r\n}\r\nconst scrollTimeGap = 100;\r\nclass ScrollView extends React.Component<ScrollViewProps, null> {\r\n    private bottomTime:number = 0;\r\n    private topTime:number = 0;\r\n\r\n    private onScroll = async (e) => {\r\n        let {onScroll, onScrollTop, onScrollBottom} = this.props;\r\n        if (onScroll) this.props.onScroll(e);\r\n        let el = e.target as HTMLBaseElement;\r\n        if (el.scrollTop < 30) {\r\n            //this.eachChild(this, 'top');\r\n            if (onScrollTop !== undefined) {\r\n                let topTime = new Date().getTime();\r\n                if (topTime-this.topTime > scrollTimeGap) {\r\n                    this.topTime = topTime;\r\n                    onScrollTop();\r\n                }\r\n            }\r\n        }\r\n        if (el.scrollTop + el.offsetHeight > el.scrollHeight - 30) {\r\n            //this.eachChild(this, 'bottom');\r\n            if (onScrollBottom !== undefined) {\r\n                let bottomTime = new Date().getTime();\r\n                if (bottomTime - this.bottomTime > scrollTimeGap) {\r\n                    this.bottomTime = bottomTime;\r\n                    onScrollBottom();\r\n                }\r\n            }\r\n        }\r\n    }\r\n    private eachChild(c:any, direct:'top'|'bottom') {\r\n        let { props } = c;\r\n        if (props === undefined)\r\n            return;\r\n        let { children } = props;\r\n        if (children === undefined)\r\n            return;\r\n        React.Children.forEach(children, (child, index) => {\r\n            let {_$scroll} = child as any;\r\n            if (_$scroll) _$scroll(direct);\r\n            console.log(child.toString());\r\n            this.eachChild(child, direct);\r\n        });\r\n    }\r\n    render() {\r\n        return (\r\n            <main className={this.props.className} onScroll={this.onScroll}>\r\n                {this.props.children}\r\n            </main>\r\n        );\r\n    }\r\n}\r\n\r\nexport interface Tab extends ScrollProps {\r\n    title: string;\r\n    icon?: string;\r\n    content?: JSX.Element | (()=>JSX.Element);\r\n    header?: string;\r\n    isSelected?: boolean;\r\n    redDot?: IComputedValue<number>;\r\n    load?: () => Promise<void>;\r\n}\r\nexport interface TabState extends Tab {\r\n    isMounted?: boolean;\r\n}\r\nexport interface PageProps extends ScrollProps {\r\n    back?: 'close' | 'back' | 'none';\r\n    header?: boolean | string | JSX.Element;\r\n    keepHeader?: boolean;\r\n    right?: JSX.Element;\r\n    sideBar?: JSX.Element;\r\n    footer?: JSX.Element;\r\n    tabs?: Tab[];\r\n    logout?: boolean | (()=>Promise<void>);\r\n}\r\nexport interface PageState {\r\n    cur?: Tab;\r\n    tabs?: TabState[];\r\n}\r\n\r\n@observer\r\nexport class Page extends React.Component<PageProps, PageState> {\r\n    private tabs:TabState[];\r\n    constructor(props: PageProps) {\r\n        super(props);\r\n        let {tabs} = props;\r\n        if (tabs === undefined || tabs.length === 0) return;\r\n        this.tabs = tabs;\r\n        let cur:Tab;\r\n        let tabStates:Tab[] = [];\r\n        for (let tab of tabs) {\r\n            let t:TabState = _.clone(tab);\r\n            if (cur === undefined) {\r\n                if (t.isSelected === true)\r\n                    cur = t;\r\n                else\r\n                    t.isSelected = false;\r\n            }\r\n            else {\r\n                t.isSelected = false;\r\n            }\r\n            t.isMounted = false;\r\n            tabStates.push(t);\r\n        }\r\n        this.state = {\r\n            cur: cur,\r\n            tabs: tabStates,\r\n        };\r\n    }\r\n\r\n    async componentDidMount() {\r\n        if (this.tabs === undefined) return;\r\n        let t0 = this.state.tabs[0];\r\n        if (t0 === undefined) return;\r\n        await this.onTabClick(t0);\r\n    }\r\n\r\n    private async onTabClick(tab: TabState) {\r\n        if (tab.isSelected === true) return;\r\n        let cur:TabState;\r\n        let tabs = this.state.tabs;\r\n        for (let t of tabs) {\r\n            if (t === tab) {\r\n                t.isSelected = true;\r\n                cur = t;\r\n            }\r\n            else\r\n                t.isSelected = false;\r\n        }\r\n        if (cur.isMounted !== true) {\r\n            let {load} = cur;\r\n            if (load !== undefined) {\r\n                await load();\r\n            }\r\n        }\r\n        this.setState({\r\n            cur: cur,\r\n            tabs: tabs\r\n        });\r\n    }\r\n\r\n    private onTouchStart(evt: React.TouchEvent<HTMLElement>) {\r\n    }\r\n\r\n    private renderTabs(footer: JSX.Element) {\r\n        const {header, back, right, keepHeader} = this.props;\r\n        let cur = this.state.cur;\r\n        let tabs = <div>{\r\n                this.state.tabs.map((tab, index) => {\r\n                    const {icon, isSelected, title, redDot} = tab;\r\n                    let img:any, redDotView:any, cn:any;\r\n                    if (icon !== undefined) img = <img src={icon} />;\r\n                    if (redDot !== undefined) {\r\n                        let v = redDot.get();\r\n                        if (v < 0) {\r\n                            cn = classNames('red-dot');\r\n                            redDotView = <u />;\r\n                        }\r\n                        else if (v > 0) {\r\n                            cn = classNames('red-dot', 'num');\r\n                            redDotView = <u>{v}</u>;\r\n                        }\r\n                    }\r\n                    return <div key={index}\r\n                        className= {classNames('va-tab', {cur: isSelected})}\r\n                        onClick={() => this.onTabClick(tab)}>\r\n                        {img}<div className={cn}>{title}{redDotView}</div>\r\n                    </div>\r\n                })\r\n            }</div>;\r\n        let titleBar;\r\n        if (header !== false) {\r\n            titleBar = <TitleBar \r\n                back={back} \r\n                center={keepHeader===true? (header as string) : (cur && (cur.header || cur.title))}\r\n                right={right} \r\n            />;\r\n        }\r\n\r\n        return <article className='page-container'>\r\n            {titleBar}\r\n            <section className=\"position-relative\">\r\n            {this.props.sideBar}\r\n            {\r\n                this.state.tabs.map((tab, index) => {\r\n                    let {isSelected, isMounted, content} = tab;\r\n                    if (isSelected === true || isMounted === true) {\r\n                        tab.isMounted = true;\r\n                        return <ScrollView key={index}\r\n                            className={classNames({invisible: isSelected===false})}\r\n                            onScroll={tab.onScroll}\r\n                            onScrollTop={tab.onScrollTop}\r\n                            onScrollBottom={tab.onScrollBottom}\r\n                        >\r\n                            {(typeof content)==='function'? (content as ()=>JSX.Element)():content}\r\n                        </ScrollView>;\r\n                    }\r\n                })\r\n            }\r\n            </section>\r\n            {tabs}\r\n            {footer}\r\n        </article>;\r\n    }\r\n    private renderSingle(footer: JSX.Element) {\r\n        const {back, header, right, onScroll, onScrollTop, onScrollBottom, children} = this.props;\r\n        let titleBar;\r\n        if (header !== false)\r\n            titleBar = <TitleBar \r\n                back={back} \r\n                center={header as any}\r\n                right={right}\r\n                logout={this.props.logout}\r\n            />;\r\n        return (\r\n            <article className='page-container' onTouchStart={this.onTouchStart}>\r\n                {titleBar}\r\n                <section className=\"position-relative\">\r\n                    {this.props.sideBar}\r\n                    <ScrollView\r\n                        onScroll={onScroll}\r\n                        onScrollTop={onScrollTop}\r\n                        onScrollBottom={onScrollBottom}\r\n                    >\r\n                        {children}\r\n                    </ScrollView>\r\n                </section>\r\n                {footer}\r\n            </article>\r\n        );\r\n    }\r\n\r\n    render() {\r\n        const {footer} = this.props;\r\n        let elFooter;\r\n        if (footer !== undefined) elFooter = <footer>{footer}</footer>;\r\n        if (this.tabs !== undefined)\r\n            return this.renderTabs(elFooter);\r\n        else\r\n            return this.renderSingle(elFooter);\r\n    }\r\n}\r\n","const ALPHABET = '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ';\r\nconst ID_LENGTH = 8;\r\n\r\nexport function uid():string {\r\n    let len = ALPHABET.length;\r\n    let rtn = '';\r\n    for (let i = 0; i < ID_LENGTH; i++) {\r\n        rtn += ALPHABET.charAt(Math.floor(Math.random() * len));\r\n    }\r\n    return rtn;\r\n}\r\n","import * as React from 'react';\r\nimport classNames from 'classnames';\r\nimport { nav } from './nav';\r\n\r\nexport interface ImageProps {\r\n    src: string;\r\n    className?: string;\r\n    style?: React.CSSProperties;\r\n}\r\n\r\nexport function Image(props: ImageProps) {\r\n    let {className, style, src} = props;\r\n    if (!src) {\r\n        return <div className={classNames(className, 'image-none')} style={style}>\r\n            <i className=\"fa fa-camera\" />\r\n        </div>;\r\n    }\r\n    if (src.startsWith(':') === true) {\r\n        src = nav.resUrl + src.substr(1);\r\n    }\r\n    return <img src={src} className={className} style={style} />;\r\n}\r\n","export const isDevelopment = process.env.NODE_ENV === 'development';\r\n\r\nconst centerHost = process.env['REACT_APP_CENTER_HOST'];\r\nconst centerDebugHost = 'localhost:3000'; //'192.168.86.64';\r\nconst resHost = process.env['REACT_APP_RES_HOST'] || centerHost;\r\nconst resDebugHost = 'localhost:3015'; //'192.168.86.63';\r\nconst uqDebugHost = 'localhost:3015'; //'192.168.86.63';\r\nconst uqDebugBuilderHost = 'localhost:3009';\r\ninterface HostValue {\r\n    value: string;\r\n    local: boolean;\r\n}\r\nconst hosts:{[name:string]:HostValue} = {\r\n    centerhost: {\r\n        value: process.env['REACT_APP_CENTER_DEBUG_HOST'] || centerDebugHost, \r\n        local: false\r\n    },\r\n    reshost: {\r\n        value: process.env['REACT_APP_RES_DEBUG_HOST'] || resDebugHost,\r\n        local: false\r\n    },\r\n    uqhost: {\r\n        value: process.env['REACT_APP_UQ_DEBUG_HOST'] || uqDebugHost, \r\n        local: false\r\n    },\r\n    unitxhost: {\r\n        value: process.env['REACT_APP_UQ_DEBUG_HOST'] || uqDebugHost, \r\n        local: false\r\n    },\r\n    \"uq-build\": {\r\n        value: process.env['REACT_APP_UQ_DEBUG_BUILDER_HOST'] || uqDebugBuilderHost, \r\n        local: false\r\n    }\r\n}\r\n\r\nfunction centerUrlFromHost(host:string) {return `http://${host}/`}\r\nfunction centerWsFromHost(host:string) {return `ws://${host}/tv/`}\r\n\r\nconst fetchOptions = {\r\n    method: \"GET\",\r\n    mode: \"no-cors\", // no-cors, cors, *same-origin\r\n    headers: {\r\n        \"Content-Type\": \"text/plain\"\r\n    },\r\n};\r\n\r\nclass Host {\r\n    url: string;\r\n    ws: string;\r\n    resHost: string;\r\n\r\n    async start() {\r\n        if (isDevelopment === true) {\r\n            await this.tryLocal();\r\n        }\r\n        let host = this.getCenterHost();\r\n        this.url = centerUrlFromHost(host);\r\n        this.ws = centerWsFromHost(host);\r\n        this.resHost = this.getResHost();\r\n    }\r\n\r\n    private debugHostUrl(host:string) {return `http://${host}/hello`}\r\n    private async tryLocal() {\r\n        let promises:PromiseLike<any>[] = [];\r\n        let hostArr:string[] = [];\r\n        for (let i in hosts) {\r\n            let hostValue = hosts[i];\r\n            let {value} = hostValue;\r\n            if (hostArr.findIndex(v => v === value) < 0) hostArr.push(value);\r\n        }\r\n\r\n        for (let host of hostArr) {\r\n            let fetchUrl = this.debugHostUrl(host);\r\n            promises.push(localCheck(fetchUrl));\r\n        }\r\n        let results = await Promise.all(promises);\r\n        let len = hostArr.length;\r\n        for (let i=0; i<len; i++) {\r\n            let local = results[i];\r\n            let host = hostArr[i];\r\n            for (let j in hosts) {\r\n                let hostValue = hosts[j];\r\n                if (hostValue.value === host) {\r\n                    hostValue.local = local;\r\n                }\r\n            }\r\n        }\r\n        /*\r\n        let p = 0;\r\n        for (let i in hosts) {\r\n            let hostValue = hosts[i];\r\n            hostValue.local = results[p];\r\n            ++p;\r\n        }\r\n        */\r\n    }\r\n\r\n    private getCenterHost():string {\r\n        let {value, local} = hosts.centerhost;\r\n        let hash = document.location.hash;\r\n        if (hash.includes('sheet_debug') === true) {\r\n            return value;\r\n        }\r\n        if (isDevelopment === true) {\r\n            if (local === true) return value;\r\n        }\r\n        return centerHost;\r\n    }\r\n\r\n    private getResHost():string {\r\n        let {value, local} = hosts.reshost;\r\n        let hash = document.location.hash;\r\n        if (hash.includes('sheet_debug') === true) {\r\n            return value;\r\n        }\r\n        if (isDevelopment === true) {\r\n            if (local === true) return value;\r\n        }\r\n        return resHost;\r\n    }\r\n\r\n    getUrlOrDebug(url:string, urlDebug:string):string {\r\n        if (isDevelopment !== true) return url;\r\n        if (!urlDebug) return url;\r\n        for (let i in hosts) {\r\n            let host = hosts[i];\r\n            let {value, local} = host;\r\n            let hostString = `://${i}/`;\r\n            let pos = urlDebug.indexOf(hostString);\r\n            if (pos > 0) {\r\n                if (local === false) return url;\r\n                urlDebug = urlDebug.replace(hostString, `://${value}/`);\r\n                return urlDebug;\r\n            }\r\n        }\r\n        return url;\r\n    }\r\n\r\n    async localCheck(urlDebug: string):Promise<boolean> {\r\n        return await localCheck(urlDebug);\r\n    }\r\n}\r\n\r\nexport const host:Host = new Host();\r\n\r\n// 因为测试的都是局域网服务器，甚至本机服务器，所以一秒足够了\r\n// 网上找了上面的fetch timeout代码。\r\n// 尽管timeout了，fetch仍然继续，没有cancel\r\n\r\n// 实际上，一秒钟不够。web服务器会自动停。重启的时候，可能会比较长时间。也许两秒甚至更多。\r\n//const timeout = 2000;\r\nconst timeout = 200;\r\n\r\nfunction fetchLocalCheck(url:string):Promise<any> {\r\n    return new Promise((resolve, reject) => {\r\n      fetch(url, fetchOptions as any)\r\n      .then(v => {\r\n          v.text().then(resolve).catch(reject);\r\n      })\r\n      .catch(reject);\r\n      const e = new Error(\"Connection timed out\");\r\n      setTimeout(reject, timeout, e);\r\n    });\r\n}\r\n\r\nasync function localCheck(url:string):Promise<boolean> {\r\n    try {\r\n        await fetchLocalCheck(url);\r\n        return true;\r\n    }\r\n    catch (err) {\r\n        return false;\r\n    }\r\n}\r\n","import jwtDecode from 'jwt-decode';\r\n\r\nexport interface Unit {\r\n    id: number;\r\n    name: string;\r\n}\r\n\r\nexport interface Guest {\r\n    id: number;             // id = 0\r\n    guest: number;\r\n    token: string;\r\n}\r\n\r\nexport interface User extends Guest {\r\n    id: number;\r\n    name: string;\r\n    nick?: string;\r\n    icon?: string;\r\n}\r\n\r\n/*\r\nexport class UserInNav {\r\n    private user: User;\r\n    constructor(user: User) {\r\n        this.user = user;\r\n    }\r\n    get id():number {return this.user.id}\r\n    get name(): string {return this.user.name}\r\n    get nick(): string {return this.user.nick}\r\n    get icon(): string {return this.user.icon || ('http://' + process.env['REACT_APP_CENTER_HOST'] + '/imgs/Bear-icon.png');}\r\n    get guest(): number {return this.user.guest}\r\n    get token(): string {return this.user.token}\r\n}\r\n*/\r\nexport function decodeUserToken(token: string): User {\r\n    let ret:any = jwtDecode(token);\r\n    let user: User = {\r\n        id: ret.id,\r\n        name: ret.name,\r\n        guest: ret.guest,\r\n        token: token,\r\n    };\r\n    return user;\r\n}\r\n\r\nexport function decodeGuestToken(token: string): Guest {\r\n    let ret:any = jwtDecode(token);\r\n    let guest: Guest = {\r\n        id: 0,\r\n        guest: ret.guest,\r\n        token: token,\r\n    };\r\n    return guest;\r\n}\r\n","const ALPHABET = '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ';\r\nconst ID_LENGTH = 8;\r\n\r\nexport function uid():string {\r\n    let len = ALPHABET.length;\r\n    let rtn = '';\r\n    for (let i = 0; i < ID_LENGTH; i++) {\r\n        rtn += ALPHABET.charAt(Math.floor(Math.random() * len));\r\n    }\r\n    return rtn;\r\n}\r\n","import * as React from 'react';\r\nimport { SearchBox, List, Muted, LMR } from 'tonva-react-form';\r\nimport { TuidMain, Entity } from '../../entities';\r\nimport { Page } from 'tonva-tools';\r\nimport { CLink } from '../link';\r\nimport { VEntity } from '../CVEntity';\r\nimport { CTuidMain, TuidUI } from './cTuid';\r\n\r\nexport class VTuidMain extends VEntity<TuidMain, TuidUI, CTuidMain> {\r\n    protected controller: CTuidMain;\r\n    onNew = () => this.event('new');\r\n    onList = () => this.event('list');\r\n    onSearch = async (key:string) => this.event('list', key);\r\n\r\n    async open(param?:any):Promise<void> {\r\n        this.openPage(this.view);\r\n    }\r\n\r\n    protected entityRender(link: CLink, index: number): JSX.Element {\r\n        return link.render();\r\n    }\r\n\r\n    protected async entityClick(link: CLink) {\r\n        await link.onClick();\r\n    }\r\n\r\n    protected get view() {\r\n        let {label, proxyLinks, isFrom} = this.controller;\r\n        let newButton:any;\r\n        if (isFrom === false) newButton = <button className=\"btn btn-outline-success ml-2\" onClick={this.onNew}>新增</button>;\r\n        let content:any;\r\n        if (proxyLinks === undefined) {\r\n            let right = <>\r\n                {newButton}\r\n                <button className=\"btn btn-outline-info ml-2\" onClick={this.onList}>全部</button>\r\n            </>;\r\n            content = <LMR className='m-3' right={right}>\r\n                <SearchBox className=\"w-100\" size=\"md\"\r\n                    onSearch={this.onSearch} \r\n                    placeholder={'搜索'+label} />\r\n            </LMR>;\r\n        }\r\n        else {\r\n            content = <List className=\"my-2\"\r\n                header={<Muted>{label} 代理下列Tuid</Muted>}\r\n                items={proxyLinks}\r\n                item={{render: this.entityRender, onClick:this.entityClick}} />\r\n        }\r\n        return () => <Page header={label}>\r\n            {content}\r\n        </Page>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { FA } from 'tonva-react-form';\r\nimport { Page } from 'tonva-tools';\r\nimport { VForm } from '../form';\r\nimport { VEntity } from '../CVEntity';\r\nimport { CTuidMain, TuidUI } from './cTuid';\r\nimport { TuidMain, Tuid } from '../../entities';\r\n\r\nexport type TypeVTuidEdit = typeof VTuidEdit;\r\n\r\nexport class VTuidEdit extends VEntity<Tuid, TuidUI, CTuidMain> {\r\n    private vForm: VForm;\r\n    private id: number;\r\n\r\n    async open(param?:any):Promise<void> {\r\n        this.vForm = this.createForm(this.onSubmit, param);\r\n        if (param !== undefined) {\r\n            this.id = param.id;\r\n        }\r\n        this.openPage(this.editView);\r\n    }\r\n\r\n    protected get editView() {\r\n        return () => <Page header={(this.id===undefined? '新增':'编辑') + ' - ' + this.label}>\r\n            {this.vForm.render('py-3')}\r\n        </Page>;\r\n    }\r\n\r\n    protected next = async () => {\r\n        this.vForm.reset();\r\n        this.closePage();\r\n    }\r\n\r\n    protected finish = () => {\r\n        this.closePage(2);\r\n        this.event('edit-end');\r\n    }\r\n\r\n    protected resetForm() {\r\n        this.vForm.reset();\r\n    }\r\n\r\n    protected onSubmit = async () => {\r\n        let values = this.vForm.getValues();\r\n        let ret = await this.controller.entity.save(this.id, values);\r\n        let {id} = ret;\r\n        if (id < 0) {\r\n            let {unique} = this.controller.entity;\r\n            if (unique !== undefined) {\r\n                for (let u of unique) {\r\n                    this.vForm.setError(u, '不能重复');\r\n                }\r\n            }\r\n            return;\r\n        }\r\n        if (this.controller.isCalling) {\r\n            this.returnCall(id);\r\n            this.closePage();\r\n            return;\r\n        }\r\n        this.openPageElement(<Page header={this.label + '提交成功'} back=\"none\">\r\n            <div className='m-3'>\r\n                <span className=\"text-success\">\r\n                    <FA name='check-circle' size='lg' /> 成功提交！\r\n                </span>\r\n                <div className='mt-5'>\r\n                    <button className=\"btn btn-primary mr-3\" onClick={this.next}>继续录入</button>\r\n                    <button className=\"btn btn-outline-primary\" onClick={this.finish}>不继续</button>\r\n                </div>\r\n            </div>\r\n        </Page>);\r\n\r\n        this.event('item-changed', {id: this.id, values: values});\r\n        return;\r\n    }\r\n\r\n    //protected view = TuidNewPage;\r\n}\r\n/*\r\nconst TuidNewPage = observer(({vm}:{vm:VmTuidEdit}) => {\r\n    let {label, id, vmForm} = vm;\r\n    return <Page header={(id===undefined? '新增':'编辑') + ' - ' + label}>\r\n        {vmForm.render('mx-3 my-2')}\r\n    </Page>;\r\n});\r\n*/","import { nav, Page } from 'tonva-tools';\r\nimport { VTuidMainListBase, VTuidDivListBase } from './vTuidList';\r\nimport { VEntity } from '../CVEntity';\r\nimport { Tuid } from '../../entities';\r\nimport { CTuid, TuidUI } from './cTuid';\r\nimport { SearchBox, List } from 'tonva-react-form';\r\nimport React from 'react';\r\nimport { RowContent } from '../form/viewModel';\r\nimport { observer } from 'mobx-react';\r\n\r\nexport class VTuidSelect extends VEntity<Tuid, TuidUI, CTuid<Tuid>> {\r\n    protected mainRowContent: (row:any) => JSX.Element;\r\n    protected divRowContent: (row:any) => JSX.Element;\r\n\r\n    async open(param?:any): Promise<void> {\r\n        if (param === undefined)\r\n            await this.showMain(param);\r\n        else\r\n            await this.showDiv(param);\r\n    }\r\n\r\n    private async showMain(param) {\r\n        this.mainRowContent = this.ui.rowContent || RowContent;\r\n        await this.controller.searchMain(param);\r\n        this.openPage(this.mainView);\r\n    }\r\n\r\n    private async showDiv(ownerValue: any) {\r\n        let {divs} = this.ui;\r\n        if (divs !== undefined) {\r\n            this.divRowContent = divs[this.entity.name].rowContent;\r\n        }\r\n        if (this.divRowContent === undefined) {\r\n            this.divRowContent = RowContent;\r\n        }\r\n        let divItems = await this.controller.getDivItems(ownerValue);\r\n        this.openPage(this.divView, {items: divItems});\r\n    }\r\n\r\n    protected mainView = observer(() => {\r\n        let header = <SearchBox className=\"mx-1 w-100\"\r\n            initKey={''}\r\n            onSearch={this.onSearchMain} placeholder={'搜索'+this.label} />;\r\n        return <Page header={header} back=\"close\">\r\n            <List\r\n                items={this.controller.PageItems.items}\r\n                item={{render: this.renderMainRow, onClick: this.clickMainRow}}\r\n                before={'搜索'+this.label+'资料'} />\r\n        </Page>;\r\n    });\r\n\r\n    onSearchMain = async (key:string) => {\r\n        await this.controller.searchMain(key);\r\n        //await this.PageItems.first(key);\r\n    }\r\n    renderMainRow = (item:any, index:number):JSX.Element => <this.mainRowContent {...item} />;\r\n    clickMainRow = async (item:any) => {\r\n        this.ceasePage();\r\n        if (this.controller.entity.owner === undefined) {\r\n            this.returnCall(item);\r\n            return;\r\n        }\r\n        await this.showDiv(this.entity.getIdFromObj(item));\r\n    }\r\n\r\n    protected divView = (param:any) => {\r\n        return <Page header=\"选择Div\">\r\n            <List\r\n                items={param.items}\r\n                item={{render: this.renderDivRow, onClick: this.clickDivRow}} />\r\n        </Page>;\r\n    }\r\n    renderDivRow = (item:any, index:number):JSX.Element => <this.divRowContent {...item} />;\r\n    clickDivRow = (item:any) => {\r\n        this.ceasePage();\r\n        this.returnCall(item);\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport { FA } from 'tonva-react-form';\r\nimport { Page } from 'tonva-tools';\r\nimport { jsonStringify } from '../../tools';\r\nimport { VForm } from '../form';\r\nimport { VEntity } from '../CVEntity';\r\nimport { TuidMain } from '../../entities';\r\nimport { TuidUI, CTuidMain } from './cTuid';\r\n\r\nexport type TypeVTuidView = typeof VTuidView;\r\n\r\nexport class VTuidView extends VEntity<TuidMain, TuidUI, CTuidMain> {\r\n    vForm: VForm;\r\n    id: number;\r\n\r\n    protected buildForm(param:any) {\r\n        this.vForm = this.createForm(undefined, param);\r\n    }\r\n\r\n    async open(param:any) {\r\n        this.buildForm(param);\r\n        this.openPage(this.view);\r\n    }\r\n\r\n    render(param:any) {\r\n        this.buildForm(param);\r\n        return this.vForm.render();\r\n    }\r\n\r\n    async loadId(id: number) {\r\n        this.id = id;\r\n    }\r\n\r\n    protected next = async () => {\r\n        this.vForm.reset();\r\n        this.closePage();\r\n    }\r\n\r\n    protected finish = () => {\r\n        this.closePage(2);\r\n    }\r\n\r\n    protected resetForm() {\r\n        this.vForm.reset();\r\n    }\r\n\r\n    protected onSubmit = async () => {\r\n        let values = this.vForm.getValues();\r\n        let ret = await this.entity.save(this.id, values);\r\n        if (ret) {\r\n            alert('这里还要判断返回值，先不处理了 \\n' + jsonStringify(ret));\r\n        }\r\n        this.openPage(() => <Page header={this.label + '提交成功'} back=\"none\">\r\n            <div className='m-3'>\r\n                <span className=\"text-success\">\r\n                    <FA name='check-circle' size='lg' /> 成功提交！\r\n                </span>\r\n                <div className='mt-5'>\r\n                    <button className=\"btn btn-primary mr-3\" onClick={this.next}>继续录入</button>\r\n                    <button className=\"btn btn-outline-primary\" onClick={this.finish}>不继续</button>\r\n                </div>\r\n            </div>\r\n        </Page>);\r\n        return;\r\n    }\r\n\r\n    protected view = () => <Page header={this.label}>\r\n            {this.vForm.render('py-3')}\r\n    </Page>;\r\n}\r\n","import React from 'react';\r\nimport { VTuidView } from './vTuidView';\r\n\r\nexport class VTuidInfo  extends VTuidView {\r\n/*\r\n    async open(param?:any) {\r\n        this.open(this.view);\r\n    }\r\n*/\r\n/*\r\n    private view = () => {\r\n        return <Page>\r\n            TuidInfo\r\n        </Page>\r\n    }\r\n*/\r\n}\r\n","import { PageItems } from 'tonva-tools';\r\nimport { Tuid } from \"../../entities\";\r\n\r\nexport class TuidPageItems<T> extends PageItems<T> {\r\n    private tuid: Tuid;\r\n    constructor(tuid: Tuid) {\r\n        super(true);\r\n        this.tuid = tuid;\r\n    }\r\n    protected async load(param:any, pageStart:any, pageSize:number):Promise<any[]> {\r\n        let ret = await this.tuid.search(param, pageStart, pageSize);\r\n        return ret;\r\n    }\r\n    protected setPageStart(item:any) {\r\n        this.pageStart = item === undefined? 0 : item.id;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport { FA, SearchBox, List } from 'tonva-react-form';\r\nimport { Page, PageItems } from 'tonva-tools';\r\nimport { jsonStringify } from '../../tools';\r\nimport { TuidMain, Entity, Tuid, TuidDiv } from '../../entities';\r\nimport { VEntity } from '../CVEntity';\r\nimport { TuidUI, CTuidMain, CTuidDiv } from './cTuid';\r\nimport { JSONContent, RowContent } from '../form/viewModel';\r\n\r\nexport abstract class VTuidMainListBase  extends VEntity<TuidMain, TuidUI, CTuidMain> {\r\n    protected rowContent: (row:any) => JSX.Element;\r\n    protected ownerId: number;\r\n\r\n    async open(param?:any) {\r\n        this.rowContent = this.ui.rowContent || RowContent;\r\n        if (this.entity.owner !== undefined) this.ownerId = Number(param);\r\n        // 初始查询, key是空的\r\n        //await this.onSearch('');\r\n        await this.controller.searchMain('');\r\n        this.openPage(this.view);\r\n    }\r\n\r\n    onSearch = async (key:string) => {\r\n        await this.controller.searchMain(key);\r\n        //await this.PageItems.first(key);\r\n    }\r\n    renderRow = (item:any, index:number):JSX.Element => <this.rowContent {...item} />;\r\n\r\n    protected abstract onSelected(item:any): Promise<void>;\r\n    private callOnSelected(item:any) {\r\n        if (this.onSelected === undefined) {\r\n            alert('onSelect is undefined');\r\n            return;\r\n        }\r\n        this.onSelected(item);\r\n    }\r\n    clickRow = (item:any) => {\r\n        this.callOnSelected(item);\r\n    }\r\n    private rowKey = (item:any) => {\r\n        let {id} = item;\r\n        return id;\r\n    }\r\n    protected view = observer(() => {\r\n        let header = <SearchBox className=\"mx-1 w-100\"\r\n            initKey={''}\r\n            onSearch={this.onSearch} placeholder={'搜索'+this.label} />;\r\n        let {owner} = this.entity;\r\n        let ownerTop;\r\n        if (owner !== undefined) {\r\n            let ownerObj = owner.valueFromId(this.ownerId);\r\n            ownerTop = <div>owner: {jsonStringify(ownerObj)}</div>;\r\n        }\r\n        return <Page header={header}>\r\n            {ownerTop}\r\n            <List\r\n                items={this.controller.PageItems.items}\r\n                item={{render: this.renderRow, onClick: this.clickRow, key:this.rowKey}}\r\n                before={'搜索'+this.label+'资料'} />\r\n        </Page>;\r\n    });\r\n}\r\n\r\nexport class VTuidMainList extends VTuidMainListBase {\r\n    protected async onSelected(item:any) {\r\n        if (this.controller.isFrom === false)\r\n            this.event('edit', item.id);\r\n        else\r\n            this.event('info', item.id);\r\n    }\r\n}\r\n\r\nexport abstract class VTuidDivListBase  extends VEntity<TuidDiv, TuidUI, CTuidDiv> {\r\n    protected ownerId: number;\r\n\r\n    async open(param?:any) {\r\n        //this.PageItems = new TuidPageItems(this.entity);\r\n        if (this.entity.owner !== undefined) this.ownerId = Number(param);\r\n        // 初始查询, key是空的\r\n        //await this.onSearch('');\r\n        await this.controller.searchMain('');\r\n        this.openPage(this.view);\r\n    }\r\n\r\n    onSearch = async (key:string) => {\r\n        await this.controller.searchMain(key);\r\n        //await this.PageItems.first(key);\r\n    }\r\n    renderRow = (item:any, index:number):JSX.Element => {\r\n        return <div className=\"px-3 py-2\">{jsonStringify(item)}</div>;\r\n    }\r\n\r\n    protected abstract onSelected(item:any): Promise<void>;\r\n    private callOnSelected(item:any) {\r\n        if (this.onSelected === undefined) {\r\n            alert('onSelect is undefined');\r\n            return;\r\n        }\r\n        this.onSelected(item);\r\n    }\r\n    clickRow = (item:any) => {\r\n        this.callOnSelected(item);\r\n    }\r\n\r\n    protected view = observer(() => {\r\n        let header = <SearchBox className=\"mx-1 w-100\"\r\n            initKey={''}\r\n            onSearch={this.onSearch} placeholder={'搜索'+this.label} />;\r\n        let {owner} = this.entity;\r\n        let ownerTop;\r\n        if (owner !== undefined) {\r\n            let ownerObj = owner.valueFromId(this.ownerId);\r\n            ownerTop = <div>owner: {jsonStringify(ownerObj)}</div>;\r\n        }\r\n        return <Page header={header}>\r\n            {ownerTop}\r\n            <List\r\n                items={this.controller.PageItems.items}\r\n                item={{render: this.renderRow, onClick: this.clickRow}}\r\n                before={'搜索'+this.label+'资料'} />\r\n        </Page>;\r\n    });\r\n}\r\n\r\nexport class VTuidDivList extends VTuidDivListBase {\r\n    protected async onSelected(item:any) {\r\n        this.event('edit', item.id);\r\n    }\r\n}\r\n","import _ from 'lodash';\r\nimport { TypeVPage, PageItems } from 'tonva-tools';\r\nimport { CEntity, EntityUI } from \"../CVEntity\";\r\nimport { TuidMain, Tuid, TuidDiv } from \"../../entities\";\r\nimport { VTuidMain } from './vTuidMain';\r\nimport { VTuidEdit } from './vTuidEdit';\r\nimport { VTuidSelect } from './vTuidSelect';\r\nimport { CUq } from \"../uq/cUq\";\r\nimport { CLink } from \"../link\";\r\nimport { VTuidInfo } from \"./vTuidInfo\";\r\nimport { TuidPageItems } from \"./pageItems\";\r\nimport { VTuidMainList } from './vTuidList';\r\n\r\nexport interface TuidUI extends EntityUI {\r\n    CTuidMain?: typeof CTuidMain;\r\n    CTuidEdit?: typeof CTuidEdit;\r\n    CTuidList?: typeof CTuidList;\r\n\r\n    CTuidSelect?: typeof CTuidSelect;\r\n    CTuidInfo?: typeof CTuidInfo;\r\n    content?: React.StatelessComponent<any>;\r\n    rowContent?: React.StatelessComponent<any>;\r\n    divs?: {\r\n        [div:string]: {\r\n            CTuidSelect?: typeof CTuidSelect;\r\n            content?: React.StatelessComponent<any>;\r\n            rowContent?: React.StatelessComponent<any>;\r\n        }\r\n    }\r\n}\r\n\r\nexport abstract class CTuid<T extends Tuid> extends CEntity<T, TuidUI> {\r\n    PageItems:PageItems<any>;\r\n\r\n    protected buildPageItems():PageItems<any> {\r\n        return new TuidPageItems(this.entity.owner || this.entity);\r\n    }\r\n\r\n    async searchMain(key:string) {\r\n        if (this.PageItems === undefined) {\r\n            this.PageItems = this.buildPageItems();\r\n        }\r\n        if (key !== undefined) await this.PageItems.first(key);\r\n    }\r\n\r\n    async getDivItems(ownerId:number):Promise<any[]> {\r\n        let ret = await this.entity.searchArr(ownerId, undefined, 0, 1000);\r\n        return ret;\r\n    }\r\n}\r\n\r\nexport class CTuidMain extends CTuid<TuidMain> {\r\n    constructor(cUq: CUq, entity: TuidMain, ui: TuidUI, res:any) {\r\n        super(cUq, entity, ui, res);\r\n        let tuid = this.entity;\r\n        this.proxies = tuid.proxies;\r\n        if (this.proxies !== undefined) {\r\n            this.proxyLinks = [];\r\n            for (let i in this.proxies) {\r\n                let link = this.cUq.linkFromName('tuid', i);\r\n                this.proxyLinks.push(link);\r\n            }\r\n        }\r\n    }\r\n\r\n    async from():Promise<CTuidMain> {\r\n        let ret = await this.entity.cFrom();\r\n        if (ret === undefined) return this;\r\n        return ret;\r\n    }\r\n\r\n    async cUqFrom():Promise<CUq> {\r\n        return await this.entity.cUqFrom();\r\n    }\r\n    async cEditFrom(): Promise<CTuidEdit> {\r\n        let cUq = await this.entity.cUqFrom();\r\n        return await cUq.cTuidEditFromName(this.entity.name);\r\n    }\r\n    async cInfoFrom(): Promise<CTuidInfo> {\r\n        let cUq = await this.entity.cUqFrom();\r\n        return await cUq.cTuidInfoFromName(this.entity.name);\r\n    }\r\n    async cSelectFrom(): Promise<CTuidSelect> {\r\n        let cUq = await this.entity.cUqFrom();\r\n        return await cUq.cTuidSelectFromName(this.entity.name);\r\n    }\r\n\r\n    getLable(tuid:Tuid):string {\r\n        if (tuid === this.entity) return this.label;\r\n        let {name} = tuid;\r\n        let {arrs} = this.res;\r\n        if (arrs !== undefined) {\r\n            let arr = arrs[name];\r\n            if (arr !== undefined) {\r\n                let label = arr.label;\r\n                if (label !== undefined) return label;\r\n            }\r\n        }\r\n        return name;\r\n    }\r\n\r\n    proxies: {[name:string]: TuidMain};\r\n    proxyLinks: CLink[];\r\n    isFrom: boolean;\r\n\r\n    protected get VTuidMain():typeof VTuidMain {return VTuidMain}\r\n    protected get VTuidEdit():typeof VTuidEdit {return VTuidEdit}\r\n    protected get VTuidList():typeof VTuidMainList {return VTuidMainList}\r\n\r\n    protected async internalStart(param?:any):Promise<void> {\r\n        this.isFrom = this.entity.schemaFrom !== undefined;\r\n        await this.openVPage(this.VTuidMain);\r\n    }\r\n\r\n    protected async onEvent(type:string, value:any) {\r\n        let v: TypeVPage<CTuidMain>;\r\n        switch (type) {\r\n            default: return;\r\n            case 'new': v = this.VTuidEdit; break;\r\n            case 'list': v = this.VTuidList; break;\r\n            case 'edit': await this.edit(value); return;\r\n            case 'item-changed': this.itemChanged(value); return;\r\n            case 'info': \r\n                let cTuidInfo = new CTuidInfo(this.cUq, this.entity, this.ui, this.res);\r\n                await cTuidInfo.start(value);\r\n                return;\r\n        }\r\n        await this.openVPage(v, value);\r\n    }\r\n\r\n    protected async edit(id:number) {\r\n        let values:any = undefined;\r\n        if (id !== undefined) {\r\n            values = await this.entity.load(id);\r\n        }\r\n        let v = this.VTuidEdit;\r\n        await this.openVPage(v, values);\r\n    }\r\n\r\n    private itemChanged({id, values}:{id:number, values: any}) {\r\n        if (this.PageItems === undefined) return;\r\n        let items = this.PageItems.items;\r\n        let item = items.find(v => v.id === id);\r\n        if (item !== undefined) {\r\n            _.merge(item, values);\r\n        }\r\n    }\r\n}\r\n\r\nexport class CTuidEdit extends CTuidMain {\r\n    protected async internalStart(id:number):Promise<void> {\r\n        await this.edit(id);\r\n    }\r\n}\r\n\r\nexport class CTuidList extends CTuidMain {\r\n    protected async internalStart(id:number):Promise<void> {\r\n        await this.openVPage(this.VTuidList);\r\n    }\r\n}\r\n\r\nexport class CTuidDiv extends CTuid<TuidDiv> {\r\n    protected async internalStart():Promise<void> {\r\n        alert('tuid div: ' + this.entity.name);\r\n    }\r\n}\r\n\r\nexport class CTuidSelect extends CTuid<Tuid> {\r\n    protected async internalStart(param?: any):Promise<void> {\r\n        await this.openVPage(this.VTuidSelect, param);\r\n    }\r\n    protected async beforeStart():Promise<boolean> {\r\n        //if (await super.beforeStart() === false) return false;\r\n        await this.entity.loadSchema();\r\n        if (this.PageItems !== undefined) this.PageItems.reset();\r\n        return true;\r\n    }\r\n    protected get VTuidSelect():typeof VTuidSelect {return VTuidSelect}\r\n    idFromItem(item:any) {\r\n        return item.id;\r\n    }\r\n}\r\n\r\nexport class CTuidInfo extends CTuid<Tuid> {\r\n    protected async internalStart(id: any):Promise<void> {\r\n        let data = await this.entity.load(id)\r\n        await this.openVPage(this.VTuidInfo, data);\r\n    }\r\n    protected get VTuidInfo():typeof VTuidInfo {return VTuidInfo}\r\n}\r\n","export * from './cTuid';\r\nexport * from './vTuidMain';\r\nexport * from './vTuidEdit';\r\nexport * from './vTuidInfo';\r\nexport * from './vTuidView';\r\n","import * as React from 'react';\r\nimport { VField } from './vField';\r\nimport { VArr } from './vArr';\r\nimport { VSubmit } from './vSubmit';\r\nimport { uid } from 'tonva-react-form';\r\n\r\nexport abstract class VBand {\r\n    protected label: string;\r\n    protected view = () => <div />;\r\n\r\n    constructor(label:string) {\r\n        this.label = label;\r\n    }\r\n\r\n    render():JSX.Element {\r\n        //text-sm-right\r\n        return <div key={this.key} className=\"px-3\">\r\n            <div className=\"form-group row\">\r\n                <label className=\"col-sm-2 col-form-label\">\r\n                    {this.label}\r\n                </label>\r\n                <div className=\"col-sm-10\">\r\n                    {this.renderContent()}\r\n                </div>\r\n            </div>\r\n        </div>;\r\n    }\r\n\r\n    setAddRow(addRow:()=>Promise<void>) {}\r\n    get key() {return this.label}\r\n    public getVFields():VField[] {return;}\r\n    public getVArr():VArr {return;}\r\n    public getVSubmit():VSubmit {return;}\r\n\r\n    protected renderContent():JSX.Element {\r\n        return <div className=\"form-control form-control-plaintext bg-white border border-info rounded \">content</div>;\r\n    }\r\n}\r\n\r\nexport interface FieldRes {\r\n    label: string;\r\n    placeHolder: string;\r\n    suffix: string;\r\n}\r\nexport class VFieldBand extends VBand {\r\n    protected vField:VField;\r\n    constructor(label:string, vField:VField) {\r\n        super(label);\r\n        this.vField = vField;\r\n    }\r\n\r\n    get key() {return this.vField.name}\r\n    public getVFields():VField[] {return [this.vField];}\r\n\r\n    protected renderContent():JSX.Element {\r\n        return this.vField.render();\r\n        /*\r\n        <div className=\"form-control form-control-plaintext bg-white border border-info rounded \">\r\n            {this.vField.render()}\r\n        </div>;*/\r\n    }\r\n}\r\n\r\nexport class VArrBand extends VBand {\r\n    protected vArr:VArr;\r\n    constructor(label:string, vArr:VArr) {\r\n        super(label);\r\n        this.vArr = vArr;\r\n    }\r\n\r\n    setAddRow(addRow:()=>Promise<void>) {this.vArr.setAddRow(addRow)}\r\n    get key() {return this.vArr.name}\r\n    public getVArr():VArr {return this.vArr;}\r\n\r\n    render():JSX.Element {\r\n        return <React.Fragment key={this.key}>\r\n            {this.vArr && this.vArr.render()}\r\n        </React.Fragment>;\r\n    }\r\n}\r\n\r\nexport class VFieldsBand extends VBand {\r\n    protected vFields: VField[];\r\n    constructor(label:string, vFields:VField[]) {\r\n        super(label);\r\n        this.vFields = vFields;\r\n    }\r\n\r\n    get key() {return this.vFields[0].name}\r\n    public getVFields():VField[] {return this.vFields;}\r\n\r\n    protected renderContent():JSX.Element {\r\n        return <div className=\"form-control form-control-plaintext bg-white border border-info rounded \">\r\n            fields\r\n        </div>;\r\n    }\r\n}\r\n\r\nexport class VSubmitBand extends VBand {\r\n    protected vSubmit: VSubmit;\r\n    constructor(vSubmit:VSubmit) {\r\n        super(undefined);\r\n        this.vSubmit = vSubmit;\r\n    }\r\n\r\n    get key() {return '$submit'}\r\n\r\n    public getVSubmit():VSubmit {return this.vSubmit;}\r\n\r\n    render():JSX.Element {\r\n        return <div key=\"$submit\" className=\"px-3\">\r\n            <div className=\"form-group row\">\r\n                <div className=\"offset-sm-2 col-sm-10\">\r\n                    {this.vSubmit.render()}\r\n                </div>\r\n            </div>\r\n        </div>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport classNames from 'classnames'\r\nimport { ViewModel } from \"./viewModel\";\r\nimport { VForm } from './vForm';\r\nimport { observer } from 'mobx-react';\r\nimport { observable } from 'mobx';\r\n\r\nexport class VSubmit extends ViewModel {\r\n    private vForm: VForm;\r\n    constructor(vForm: VForm) {\r\n        super();\r\n        this.vForm = vForm;\r\n        this.caption = this.vForm.submitCaption;\r\n        this.className = 'btn btn-primary w-25';\r\n    }\r\n    @observable caption: string;\r\n    @observable className: string;\r\n\r\n    private onClickSubmit = async () => {\r\n        this.vForm.submit();\r\n    }\r\n\r\n    protected view = observer(() => {\r\n        let {isOk} = this.vForm;\r\n        return <button type=\"button\" \r\n            onClick={this.onClickSubmit}\r\n            className={this.className}\r\n            disabled={isOk === false}>\r\n            {this.caption}\r\n        </button>;\r\n    });\r\n}","\r\nexport abstract class Rule {\r\n    abstract check(defy:string[], value:any);\r\n}\r\n\r\nexport class RuleRequired extends Rule {\r\n    check(defy:string[], value:any) {\r\n        switch (typeof value) {\r\n            default:\r\n            case 'boolean': return;\r\n            case 'object':\r\n                if (value !== null) return;\r\n                break;\r\n            case 'string':\r\n                if ((value as string).trim().length > 0) return;\r\n                break;\r\n            case 'number':\r\n                if ((value as number) !== NaN) return;\r\n                break;\r\n            case 'undefined':\r\n                break;\r\n        }\r\n        defy.push('不能为空');\r\n    }\r\n}\r\n\r\nexport class RuleNum extends Rule {\r\n    check(defy:string[], value:any) {\r\n        if (value === undefined || value === null) return;\r\n        let n = Number(value);\r\n        if (n === NaN) defy.push('必须是数字');\r\n    }\r\n}\r\n\r\nexport class RuleInt extends Rule {\r\n    check(defy:string[], value:any) {\r\n        if (value === undefined || value === null) return;\r\n        let n = Number(value);\r\n        if (Number.isNaN(n) === true || Number.isInteger(n) === false) {\r\n            defy.push('必须是整数');\r\n        }\r\n    }\r\n}\r\n\r\nexport class RuleMin extends RuleNum {\r\n    constructor(min: number) {\r\n        super();\r\n        this.min = min;\r\n    }\r\n    min: number;\r\n    check(defy:string[], value:any) {\r\n        super.check(defy, value);\r\n        if (Number(value) < this.min) defy.push('不能小于' + this.min);\r\n    }\r\n}\r\n\r\nexport class RuleMax extends RuleNum {\r\n    constructor(max: number) {\r\n        super();\r\n        this.max = max;\r\n    }\r\n    max: number;\r\n    check(defy:string[], value:any) {\r\n        super.check(defy, value);\r\n        if (Number(value) > this.max) defy.push('不能小于' + this.max);\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { computed, action } from 'mobx';\r\nimport classNames from 'classnames';\r\nimport { observer } from 'mobx-react';\r\nimport { FA } from 'tonva-react-form';\r\nimport { ViewModel } from \"../viewModel\";\r\nimport { VForm, FormMode } from '../vForm';\r\nimport { Rule, RuleRequired, RuleInt, RuleNum, RuleMin, RuleMax } from '../rule';\r\nimport { Field } from '../../../entities';\r\nimport { FieldRes } from '../vBand';\r\nimport { FieldUI, FieldInputUI, FieldStringUI, FieldNumberUI } from '../../formUI';\r\n\r\nexport abstract class VField extends ViewModel {\r\n    protected form: VForm;\r\n    protected fieldUI: FieldUI;\r\n    protected fieldRes:FieldRes;\r\n    protected field: Field;\r\n    protected rules: Rule[];\r\n    constructor(form:VForm, field:Field, fieldUI: FieldUI, fieldRes:FieldRes) {\r\n        super();\r\n        this.form = form;\r\n        this.field = field;\r\n        this.name = field.name;\r\n        this.fieldUI = fieldUI || {} as any;\r\n        this.fieldRes = fieldRes || {} as any;\r\n        this.init();\r\n    }\r\n\r\n    name: string;\r\n\r\n    protected init() {\r\n        this.buildRules();\r\n    }\r\n\r\n    protected buildRules() {\r\n        this.rules = [];\r\n        let {required} = this.fieldUI;\r\n        if (required === true || this.field !== undefined && this.field.null === false) {\r\n            this.rules.push(new RuleRequired);\r\n        }\r\n    }\r\n\r\n    @computed get checkRules(): string[] {\r\n        let defy = [];\r\n        for (let r of this.rules) r.check(defy, this.value);\r\n        return defy;\r\n    }\r\n\r\n    @computed get isOk() {\r\n        if (this.rules.length === 0) return true;\r\n        let defy = this.checkRules;\r\n        return defy.length === 0;\r\n    }\r\n\r\n    @computed get value() { return this.form.values[this.name]; }\r\n    setValue(v:any) {\r\n        this.form.values[this.name]=v; \r\n    }\r\n    get error() { return this.form.errors[this.name]; }\r\n    set error(err:any) { this.form.errors[this.name]=err; }\r\n    protected parse(str:string):any {return str;}\r\n    get readonly():boolean {\r\n        let {mode} = this.form;\r\n        return mode === FormMode.readonly || \r\n            mode === FormMode.edit && this.fieldUI.editable === false;\r\n    }\r\n}\r\n\r\nexport class VUnknownField extends VField {\r\n    protected view = () => {\r\n        //let {name, type} = this.fieldUI;\r\n        let type='', name = '';\r\n        return <input type=\"text\" className=\"form-control form-control-plaintext border border-info rounded bg-light\"\r\n            placeholder={'unkown control: ' + type + '-' + name} />;\r\n    }\r\n}\r\n\r\nexport abstract class VInputControl extends VField {\r\n    protected fieldUI: FieldInputUI;\r\n    protected input: HTMLInputElement;\r\n\r\n    protected inputType:string;\r\n    protected get maxLength():number {return}\r\n\r\n    protected renderError = (className:string) => {\r\n        let {errors} = this.form;\r\n        let error = errors[this.name];\r\n        if (error === undefined) return;\r\n        return <div className={className}><FA name=\"exclamation-circle\" /> {error}</div>\r\n    }\r\n\r\n    /*\r\n    get value() {\r\n        return super.value;\r\n    }*/\r\n    setValue(v:any) {\r\n        super.setValue(v); this.setInputValue(); \r\n    }\r\n\r\n    protected ref = (input:HTMLInputElement) => {\r\n        this.input = input;\r\n        this.setInputValue();\r\n    }\r\n\r\n    protected setInputValue() {\r\n        if (!this.input) return;\r\n        let v = this.value;\r\n        this.input.value = v === null || v === undefined? '' : v;\r\n    }\r\n\r\n    protected onFocus = () => {\r\n        this.error = undefined;\r\n    }\r\n\r\n    protected onBlur = () => {\r\n        let defy = this.checkRules;\r\n        if (defy.length > 0) {\r\n            this.error = defy[0];\r\n        }\r\n        this.form.computeFields();\r\n    }\r\n\r\n    protected onChange = (evt: React.ChangeEvent<any>) => {\r\n        let v = this.parse(evt.currentTarget.value);\r\n        if (v === null) {\r\n            return;\r\n        }\r\n        this.setValue(v);\r\n    }\r\n\r\n    protected onKeyPress: (event:React.KeyboardEvent<HTMLInputElement>) => void;\r\n    \r\n    protected view = observer(() => {\r\n        let {required} = this.fieldUI;\r\n        let {placeHolder, suffix} = this.fieldRes;\r\n        let ctrlCN = ['form-control', 'form-control-input'];\r\n        let errCN = 'text-danger small mt-1 mx-2';\r\n    \r\n        let redDot;\r\n        let input;\r\n        if (this.readonly === true) {\r\n            input = <input className={classNames(ctrlCN, 'bg-light')}\r\n                ref={this.ref}\r\n                type={this.inputType}\r\n                readOnly={true}\r\n            />;\r\n        }\r\n        else {\r\n            input = <input className={classNames(ctrlCN)}\r\n                ref={this.ref}\r\n                type={this.inputType}\r\n                onFocus={this.onFocus}\r\n                onBlur={this.onBlur}\r\n                onChange={this.onChange}\r\n                placeholder={placeHolder}\r\n                readOnly={false}\r\n                maxLength={this.maxLength}\r\n                onKeyPress={this.onKeyPress}\r\n            />;\r\n            if (required === true || this.field.null === false) {\r\n                redDot = <RedMark />;\r\n            }\r\n        }\r\n\r\n        let inputGroup;\r\n        if (suffix === undefined)\r\n            inputGroup = input;\r\n        else\r\n            inputGroup = <div className=\"input-group\">\r\n                {input}\r\n                <div className=\"input-group-append\">\r\n                    <span className=\"input-group-text\">{suffix}</span>\r\n                </div>\r\n            </div>;\r\n\r\n        return <>\r\n            {redDot}\r\n            {inputGroup}\r\n            {this.renderError(errCN)}\r\n        </>\r\n    });\r\n}\r\n\r\nexport const RedMark = () => <b style={{color:'red', position:'absolute', left:'0.1em', top:'0.5em'}}>*</b>;\r\n\r\nexport class VStringField extends VInputControl {\r\n    protected fieldUI: FieldStringUI;\r\n    protected inputType:string = 'text';\r\n    protected get maxLength():number {return this.field.size}\r\n}\r\n\r\nconst KeyCode_Neg = 45;\r\nconst KeyCode_Dot = 46;\r\n\r\nexport abstract class VNumberControl extends VInputControl {\r\n    protected fieldUI: FieldNumberUI;\r\n    protected extraChars: number[];\r\n\r\n    protected init() {\r\n        super.init();\r\n        this.extraChars = [];\r\n        if (this.fieldUI !== undefined) {\r\n            let {min, max} = this.fieldUI;\r\n            if (min !== undefined) {\r\n                //this.rules.push((v:number) => {if (v === undefined) return; if (v<min) return ErrMin + min; return true;});\r\n                if (min < 0) this.extraChars.push(KeyCode_Neg);\r\n            }\r\n            else {\r\n                this.extraChars.push(KeyCode_Neg);\r\n            }\r\n    \r\n            if (max !== undefined) {\r\n                //this.rules.push((v:number) => {if (v === undefined) return; if (v>max) return ErrMax + max; return true});\r\n            }\r\n        }\r\n        switch (this.field.type) {\r\n            case 'dec':\r\n            case 'bigint':\r\n            case 'int':\r\n            case 'smallint':\r\n            case 'tinyint':\r\n                this.extraChars.push(KeyCode_Dot); break;\r\n        }\r\n    }\r\n\r\n    protected buildRules() {\r\n        super.buildRules();\r\n        this.rules.push(new RuleNum);\r\n        let {min, max} = this.fieldUI;\r\n        if (min !== undefined) this.rules.push(new RuleMin(min));\r\n        if (max !== undefined) this.rules.push(new RuleMax(max));\r\n    }\r\n\r\n    inputType:string = 'number';\r\n\r\n    protected parse(text:string):any {\r\n        try {\r\n            if (text.trim().length === 0) return undefined;\r\n            let ret = Number(text);\r\n            return (ret === NaN)? null : ret;\r\n        }\r\n        catch {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    protected setInputValue() {\r\n        if (!this.input) return;\r\n        let v = this.value;\r\n        if (this.parse(this.input.value) == v) return;\r\n        this.input.value = v === null || v === undefined? '' : v;\r\n    }\r\n\r\n    protected onKeyPress = (event:React.KeyboardEvent<HTMLInputElement>) => {\r\n        let ch = event.charCode;\r\n        if (ch === 8 || ch === 0 || ch === 13 || ch >= 48 && ch <= 57) return;\r\n        if (this.extraChars !== undefined) {\r\n            if (this.extraChars.indexOf(ch) >= 0) {\r\n                switch (ch) {\r\n                    case KeyCode_Dot: this.onKeyDot(); break;\r\n                    case KeyCode_Neg: this.onKeyNeg(); event.preventDefault(); break;\r\n                }\r\n                return;\r\n            }\r\n        }\r\n        event.preventDefault();\r\n    }\r\n\r\n    private onKeyDot() {\r\n        let v = this.input.value;\r\n        let p = v.indexOf('.');\r\n        if (p >= 0) this.input.value = v.replace('.', '');\r\n    }\r\n    private onKeyNeg() {\r\n        let v = this.input.value;\r\n        let p = v.indexOf('-');\r\n        if (p >= 0) v = v.replace('-', '');\r\n        else v = '-'+v;\r\n        this.input.value = v;\r\n    }\r\n}\r\n\r\nexport class VIntField extends VNumberControl {\r\n    protected buildRules() {\r\n        super.buildRules();\r\n        this.rules.push(new RuleInt);\r\n    }\r\n}\r\n\r\nexport class VDecField extends VNumberControl {\r\n}\r\n\r\nexport class VTextField extends VStringField {\r\n\r\n}\r\n\r\nexport class VDateTimeField extends VStringField {\r\n\r\n}\r\n","import React from 'react';\r\nimport { VField } from './vField';\r\nimport { Field } from '../../../entities';\r\nimport { VForm } from '../vForm';\r\nimport { observer } from 'mobx-react';\r\nimport { FieldRes } from '../vBand';\r\n\r\nexport class VComputeField extends VField {\r\n    constructor(form:VForm, field: Field, fieldRes: FieldRes) {\r\n        super(form, field, undefined, fieldRes);\r\n    }\r\n    protected view = observer(() => {\r\n        let value = this.form.values[this.field.name];\r\n        let {placeHolder, suffix} = this.fieldRes;\r\n        let ctrlCN = 'form-control form-control-input bg-light';\r\n        if (value === null) value = '';\r\n        let input = <input className={ctrlCN}\r\n            type=\"text\"\r\n            placeholder={placeHolder}\r\n            readOnly={true}\r\n            value={value}/>\r\n        let inputGroup;\r\n        if (suffix === undefined)\r\n            inputGroup = input;\r\n        else\r\n            inputGroup = <div className=\"input-group\">\r\n                {input}\r\n                <div className=\"input-group-append\">\r\n                    <span className=\"input-group-text\">{suffix}</span>\r\n                </div>\r\n            </div>;\r\n        return inputGroup;\r\n        /*\r\n            return <div \r\n            className=\"form-control form-control-plaintext border border-info rounded bg-light cursor-pointer\">\r\n            {value} &nbsp;\r\n        </div>;\r\n        */\r\n    });\r\n}\r\n","import * as React from 'react';\r\nimport { IObservableArray, observable } from 'mobx';\r\nimport _ from 'lodash';\r\nimport { List, FA, Muted } from 'tonva-react-form';\r\nimport { Page, nav } from 'tonva-tools';\r\nimport { ViewModel, RowContent, TypeContent, JSONContent } from './viewModel';\r\nimport { ArrFields, Field } from '../../entities';\r\nimport { VForm, FieldInputs, FormMode } from './vForm';\r\nimport { FormArr } from '../formUI';\r\n\r\nexport type ArrEditRow = (initValues:any, onRowChanged:(rowValues:any)=>void) => Promise<void>;\r\n\r\nexport class VArr extends ViewModel {\r\n    protected mode: FormMode;\r\n    protected label: any;\r\n    protected header: any;\r\n    protected footer: any;\r\n    protected rowValues: any;                 // 仅仅用来判断是不是新增，undefined则是新增\r\n    protected onEditRow: ArrEditRow;\r\n    protected ownerForm:VForm;\r\n    protected vForm:VForm;\r\n    protected rowContent:TypeContent;\r\n    protected none: string;\r\n    protected newSubmitCaption: string;\r\n    protected editSubmitCaption: string;\r\n    protected addRow: ()=>Promise<void>;\r\n\r\n    name:string;\r\n    list: IObservableArray<any>;\r\n\r\n    constructor(ownerForm:VForm, arr:ArrFields, onEditRow?:ArrEditRow) {\r\n        super();\r\n        this.ownerForm = ownerForm;\r\n        let {name, fields} = arr;\r\n        this.name = name;\r\n        let {ui, res, mode, inputs, values} = ownerForm;\r\n        let arrsRes = res.arrs;\r\n        let arrRes = arrsRes !== undefined? arrsRes[name] : {};\r\n        let {label, none, newSubmit, editSubmit} = arrRes;\r\n        this.none = none || ownerForm.none;\r\n        this.newSubmitCaption = newSubmit || ownerForm.arrNewCaption;\r\n        this.editSubmitCaption = editSubmit || ownerForm.arrEditCaption;\r\n        this.label = label || name;\r\n        let arrUI = ((ui && ui.items[name]) || {}) as FormArr;\r\n        this.rowContent = arrUI.rowContent;// || JSONContent;\r\n        this.mode = mode;\r\n        if (this.onEditRow === undefined) {\r\n            this.vForm = new VForm({\r\n                fields: fields,\r\n                arrs: undefined,\r\n                ui: arrUI,\r\n                res: arrRes,\r\n                inputs: inputs[name] as FieldInputs,\r\n                none: ownerForm.none,\r\n                submitCaption: 'submit',\r\n                arrNewCaption: undefined,\r\n                arrEditCaption: undefined,\r\n                arrTitleNewButton: undefined,\r\n                mode: mode,\r\n            }, \r\n            mode===FormMode.readonly? undefined: this.onSubmit);\r\n        }\r\n        else {\r\n            this.onEditRow = onEditRow;\r\n        }\r\n        this.list = values[name];\r\n    }\r\n\r\n    reset() {\r\n        this.vForm.reset();\r\n        this.list.clear();\r\n    }\r\n\r\n    setAddRow(addRow:()=>Promise<void>) {\r\n        this.addRow = addRow;\r\n    }\r\n\r\n    protected rowPage = () => {\r\n        return <Page header={this.label} back=\"close\">\r\n            {this.vForm.render('py-3')}\r\n        </Page>\r\n    }\r\n    private onSubmit = async () => {\r\n        let {valueBoxs} = this.vForm;\r\n        await this.onRowChanged(valueBoxs);\r\n    }\r\n\r\n    private onRowChanged = async (rowValues:any) => {\r\n        if (this.rowValues === undefined) {\r\n            rowValues.$owner = this.ownerForm.values;\r\n            this.list.push(rowValues);\r\n            if (this.onEditRow === undefined)\r\n                this.vForm.reset();\r\n            else\r\n                await this.onEditRow(undefined, this.onRowChanged);\r\n        }\r\n        else {\r\n            _.merge(this.rowValues, rowValues);\r\n            if (this.onEditRow === undefined) nav.pop();\r\n        }\r\n    }\r\n\r\n    private renderItem = (item:any, index:number) => {\r\n        if (this.rowContent === undefined)\r\n            return <div className=\"px-3 py-2\"><JSONContent {...item} /></div>\r\n        return <this.rowContent {...item} />;\r\n    }\r\n    private showRow = async (rowValues:any):Promise<any> => {\r\n        if (this.onEditRow !== undefined) {\r\n            await this.onEditRow(rowValues, this.onRowChanged);\r\n            return;\r\n        }\r\n        this.vForm.reset();\r\n        if (rowValues !== undefined) this.vForm.setValues(rowValues);\r\n        nav.push(<this.rowPage />);\r\n    }\r\n    private editRow = async (rowValues:any): Promise<void> => {\r\n        this.rowValues = rowValues;\r\n        let {vSubmit} = this.vForm;\r\n        if (vSubmit !== undefined) {\r\n            vSubmit.caption = this.editSubmitCaption;\r\n            vSubmit.className = 'btn btn-outline-success';\r\n        }\r\n        this.vForm.mode = this.ownerForm.mode;\r\n        await this.showRow(rowValues);\r\n    }\r\n    private internalAddRow = async () => {\r\n        this.rowValues = undefined;\r\n        let {vSubmit} = this.vForm;\r\n        vSubmit.caption = this.newSubmitCaption;\r\n        vSubmit.className = 'btn btn-outline-success';\r\n        this.vForm.reset();\r\n        this.vForm.mode = FormMode.new;\r\n        await this.showRow(undefined);\r\n    }\r\n\r\n    protected view = () => {\r\n        let button;\r\n        if (this.addRow !== undefined || this.mode !== FormMode.readonly) {\r\n            button = <button onClick={this.addRow || this.internalAddRow}\r\n                type=\"button\" \r\n                className=\"btn btn-link p-0\">\r\n                {this.ownerForm.arrTitleNewButton}\r\n            </button>;\r\n        }\r\n        let header = this.header || <div className=\"px-3 bg-light small\" style={{paddingTop:'1px', paddingBottom:'1px'}}>\r\n            <div className=\"flex-fill align-self-center\">{this.label}</div>\r\n            {button}\r\n        </div>;\r\n        return <List className=\"pb-3\"\r\n            header={header}\r\n            none={<Muted className=\"px-3 py-2\">{this.none}</Muted>}\r\n            items={this.list}\r\n            item={{render: this.renderItem, onClick: this.editRow}} />;\r\n    };\r\n}\r\n","import * as React from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport { tv } from '../../../tools';\r\nimport { Field, Tuid } from '../../../entities';\r\nimport { VField, RedMark } from \"./vField\";\r\nimport { FieldUI } from '../../formUI';\r\nimport { VForm, FieldInput, FormMode } from '../vForm';\r\nimport { FieldRes } from '../vBand';\r\n\r\nconst buttonStyle:React.CSSProperties = {\r\n    textAlign:'left', \r\n    paddingLeft:'0.75rem', \r\n    paddingRight:'0.75rem', \r\n    overflow: 'hidden'\r\n};\r\n\r\nexport class VTuidField extends VField {\r\n    protected vForm: VForm;\r\n    protected input: FieldInput;\r\n    protected tuid: Tuid;\r\n\r\n    constructor(vForm: VForm, field:Field, fieldUI: FieldUI, fieldRes:FieldRes) {\r\n        super(vForm, field, fieldUI, fieldRes);\r\n        this.tuid = field._tuid;\r\n        this.vForm = vForm;\r\n        this.input = vForm.inputs[field.name] as FieldInput;\r\n    }\r\n\r\n    onClick = async () => {\r\n        if (this.readonly === true) {\r\n            if (!this.value) return;\r\n            await this.tuid.showInfo(this.value.id);\r\n            return;\r\n        }\r\n        let id:number;\r\n        if (this.input !== undefined) {\r\n            id = await this.input.select(this.vForm, this.field, this.vForm.getValues());\r\n        }\r\n        else {\r\n            alert('call undefined');\r\n            id = 0;\r\n        }\r\n        this.setValue(this.tuid.boxId(id));\r\n    }\r\n    protected view = observer(() => {\r\n        let {placeHolder} = this.fieldRes;\r\n        let disabled:boolean = false;\r\n        let {_ownerField} = this.field;\r\n        if (_ownerField !== undefined) {\r\n            let {name, arr} = _ownerField;\r\n            disabled = this.vForm.getValue(name) === null;\r\n        }\r\n        let content;\r\n        if (this.value === null)\r\n            content = <>{placeHolder || this.input.placeHolder}</>;\r\n        else if (typeof this.value === 'object') {\r\n            content = tv(this.value);\r\n        }\r\n        else {\r\n            let idBox = this.tuid.boxId(this.value);\r\n            content = tv(idBox); // idBox.content();\r\n        }\r\n        if (this.readonly === true)\r\n        {\r\n            return <div \r\n                className=\"form-control form-control-plaintext border border-info rounded bg-light cursor-pointer\"\r\n                onClick={this.onClick}>\r\n                {content}\r\n            </div>;\r\n        }\r\n        let redDot;\r\n        let {required} = this.fieldUI;\r\n        if (required === true || this.field.null === false) {\r\n            redDot = <RedMark />;\r\n        }\r\n        return <>\r\n            {redDot}\r\n            <button className=\"form-control btn btn-outline-info\"\r\n                type=\"button\"\r\n                disabled={disabled}\r\n                style={buttonStyle}\r\n                onClick={this.onClick}>\r\n                {content}\r\n            </button>\r\n        </>;\r\n    })\r\n}\r\n","import { VBand, VFieldBand, VArrBand, VFieldsBand, VSubmitBand, FieldRes } from \"./vBand\";\r\nimport { Field, ArrFields } from \"../../entities\";\r\nimport { VForm, FormOptions } from \"./vForm\";\r\nimport { FormItems, FieldUI, FormItem } from \"../formUI\";\r\nimport { VSubmit } from \"./vSubmit\";\r\nimport { VField, buildVField, VComputeField } from \"./vField\";\r\nimport { VArr } from \"./vArr\";\r\nimport { VTuidField } from \"./vField/vTuidField\";\r\n\r\nexport class BandsBuilder {\r\n    private vForm: VForm;\r\n    private onSubmit: (values:any)=>Promise<void>;\r\n    private fields: Field[];\r\n    private arrs: ArrFields[];\r\n    private formItems: FormItems;\r\n    private layout: string[];\r\n    private res: any;\r\n    constructor(vForm:VForm, options: FormOptions, onSubmit: (values:any)=>Promise<void>) {\r\n        this.vForm = vForm;\r\n        this.onSubmit = onSubmit;\r\n        let {fields, arrs, ui, res} = options;\r\n        this.fields = fields;\r\n        this.arrs = arrs;\r\n        if (ui !== undefined) {\r\n            let {items, layout} = ui;\r\n            this.formItems = items;\r\n            this.layout = layout;\r\n        }\r\n        this.res = res;\r\n    }\r\n\r\n    build():VBand[] {\r\n        //return this.bandUIs === undefined? this.bandsOnFly() : this.bandsFromUI();\r\n        return this.layout === undefined? this.bandsOnFly() : this.bandsFromLayout();\r\n    }\r\n\r\n    private resFromName(name:string, res:any):string|FieldRes {\r\n        if (res === undefined) return;\r\n        let {fields} = res;\r\n        if (fields === undefined) return;\r\n        return fields[name] || name;\r\n    }\r\n\r\n    private bandsOnFly():VBand[] {\r\n        let bands:VBand[] = [];\r\n        this.bandsFromFields(bands, this.fields, this.res);\r\n        if (this.arrs !== undefined) {\r\n            for (let arr of this.arrs) bands.push(this.bandFromArr(arr));\r\n        }\r\n        if (this.onSubmit !== undefined) {\r\n            bands.push(new VSubmitBand(new VSubmit(this.vForm)));\r\n        }\r\n        return bands;\r\n    }\r\n\r\n    private bandsFromFields(bands:VBand[], fields:Field[], res:any) {\r\n        if (fields === undefined) return;\r\n        for (let field of fields) bands.push(this.bandFromField(field, res));\r\n    }\r\n\r\n    private bandsFromLayout():VBand[] {\r\n        let bands:VBand[] = [];\r\n        /*\r\n        for (let bandUI of this.bandUIs)  {\r\n            let band = this.bandFromUI(bandUI);\r\n            bands.push(band);\r\n        }\r\n        */\r\n        return bands;\r\n    }\r\n\r\n    /*\r\n    private bandFromUI(bandUI:BandUI):VBand {\r\n        let {band} = bandUI;\r\n        switch (band) {\r\n            default: return this.bandFromFieldUI(bandUI as FieldBandUI);\r\n            case 'arr': return this.bandFromArrUI(bandUI as ArrBandUI);\r\n            case 'fields': return this.bandFromFieldsUI(bandUI as FieldsBandUI);\r\n            case 'submit': return this.bandFromSubmitUI(bandUI as SubmitBandUI);\r\n        }\r\n    }\r\n    \r\n    private bandFromFieldUI(bandUI: FieldBandUI): VFieldBand {\r\n        let {label} = bandUI;\r\n        let vField = this.vFieldFromUI(bandUI);\r\n        return new VFieldBand(label, vField);\r\n    }\r\n    private bandFromArrUI(bandUI: ArrBandUI): VArrBand {\r\n        let {label, name} = bandUI;\r\n        let vArr = this.vArrFromUI(bandUI);\r\n        return new VArrBand(label, vArr);\r\n    }\r\n    private bandFromFieldsUI(bandUI: FieldsBandUI): VFieldsBand {\r\n        let {label, fieldUIs} = bandUI;\r\n        let vFields = fieldUIs.map(v => this.vFieldFromUI(v));\r\n        return new VFieldsBand(label, vFields);\r\n    }\r\n    private bandFromSubmitUI(bandUI: SubmitBandUI): VSubmitBand {\r\n        if (this.onSubmit === undefined) return;\r\n        let vSubmit = new VSubmit(this.vForm);\r\n        return new VSubmitBand(vSubmit);\r\n    }\r\n    */\r\n/*\r\n    private vFieldFromField(field:Field, fieldRes:FieldRes, formItem: FormItem): VField {\r\n        let fieldUI:FieldUI = undefined;\r\n        if (formItem !== undefined) {\r\n            if (typeof formItem === 'function') {\r\n                return new VComputeField(this.vForm, field, fieldRes);\r\n            }\r\n        }\r\n        let ret = buildVField(this.vForm, field, formItem, fieldRes);\r\n        if (ret !== undefined) return ret;\r\n        return new VTuidField(field, fieldUI, fieldRes, this.vForm);\r\n    }\r\n*/\r\n    private bandFromField(field:Field, res:any):VBand {\r\n        let {name} = field;\r\n        let fieldRes:FieldRes;\r\n        let rfn = this.resFromName(name, res);\r\n        let label:string;\r\n        if (typeof rfn === 'object') {\r\n            label = rfn.label;\r\n            fieldRes = rfn;\r\n        }\r\n        else {\r\n            label = rfn as string;\r\n            fieldRes = undefined;\r\n        }\r\n        let vField:VField;\r\n        let formItem:FormItem;\r\n        if (this.formItems !== undefined) formItem = this.formItems[name];\r\n        //let vField = this.vFieldFromField(field, fieldRes as FieldRes, formItem);\r\n        //let fieldUI:FieldUI = undefined;\r\n        if (typeof formItem === 'function') {\r\n            vField = new VComputeField(this.vForm, field, fieldRes);\r\n        }\r\n        else {\r\n            vField = buildVField(this.vForm, field, formItem as FieldUI, fieldRes);\r\n        }\r\n        if (vField === undefined) {\r\n            vField = new VTuidField(this.vForm, field, formItem as FieldUI, fieldRes);\r\n        }\r\n        return new VFieldBand(label || name, vField);\r\n    }\r\n\r\n    private bandFromArr(arr: ArrFields):VBand {\r\n        let {name, fields} = arr;\r\n        //let row = JSONContent;\r\n        //let bands:VBand[] = [];\r\n        //this.bandsFromFields(bands, fields, res);\r\n        let vArr = new VArr(this.vForm, arr); // name, res && res.label || name, row, bands);\r\n        return new VArrBand(name, vArr);\r\n    }\r\n\r\n    /*\r\n    private vFieldFromUI(fieldUI:FieldUI):VField {\r\n        return;\r\n    }\r\n\r\n    private vArrFromUI(arrBandUI:ArrBandUI):VArr {\r\n        return;\r\n    }\r\n    */\r\n}\r\n","import { VField, VIntField, VDecField, VStringField, VTextField, VDateTimeField } from './vField';\r\nimport { Field } from '../../../entities';\r\nimport { FieldRes } from '../vBand';\r\nimport { VForm } from '../vForm';\r\nimport { FieldUI } from '../../formUI';\r\n\r\nexport function buildVField(form:VForm, field: Field, fieldUI: FieldUI, fieldRes:FieldRes): VField {\r\n    let vField:new (form:VForm, field:Field, ui:FieldUI, fieldRes:FieldRes) => VField;\r\n    switch (field.type) {\r\n        default: return;\r\n        case 'tinyint':\r\n        case 'smallint':\r\n        case 'int':\r\n            vField = VIntField;\r\n            break;\r\n        case 'bigint':\r\n            let {_tuid} = field;\r\n            if (_tuid !== undefined) return;\r\n            vField = VIntField;\r\n            break;\r\n        case 'dec':\r\n            vField = VDecField;\r\n            break;\r\n        case 'char':\r\n            vField = VStringField;\r\n            break;\r\n        case 'text':\r\n            vField = VTextField;\r\n            break;\r\n        case 'datetime':\r\n            vField = VDateTimeField;\r\n            break;\r\n    }\r\n    return new vField(form, field, fieldUI, fieldRes);\r\n}\r\n\r\n","import * as React from 'react';\r\nimport * as _ from 'lodash';\r\nimport { observer } from \"mobx-react\";\r\nimport { VBand } from './vBand';\r\nimport { BandsBuilder } from './bandsBuilder';\r\nimport { Field, ArrFields } from '../../entities';\r\nimport { computed, observable, IObservableObject, IObservableValue } from 'mobx';\r\nimport { VArr } from './vArr';\r\nimport { FormUI, FormUIBase, FormItems } from '../formUI';\r\nimport { VField } from './vField';\r\nimport { VSubmit } from './vSubmit';\r\nimport { IObservableArray } from 'mobx';\r\nimport { FA } from 'tonva-react-form';\r\n\r\nexport type FieldCall = (form:VForm, field:Field, values:any) => Promise<any>;\r\nexport interface FieldInput {\r\n    select: FieldCall;\r\n    content: React.StatelessComponent<any>;\r\n    placeHolder: string;\r\n}\r\nexport interface FieldInputs {\r\n    [fieldOrArr:string]: FieldInput | {[field:string]: FieldInput};\r\n}\r\nexport enum FormMode {new, edit, readonly}\r\n\r\nexport interface FormOptions {\r\n    fields: Field[];\r\n    arrs?: ArrFields[];\r\n    ui: FormUIBase;\r\n    res: any;\r\n    inputs: FieldInputs;\r\n    submitCaption: string;\r\n    arrNewCaption: string;\r\n    arrEditCaption: string;\r\n    arrTitleNewButton: JSX.Element;\r\n    none: string;\r\n    mode: FormMode;\r\n}\r\n\r\nexport class VForm {\r\n    protected fields: Field[];\r\n    protected arrs: ArrFields[];\r\n    protected bands: VBand[];\r\n    protected bandColl: {[key:string]: VBand};\r\n    protected onSubmit: ()=>Promise<void>;\r\n\r\n    constructor(options: FormOptions, onSubmit: ()=>Promise<void>) {\r\n        let {fields, arrs, ui, res, inputs, none, submitCaption, arrNewCaption, arrEditCaption, arrTitleNewButton, mode} = options;\r\n        this.fields = fields;\r\n        this.arrs = arrs;\r\n        this.ui = ui;\r\n        if (this.ui !== undefined) this.formItems = this.ui.items; //.compute = this.ui.compute;\r\n        this.res = res;\r\n        this.inputs = inputs;\r\n        this.none = none;\r\n        this.submitCaption = submitCaption;\r\n        this.arrNewCaption = arrNewCaption;\r\n        this.arrEditCaption = arrEditCaption;\r\n        this.arrTitleNewButton = arrTitleNewButton || <small><FA name=\"plus\" /> 新增</small>;\r\n        if (onSubmit === undefined) this.mode = FormMode.readonly;\r\n        else this.mode = mode;\r\n        this.buildFormValues();\r\n        this.buildBands(options, onSubmit);\r\n        this.onSubmit = onSubmit;\r\n    }\r\n\r\n    ui: FormUI;\r\n    res: any;\r\n    values: any;\r\n    errors: any;\r\n    formItems: FormItems;\r\n    mode: FormMode;\r\n    vFields: {[name:string]:VField} = {};\r\n    vArrs: {[name:string]: VArr} = {};\r\n    vSubmit: VSubmit;\r\n    inputs: FieldInputs;\r\n    none: string;\r\n    submitCaption: string;\r\n    arrNewCaption: string;\r\n    arrEditCaption: string;\r\n    arrTitleNewButton: JSX.Element;\r\n\r\n    private buildBands(options: FormOptions, onSubmit: (values:any)=>Promise<void>) {\r\n        this.bandColl = {};\r\n        let bandsBuilder = new BandsBuilder(this, options, onSubmit);\r\n        this.bands = bandsBuilder.build();\r\n        for (let band of this.bands) {\r\n            this.bandColl[band.key] = band;\r\n            let vFields = band.getVFields();\r\n            if (vFields !== undefined) for (let f of vFields) this.vFields[f.name] = f;\r\n            let vArr = band.getVArr();\r\n            if (vArr !== undefined) this.vArrs[vArr.name] = vArr;\r\n            let vSubmit = band.getVSubmit();\r\n            if (vSubmit !== undefined) this.vSubmit = vSubmit;\r\n        }\r\n    }\r\n\r\n    private onFormSubmit = (event:React.FormEvent<any>) => {\r\n        event.preventDefault();\r\n        return false;\r\n    }\r\n\r\n    protected view = observer(({className}:{className:string}) => {\r\n        return <form className={className} onSubmit={this.onFormSubmit}>\r\n            {this.bands.map(v => v.render())}\r\n        </form>;\r\n    });\r\n\r\n    getBand(name:string) {\r\n        return this.bandColl[name];\r\n    }\r\n\r\n    computeFields() {\r\n        if (this.formItems === undefined) return;\r\n        let values = this.values;\r\n        for (let i in this.formItems) {\r\n            let item = this.formItems[i];\r\n            if (typeof item !== 'function') continue;\r\n            values[i] = item.call(this, values);\r\n        }\r\n    }\r\n\r\n    async submit() {\r\n        if (this.onSubmit === undefined) return;\r\n        await this.onSubmit();\r\n    }\r\n    \r\n    getValues() {\r\n        let ret:any = {};\r\n        let values = this.values;\r\n        for (let f of this.fields) {\r\n            let {name} = f;\r\n            let v = values[name]\r\n            ret[name] =  v !== null && typeof v === 'object' ? v.id : v;\r\n        }\r\n        if (this.arrs !== undefined) {\r\n            for (let arr of this.arrs) {\r\n                let {name, fields, id, order} = arr;\r\n                let list = ret[name] = [];\r\n                let rows = this.vArrs[name].list;\r\n                for (let row of rows) {\r\n                    let item = {} as any;\r\n                    if (id !== undefined) item[id] = row[id];\r\n                    if (order !== undefined) item[order] = row[order];\r\n                    for (let f of fields) {\r\n                        let {name:fn} = f;\r\n                        let v = row[fn]\r\n                        item[fn] =  v !== null && typeof v === 'object' ? v.id : v;\r\n                    }\r\n                    list.push(item);\r\n                }\r\n            }\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    get valueBoxs() {\r\n        let ret:any = {};\r\n        let values = this.values;\r\n        for (let f of this.fields) {\r\n            let {name, _tuid} = f;\r\n            let v = values[name]\r\n            ret[name] =  _tuid === undefined || typeof v === 'object' ? v : _tuid.boxId(v);\r\n        }\r\n        if (this.arrs === undefined) return ret;\r\n        for (let arr of this.arrs) {\r\n            let {name, fields, id, order} = arr;\r\n            let list = ret[name] = this.vArrs[name].list.slice();\r\n            for (let row of list) {\r\n                for (let f of fields) {\r\n                    let {name:fn, _tuid} = f;\r\n                    let v = row[fn]\r\n                    row[fn] =  _tuid === undefined || typeof v === 'object' ? v : _tuid.boxId(v);\r\n                }\r\n            }\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    setValues(initValues:any) {\r\n        if (initValues === undefined) {\r\n            this.reset();\r\n            return;\r\n        }\r\n        let values = this.values;\r\n        let errors = this.errors;\r\n        for (let f of this.fields) {\r\n            let fn = f.name;\r\n            errors[fn] = undefined;\r\n            let v =  initValues[fn];\r\n            values[fn] = v;\r\n        }\r\n        // 还要设置arrs的values\r\n        for (let i in this.vArrs) {\r\n            let list = initValues[i];\r\n            if (list === undefined) continue;\r\n            let arrList = values[i] as IObservableArray<any>;\r\n            arrList.clear();\r\n            arrList.push(...list);\r\n        }\r\n    }\r\n\r\n    @computed get isOk():boolean {\r\n        for (let i in this.vFields) {\r\n            if (this.vFields[i].isOk === false) return false;\r\n        }\r\n        return true;\r\n    }\r\n    reset() {\r\n        let values = this.values;\r\n        let errors = this.errors;\r\n        for (let f of this.fields) {\r\n            let fn = f.name;\r\n            //if (this.compute !== undefined && this.compute[fn] !== undefined) continue;\r\n            values[fn] = null;\r\n            errors[fn] = undefined;\r\n        }\r\n        for (let i in this.vFields) {\r\n            let ctrl = this.vFields[i];\r\n            let cn = ctrl.name;\r\n            if (cn === undefined) continue;\r\n            //if (this.compute !== undefined && this.compute[cn] !== undefined) continue;\r\n            ctrl.setValue(null);\r\n        }\r\n        for (let i in this.vArrs) {\r\n            let vArr = this.vArrs[i];\r\n            vArr.reset();\r\n        }\r\n    }\r\n\r\n    getValue(fieldName: string) {\r\n        return this.values[fieldName];\r\n    }\r\n    setValue(fieldName: string, value: any) { this.values[fieldName] = value }\r\n\r\n    setError(fieldName:string, error:string) {this.errors[fieldName] = error}\r\n\r\n    private buildFieldValues(fields: Field[]):any {\r\n        let v: {[p:string]: any} = {\r\n            valueFromFieldName: function(propName:string) {\r\n                return this[propName];\r\n            }\r\n        };\r\n        for (let f of fields) {\r\n            let fn = f.name;\r\n            v[fn] = null;\r\n        }\r\n        return v;\r\n    }\r\n    private buildObservableValues():IObservableObject {\r\n        let v: {[p:string]: any} = this.buildFieldValues(this.fields);\r\n        if (this.arrs !== undefined) {\r\n            for (let arr of this.arrs) {\r\n                v[arr.name] = observable.array([], {deep:true});\r\n            }\r\n        }\r\n        let ret = observable(v);\r\n        return ret;\r\n    }\r\n    private buildFormValues() {\r\n        this.values = this.buildObservableValues();\r\n        this.errors = observable(this.buildFieldValues(this.fields));\r\n    }\r\n\r\n    render(className:string = \"py-3\"):JSX.Element {\r\n        return <this.view className={className} />\r\n    }\r\n}\r\n","export * from './vForm';\r\n","import {bridgeCenterApi, isBridged} from './appBridge';\r\nimport {FetchError} from '../fetchError';\r\nimport {HttpChannelUI} from './httpChannelUI';\r\nimport {nav} from '../ui/nav';\r\nimport { isDevelopment } from './host';\r\n\r\nexport async function httpGet(url:string, params?:any):Promise<any> {\r\n    let channel = new HttpChannel(false, url, undefined, undefined);\r\n    let ret = await channel.get('', params);\r\n    return ret;\r\n}\r\n\r\nexport async function httpPost(url:string, params?:any):Promise<any> {\r\n    let channel = new HttpChannel(false, url, undefined, undefined);\r\n    let ret = await channel.post('', params);\r\n    return ret;\r\n}\r\n\r\nexport class HttpChannel {\r\n    private isCenter: boolean;\r\n    private hostUrl: string;\r\n    private apiToken: string;\r\n    private ui?: HttpChannelUI;\r\n    private timeout: number;\r\n\r\n    constructor(isCenter: boolean, hostUrl: string, apiToken:string, ui?: HttpChannelUI) {\r\n        this.isCenter = isCenter;\r\n        this.hostUrl = hostUrl;\r\n        this.apiToken = apiToken;\r\n        this.ui = ui;\r\n        this.timeout = isDevelopment === true? 500000:5000;\r\n    }\r\n\r\n    private startWait = () => {\r\n        if (this.ui !== undefined) this.ui.startWait();\r\n    }\r\n\r\n    private endWait = (url?:string, reject?:(reason?:any)=>void) => {\r\n        if (this.ui !== undefined) this.ui.endWait();\r\n        if (reject !== undefined) reject('访问webapi超时 ' + url);\r\n    }\r\n\r\n    private showError = async (error:FetchError) => {\r\n        if (this.ui !== undefined) await this.ui.showError(error);\r\n    }\r\n\r\n    used() {\r\n        this.post('', {});\r\n    }\r\n\r\n    async get(url: string, params: any = undefined): Promise<any> {\r\n        if (params) {\r\n            let keys = Object.keys(params);\r\n            if (keys.length > 0) {\r\n                let c = '?';\r\n                for (let k of keys) {\r\n                    let v = params[k];\r\n                    if (v === undefined) continue;\r\n                    url += c + k + '=' + params[k];\r\n                    c = '&';\r\n                }\r\n            }\r\n        }\r\n        let options = this.buildOptions();\r\n        options.method = 'GET';\r\n        return await this.innerFetch(url, options);\r\n    }\r\n\r\n    async post(url: string, params: any): Promise<any> {\r\n        let options = this.buildOptions();\r\n        options.method = 'POST';\r\n        options.body = JSON.stringify(params);\r\n        return await this.innerFetch(url, options);\r\n    }\r\n\r\n    async put(url: string, params: any): Promise<any> {\r\n        let options = this.buildOptions();\r\n        options.method = 'PUT';\r\n        options.body = JSON.stringify(params);\r\n        return await this.innerFetch(url, options);\r\n    }\r\n\r\n    async delete(url: string, params: any): Promise<any> {\r\n        let options = this.buildOptions();\r\n        options.method = 'DELETE';\r\n        options.body = JSON.stringify(params);\r\n        return await this.innerFetch(url, options);\r\n    }\r\n    async fetch(url: string, options: any, resolve:(value?:any)=>any, reject:(reason?:any)=>void):Promise<void> {\r\n        let that = this;\r\n        this.startWait();\r\n        let path = url;\r\n        function buildError(err: string) {\r\n            return {\r\n                channel: that,\r\n                url: path,\r\n                options: options,\r\n                resolve: resolve,\r\n                reject: reject,\r\n                error: err,\r\n            }\r\n        }\r\n        try {\r\n            console.log('%s %s', options.method, path);\r\n            let timeOutHandler = setTimeout(() => that.endWait(url, reject), this.timeout);\r\n            let res = await fetch(encodeURI(path), options);\r\n            if (res.ok === false) {\r\n                clearTimeout(timeOutHandler);\r\n                that.endWait();\r\n                console.log('call error %s', res.statusText);\r\n                throw res.statusText;\r\n            }\r\n            let ct = res.headers.get('content-type');\r\n            if (ct && ct.indexOf('json')>=0) {\r\n                return res.json().then(async retJson => {\r\n                    clearTimeout(timeOutHandler);\r\n                    that.endWait();\r\n                    if (retJson.ok === true) {\r\n                        return resolve(retJson.res);\r\n                    }\r\n                    if (retJson.error === undefined) {\r\n                        await that.showError(buildError('not valid tonva json'));\r\n                    }\r\n                    else {\r\n                        await that.showError(buildError(retJson.error));\r\n                        reject(retJson.error);\r\n                    }\r\n                    //throw retJson.error;\r\n                }).catch(async error => {\r\n                    await that.showError(buildError(error.message));\r\n                });\r\n            }\r\n            else {\r\n                let text = await res.text();\r\n                clearTimeout(timeOutHandler);\r\n                that.endWait();\r\n                resolve(text);\r\n            }\r\n        }\r\n        catch(error) {\r\n            if (typeof error === 'string') {\r\n                if (error.toLowerCase().startsWith('unauthorized') === true) {\r\n                    nav.logout();\r\n                    return;\r\n                }\r\n            }\r\n            await this.showError(buildError(error.message));\r\n        };\r\n    }\r\n\r\n    private async innerFetch(url: string, options: any): Promise<any> {\r\n        let u = this.hostUrl + url;\r\n        if (this.isCenter === true && this.apiToken === undefined && isBridged())\r\n            return await bridgeCenterApi(u, options.method, options.body);\r\n        return await new Promise<any>(async (resolve, reject) => {\r\n            await this.fetch(u, options, resolve, reject);\r\n        });\r\n    }\r\n\r\n    async callFetch(url:string, method:string, body:any):Promise<any> {\r\n        let options = this.buildOptions();\r\n        options.method = method;\r\n        options.body = body;\r\n        return await new Promise<any>(async (resolve, reject) => {\r\n            await this.fetch(url, options, resolve, reject);\r\n        });\r\n    }\r\n\r\n    private buildOptions(): any {\r\n        let {language, culture} = nav;\r\n        let headers = new Headers();\r\n        //headers.append('Access-Control-Allow-Origin', '*');\r\n        headers.append('Content-Type', 'application/json;charset=UTF-8');\r\n        let lang = language;\r\n        if (culture) lang += '-' + culture;\r\n        headers.append('Accept-Language', lang);\r\n        if (this.apiToken) { \r\n            headers.append('Authorization', this.apiToken); \r\n        }\r\n        let options = {\r\n            headers: headers,\r\n            // cache: 'no-cache',\r\n        };\r\n        return options;\r\n    }\r\n}\r\n","import _ from 'lodash';\r\n\r\nexport interface KeyValueRes {\r\n    [key:string]: any;\r\n}\r\n\r\nexport interface Res<T extends KeyValueRes> {\r\n    [lang:string]: T | {[district:string]: T};\r\n}\r\n\r\nexport const resOptions:{lang:string, district:string} = {\r\n    lang: undefined,\r\n    district: undefined,\r\n}\r\n\r\nexport function setResOptions(lang:string, district:string) {\r\n    resOptions.lang = lang;\r\n    resOptions.district = district;\r\n}\r\n\r\n(function() {\r\n    let lang: string, district: string;\r\n    let language = navigator.languages && navigator.languages[0] || // Chrome / Firefox\r\n        navigator.language; // ||   // All browsers\r\n    //navigator.userLanguage; // IE <= 10\r\n    if (!language) {\r\n        lang = 'zh';\r\n        district = 'CN';\r\n    }\r\n    else {\r\n        let parts = language.split('-');\r\n        lang = parts[0];\r\n        if (parts.length > 1) district = parts[1];\r\n    }\r\n    setResOptions(lang, district);\r\n}());\r\n\r\nexport function resLang<T extends KeyValueRes>(res:Res<T>):T {\r\n    let {lang, district} = resOptions;\r\n    let ret:T = {} as T;\r\n    if (res === undefined) return ret;\r\n    _.merge(ret, res._);\r\n    let l = res[lang];\r\n    if (l === undefined) return ret;\r\n    _.merge(ret, l._);\r\n    let d = l[district];\r\n    if (d === undefined) return ret;\r\n    _.merge(ret, d);\r\n    let {entity} = ret;\r\n    if (entity !== undefined) {\r\n        for (let i in entity) {\r\n            entity[i.toLowerCase()] = entity[i];\r\n        }\r\n    }\r\n    return ret;\r\n}\r\n","export * from './CApp';\r\nexport * from './startApp';\r\nexport * from './uq';\r\nexport * from './action';\r\nexport * from './tuid';\r\nexport * from './sheet';\r\nexport * from './query';\r\nexport * from './map';\r\nexport * from './history';\r\nexport * from './pending';\r\nexport * from './form/viewModel';\r\nexport * from './form';\r\nexport * from './formUI';\r\nexport * from './ControllerUq';\r\nexport * from './CVEntity';\r\nexport * from './link';\r\nexport * from './icons';\r\n","import * as React from 'react';\r\nimport {observable, computed} from 'mobx';\r\nimport * as classNames from 'classnames';\r\nimport * as _ from 'lodash';\r\nimport {FormView} from '../formView';\r\nimport {Field} from '../field';\r\nimport {Face} from '../face';\r\nimport {Rule} from '../rule';\r\n\r\nexport abstract class ControlBase {\r\n    protected formView: FormView;\r\n    constructor(formView:FormView) {\r\n        this.formView = formView;\r\n    }\r\n    render():JSX.Element {\r\n        return <div className=\"col-sm-10\">\r\n            {this.renderControl()}\r\n        </div>;\r\n    }\r\n    protected abstract renderControl():JSX.Element;\r\n    @computed get hasError():boolean {return false;}\r\n    @computed get filled():boolean {return false;}\r\n    clear() {}\r\n    clearErrors() {}\r\n    readValues(values:any):any {}\r\n    setError(fieldName:string, error:string) {}\r\n    setInitValues(values: any) {}\r\n    isOk():boolean {this.validate(); return !this.hasError;}\r\n    protected validate() {}\r\n}\r\n\r\nexport abstract class Control extends ControlBase {\r\n    protected field: Field;\r\n    protected face: Face;\r\n    protected props: any;\r\n    protected rules: Rule[];\r\n\r\n    protected element: HTMLElement;\r\n    @observable protected isOK?: boolean;\r\n    @observable protected error: string;\r\n    @observable protected value: any;\r\n\r\n    constructor(formView:FormView, field:Field, face:Face) {\r\n        super(formView);\r\n        this.field = field;\r\n        this.face = face;\r\n        this.init();\r\n        this.setProps();\r\n    }\r\n    protected ref(element: HTMLElement) {\r\n        this.element = element;\r\n    }\r\n    protected init() {\r\n        this.rules = [];\r\n        let r = this.field.rules;\r\n        if (r !== undefined) {\r\n            if (Array.isArray(r) === true) this.rules.push(...(r as Rule[]));\r\n            else this.rules.push(r as Rule);\r\n        }\r\n    };\r\n    protected setProps():any {\r\n        return this.props = {\r\n            ref: this.ref.bind(this),\r\n            name: this.field.name,\r\n        }\r\n    };\r\n    @computed get hasError():boolean {return this.error !== undefined;}\r\n    @computed get filled():boolean {\r\n        let ret = this.value !== undefined && this.value !== this.field.defaultValue;\r\n        return ret;\r\n    }\r\n    clearValue() { this.value = undefined; }\r\n    clear() { this.clearErrors(); this.clearValue(); }\r\n    clearErrors() { this.isOK = undefined; this.error = undefined; }\r\n    readValues(values:any):any {\r\n        values[this.field.name] = this.value;\r\n    }\r\n    setError(fieldName:string, error:string) {}\r\n    setInitValues(values: any) {}\r\n    protected getValueFromElement():any {return this.value;}\r\n    protected validate() {\r\n        try {\r\n            let v = this.getValueFromElement();\r\n            if (this.rules.length > 0) {\r\n                let isOk:boolean;\r\n                for (let rule of this.rules) {\r\n                    console.log('validate: %s', v);\r\n                    let err = rule(v);\r\n                    console.log('validate: %s err: %s', v, err);\r\n                    if (err === true) {\r\n                        this.error = undefined;\r\n                        isOk = true;\r\n                    }\r\n                    else if (err !== undefined) {\r\n                        //console.log('field %s onBlur v=%s rule=%s err=%s', \r\n                        //    this.field.name, JSON.stringify(v), rule, err);\r\n                        this.error = err;\r\n                        this.isOK = false;\r\n                        return;\r\n                    }\r\n                }\r\n                this.isOK = isOk;\r\n            }\r\n            this.value = v;\r\n        }\r\n        catch (e) {\r\n            this.error = e.message;\r\n        }\r\n    }\r\n    render():JSX.Element {\r\n        let n;\r\n        if (this.face !== undefined) {\r\n            let {notes} = this.face;\r\n            if (notes !== undefined) n = <small className=\"text-muted\">{notes}</small>;\r\n        }\r\n        return <div className=\"col-sm-10\">\r\n            {this.renderControl()}\r\n            {n}\r\n        </div>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {observable} from 'mobx';\r\nimport * as classNames from 'classnames';\r\nimport * as _ from 'lodash';\r\nimport {FormView} from '../formView';\r\nimport {Field} from '../field';\r\nimport {Face} from '../face';\r\nimport {ControlBase} from './control';\r\n\r\nexport class ButtonsControl extends ControlBase {\r\n    constructor(props) {\r\n        super(props);\r\n        this.otherClick = this.otherClick.bind(this);\r\n    }\r\n    private otherClick() {\r\n        let onOther = this.formView.props.onOther;\r\n        if (onOther === undefined) return;\r\n        let values = this.formView.readValues();\r\n        onOther(values);\r\n    }\r\n    renderControl():JSX.Element {\r\n        console.log('buttons.renderControl');\r\n        let nothing = this.formView.nothing;\r\n        let hasError = this.formView.hasError;\r\n        let props = this.formView.props;\r\n        console.log('buttons.renderControl nothing:%s hasError:%s', nothing, hasError);\r\n        let {submitButton, otherButton, onOther} = props;\r\n        let btnOther;\r\n        if (otherButton !== undefined) {\r\n            btnOther = <button className=\"btn btn-outline-info ml-auto\" onClick={this.otherClick}>\r\n                {otherButton}\r\n            </button>\r\n        }\r\n        return <div className=\"d-flex justify-content-start\">\r\n            <button\r\n                className=\"btn btn-primary\"\r\n                type=\"submit\" \r\n                disabled={nothing || hasError}>\r\n                {submitButton || '提交'}\r\n            </button>\r\n            {btnOther}\r\n        </div>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {observable, computed} from 'mobx';\r\nimport * as classNames from 'classnames';\r\nimport * as _ from 'lodash';\r\nimport {FormView} from '../formView';\r\nimport {Field} from '../field';\r\nimport {Face, Placeholder} from '../face';\r\nimport {Control} from './control';\r\n\r\nconst TxtRequired = '必须填入要求内容';\r\n\r\nexport abstract class CharsControl extends Control {\r\n    protected init() {\r\n        super.init();\r\n        if (this.field.required === true) {\r\n            this.rules.push((v) => {\r\n                if (v===null || v===undefined || (v as string).trim().length === 0) return TxtRequired;\r\n                return true;\r\n            });\r\n        }\r\n    }\r\n\r\n    protected element: HTMLInputElement;\r\n    protected getValueFromElement():any {return this.parseValue(this.element.value)}\r\n\r\n    protected setProps() {\r\n        super.setProps();\r\n        _.assign(this.props, {\r\n            onBlur: this.onBlur.bind(this),\r\n            onFocus: this.onFocus.bind(this),\r\n            onChange: this.onChange.bind(this),\r\n        });\r\n        let face = this.face as Placeholder;\r\n        if (face !== undefined) {\r\n            _.assign(this.props, {\r\n                placeholder: face.placeholder,\r\n            });\r\n        }\r\n        return this.props;\r\n    };\r\n    protected parseValue(value?:string):any {return value;}\r\n    private onBlur() {\r\n        //console.log('field %s onBlure', this.field.name);\r\n        this.validate();\r\n    }\r\n    private onChange() {\r\n        console.log('onChange');\r\n        this.validate();\r\n    }\r\n    private onFocus() {\r\n        this.clearErrors();\r\n        //this.error = undefined;\r\n        //this.formView.clearErrors();\r\n    }\r\n    protected className() {\r\n        return classNames({\r\n            \"form-control\": true,\r\n            \"has-success\": this.isOK === true,\r\n            \"is-invalid\": this.error !== undefined,\r\n            \"is-valid\": this.error === undefined && this.isOK === true,\r\n        });\r\n    }\r\n    protected renderInput():JSX.Element {\r\n        return <input className={this.className()} {...this.props} />;\r\n    }\r\n    protected ref(element: HTMLInputElement) {\r\n        super.ref(element);\r\n        if (element) {\r\n            element.value = this.value === undefined? '':this.value;\r\n        }\r\n    }\r\n    protected renderError():JSX.Element {\r\n        //if (this.field.name === 'name') console.log('charsControl renderControl');\r\n        if (this.error === undefined) return null;\r\n        return <div className=\"invalid-feedback\">{this.error}</div>\r\n    }\r\n    clearValue() { super.clearValue(); this.element.value = ''; }\r\n    setError(fieldName:string, error:string) {\r\n        if (this.field.name === fieldName) this.error = error;\r\n    }\r\n    setInitValues(values: any) {\r\n        let v = values[this.field.name];\r\n        if (v === undefined) return;\r\n        //this.element.value = v;\r\n        this.value = v;\r\n    }\r\n    renderControl():JSX.Element {\r\n        return <React.Fragment>\r\n            {this.renderInput()}\r\n            {this.renderError()}\r\n        </React.Fragment>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport * as _ from 'lodash';\r\nimport {CharsControl} from './charsControl';\r\nimport {StringField} from '../field';\r\n\r\nexport class StringControl extends CharsControl {\r\n    protected field: StringField;\r\n    protected setProps() {\r\n        let p = super.setProps();\r\n        _.assign(p, {\r\n            type: 'text',\r\n            maxLength: this.field.maxLength,\r\n        });\r\n        return p;\r\n    };\r\n    protected parseValue(value?:string):any {\r\n        if (value === undefined) return undefined;\r\n        if (value.trim().length === 0) return undefined;\r\n        return value;\r\n    }\r\n}\r\n\r\nexport class PasswordControl extends StringControl {\r\n    protected setProps() {\r\n        let p = super.setProps();\r\n        _.assign(p, {\r\n            type: 'password',\r\n            maxLength: this.field.maxLength,\r\n        });\r\n        return p;\r\n    };\r\n}","import * as React from 'react';\r\nimport * as _ from 'lodash';\r\nimport {IntField, DecField, NumberField} from '../field';\r\nimport {CharsControl} from './charsControl';\r\n\r\nconst ErrInvalidNumber = '无效的数字';\r\nconst ErrMin = '最小值为';\r\nconst ErrMax = '最大值为';\r\n\r\nconst KeyCode_Neg = 45;\r\nconst KeyCode_Dot = 46;\r\n\r\nexport class NumberControl extends CharsControl {\r\n    protected field: IntField | DecField | NumberField;\r\n    protected value: number;\r\n    protected extraChars: number[];\r\n    \r\n    protected init() {\r\n        super.init();\r\n        this.extraChars = [];\r\n        let {min, max} = this.field;\r\n        if (min !== undefined) {\r\n            this.rules.push((v:number) => {if (v === undefined) return; if (v<min) return ErrMin + min; return true;});\r\n            if (min < 0) this.extraChars.push(KeyCode_Neg);\r\n        }\r\n        else {\r\n            this.extraChars.push(KeyCode_Neg);\r\n        }\r\n\r\n        if (max !== undefined) {\r\n            this.rules.push((v:number) => {if (v === undefined) return; if (v>max) return ErrMax + max; return true});\r\n        }\r\n        switch (this.field.type) {\r\n            case 'dec':\r\n            case 'number': this.extraChars.push(KeyCode_Dot); break;\r\n        }\r\n    }\r\n\r\n    protected parseValue(value?:string):any {\r\n        if (value === undefined) return undefined;\r\n        if (value.trim().length === 0) return undefined;\r\n        let n = Number.parseFloat(value);\r\n        if (isNaN(n)) throw new Error(ErrInvalidNumber);\r\n        return n;\r\n    }\r\n\r\n    protected setProps() {\r\n        super.setProps();\r\n        _.assign(this.props, {\r\n            type: 'number',\r\n            step: (this.field as DecField).step,\r\n            onKeyPress: this.onKeyPress.bind(this),\r\n        });\r\n    }\r\n\r\n    onKeyPress(event:KeyboardEvent) {\r\n        let ch = event.charCode;\r\n        if (ch === 8 || ch === 0 || ch === 13 || ch >= 48 && ch <= 57) return;\r\n        if (this.extraChars !== undefined) {\r\n            if (this.extraChars.indexOf(ch) >= 0) {\r\n                switch (ch) {\r\n                    case KeyCode_Dot: this.onKeyDot(); break;\r\n                    case KeyCode_Neg: this.onKeyNeg(); event.preventDefault(); break;\r\n                }\r\n                return;\r\n            }\r\n        }\r\n        event.preventDefault();\r\n    }\r\n\r\n    private onKeyDot() {\r\n        let v = this.element.value;\r\n        let p = v.indexOf('.');\r\n        if (p >= 0) this.element.value = v.replace('.', '');\r\n    }\r\n    private onKeyNeg() {\r\n        let v = this.element.value;\r\n        let p = v.indexOf('-');\r\n        if (p >= 0) v = v.replace('-', '');\r\n        else v = '-'+v;\r\n        this.element.value = v;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {Control, ControlBase} from './control';\r\nimport {FormView} from '../formView';\r\n\r\nexport class UnknownControl extends Control {\r\n    renderControl():JSX.Element {\r\n        return <div className=\"form-control-plaintext\">\r\n            <div className=\"alert alert-primary\" role=\"alert\">\r\n            don't know how to create control<br/>\r\n            field: {JSON.stringify(this.field)} must be object <br/>\r\n            face: {JSON.stringify(this.face)} must be object <br/>\r\n            </div>\r\n        </div>;\r\n    }\r\n}\r\n\r\nexport class EmptyControl extends ControlBase {\r\n    private element:JSX.Element;\r\n    constructor(formView:FormView, element:JSX.Element) {\r\n        super(formView);\r\n        this.element = element;\r\n    }\r\n    renderControl():JSX.Element {\r\n        return <div className=\"form-control-plaintext\">\r\n            {this.element}\r\n        </div>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {observable} from 'mobx';\r\nimport * as classNames from 'classnames';\r\nimport * as _ from 'lodash';\r\nimport {FormView} from '../formView';\r\nimport {Field} from '../field';\r\nimport {Face, IdPickFace} from '../face';\r\nimport {Control} from './control';\r\n\r\nexport class PickIdControl extends Control {\r\n    protected face: IdPickFace;\r\n    @observable private caption: string|JSX.Element;\r\n\r\n    private onClick = async () => {\r\n        let {pick, fromPicked} = this.face;\r\n        let item = await pick(this.face, this.formView.props, this.formView.readValues());\r\n        if (item === undefined) {\r\n            this.value = undefined;\r\n            return;\r\n        }\r\n        if (fromPicked === undefined) {\r\n            this.value = item.id;\r\n            return;\r\n        }\r\n        let {id, caption} = fromPicked(item);\r\n        this.value = id;\r\n        this.caption = caption;\r\n    }\r\n    onPicked = (value: any) => {\r\n        this.value = value.id;\r\n    }\r\n    setInitValues(values: any) {\r\n        let v = values[this.field.name];\r\n        this.value = v;\r\n    }\r\n    private controlContent():string|JSX.Element {\r\n        let {itemFromId, fromPicked, initCaption} = this.face;\r\n        if (this.value === undefined) {\r\n            return initCaption || '请选择Id';\r\n        }\r\n        if (this.caption !== undefined) {\r\n            return this.caption;\r\n        }\r\n        if (itemFromId !== undefined) {\r\n            if (fromPicked !== undefined) {\r\n                let item = itemFromId(this.value);\r\n                if (item) {\r\n                    let ret = fromPicked(item);\r\n                    if (ret !== undefined) return ret.caption;\r\n                }\r\n            }\r\n        }\r\n        return String(this.value);\r\n    }\r\n    /*\r\n    private buildContent():string|JSX.Element {\r\n        let {tuid, input} = this.face;\r\n        if (input === undefined) {\r\n            //return <div>no input on idpick</div>;\r\n            return <div onClick={this.onClick}>{this.controlContent()}</div>;\r\n        }\r\n        return <input.component id={this.value} \r\n            tuid={tuid}\r\n            input={input}\r\n            entitiesUI={this.formView.props.context} \r\n            params={this.formView.readValues()}\r\n            onPicked={this.onPicked} />;\r\n    }*/\r\n    renderControl():JSX.Element {\r\n        let {tuid, input} = this.face;\r\n        if (input === undefined) {\r\n            //return <div>no input on idpick</div>;\r\n            return <div className=\"form-control-plaintext px-2 border text-primary rounded cursor-pointer\"\r\n                onClick={this.onClick}>\r\n                {this.controlContent()}\r\n            </div>;\r\n        }\r\n        return <div className=\"form-control-static \">\r\n            <input.component id={this.value} \r\n                ui={tuid}\r\n                //input={input}\r\n                //entitiesUI={this.formView.props.context} \r\n                //params={this.formView.readValues()}\r\n                //onPicked={this.onPicked}\r\n                />\r\n        </div>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {observable} from 'mobx';\r\nimport * as classNames from 'classnames';\r\nimport * as _ from 'lodash';\r\nimport {FormView} from '../formView';\r\nimport {Field} from '../field';\r\nimport {Face, TuidPickFace} from '../face';\r\nimport {Control} from './control';\r\n\r\nexport class PickTuidControl extends Control {\r\n    protected face: TuidPickFace;\r\n    // protected value: number;\r\n    @observable private caption: string|JSX.Element;\r\n    constructor(formView:FormView, field:Field, face:Face) {\r\n        super(formView, field, face);\r\n        this.onIdChanged = this.onIdChanged.bind(this);\r\n        //this.onClick = this.onClick.bind(this);\r\n    }\r\n    /*\r\n    private async onClick() {\r\n        let {pick, fromPicked} = this.face;\r\n        let item = await pick(this.face, this.formView.props, this.formView.readValues());\r\n        if (item === undefined) {\r\n            this.value = undefined;\r\n            return;\r\n        }\r\n        if (fromPicked === undefined) {\r\n            this.value = item.id;\r\n            return;\r\n        }\r\n        let {id, caption} = fromPicked(item);\r\n        this.value = id;\r\n        this.caption = caption;\r\n    }*/\r\n    onIdChanged(id: any) {\r\n        this.value = id.id;\r\n    }\r\n    setInitValues(values: any) {\r\n        let v = values[this.field.name];\r\n        this.value = v;\r\n    }\r\n    private buildContent():JSX.Element {\r\n        //let {tuid, input} = this.face;\r\n        return <this.face.input.component \r\n            {...this.face}\r\n            id={this.value}\r\n            //ui={this.face.ui}\r\n            //input={input}\r\n            //entitiesUI={this.formView.props.context} \r\n            onFormValues={()=>this.formView.readValues()}\r\n            onIdChanged={this.onIdChanged} />;\r\n    }\r\n    renderControl():JSX.Element {\r\n        return <div className=\"form-control-static \">\r\n            {this.buildContent()}\r\n        </div>;\r\n    }\r\n}\r\n/*\r\n<button className=\"form-control btn btn-outline-info\"\r\ntype=\"button\"\r\nstyle={{textAlign:'left', paddingLeft:'0.75rem'}}\r\nonClick={this.onClick}>\r\n{this.buildContent()}\r\n</button>\r\n*/","import * as React from 'react';\r\nimport {observable} from 'mobx';\r\nimport * as classNames from 'classnames';\r\nimport * as _ from 'lodash';\r\nimport {FormView} from '../formView';\r\nimport {Field} from '../field';\r\nimport {Face, PickFace} from '../face';\r\nimport {Control} from './control';\r\nimport { observer } from 'mobx-react';\r\n\r\nexport class PickControl extends Control {\r\n    protected face: PickFace;\r\n    @observable private caption: string|JSX.Element;\r\n\r\n    private onClick = async () => {\r\n        let {pick, fromPicked} = this.face;\r\n        let item = await pick(this.face, this.formView.props, this.formView.readValues());\r\n        if (item === undefined) {\r\n            this.value = undefined;\r\n            return;\r\n        }\r\n        let {id, caption} = fromPicked(item);\r\n        this.value = id;\r\n        this.caption = caption;\r\n    }\r\n    setInitValues(values: any) {\r\n        let v = values[this.field.name];\r\n        this.value = v;\r\n    }\r\n    /*\r\n    private controlContent():string|JSX.Element {\r\n        let {content: Content} = this.face;\r\n        if (this.value === undefined) {\r\n            return '请选择';\r\n        }\r\n        \r\n        if (this.caption !== undefined) {\r\n            return this.caption;\r\n        }\r\n        return <Content id={this.value} />;\r\n    }*/\r\n    /*\r\n    private buildContent():string|JSX.Element {\r\n        let {tuid, input} = this.face;\r\n        if (input === undefined) {\r\n            //return <div>no input on idpick</div>;\r\n            return <div onClick={this.onClick}>{this.controlContent()}</div>;\r\n        }\r\n        return <input.component id={this.value} \r\n            tuid={tuid}\r\n            input={input}\r\n            entitiesUI={this.formView.props.context} \r\n            params={this.formView.readValues()}\r\n            onPicked={this.onPicked} />;\r\n    }*/\r\n    renderControl():JSX.Element {\r\n        return <this.view />;\r\n        /*\r\n        let {content:Content} = this.face;\r\n        //if (this.value === undefined) {\r\n            //return <div>no input on idpick</div>;\r\n        //}\r\n        //return <div className=\"form-control-static \">\r\n        //    <Content />\r\n        //</div>;\r\n        */\r\n    }\r\n\r\n    private view = observer(() => {\r\n        let content;\r\n        let {content: Content} = this.face;\r\n        if (this.value === undefined || this.value === null) {\r\n            content = '请选择';\r\n        }\r\n        /*\r\n        else if (this.caption !== undefined) {\r\n            content = this.caption;\r\n        }*/\r\n        else {\r\n            content = <Content id={this.value} />;\r\n        } \r\n        return <div\r\n            className=\"form-control-plaintext px-2 border text-primary rounded cursor-pointer bg-light\"\r\n            onClick={this.onClick}>\r\n            {content}\r\n        </div>\r\n    });\r\n}\r\n","export * from './control';\r\nexport * from './buttonsControl';\r\nexport * from './stringControl';\r\nexport * from './numberControl';\r\n\r\nimport {Field} from '../field';\r\nimport {Face} from '../face';\r\nimport {Control, ControlBase} from './control';\r\nimport {ButtonsControl} from './buttonsControl';\r\nimport {CheckControl} from './checkControl';\r\nimport {RadioControl} from './radioControl';\r\nimport {TextAreaControl} from './textAreaControl';\r\nimport {SelectControl} from './selectControl';\r\nimport {UnknownControl, EmptyControl} from './unknownControl';\r\nimport {StringControl, PasswordControl} from './stringControl';\r\nimport {NumberControl} from './numberControl';\r\n\r\nimport {FormView, FormRow, GroupRow, FieldRow, LabelFormRow} from '../formView';\r\nimport { PickIdControl } from './pickIdControl';\r\nimport { PickTuidControl } from './pickTuidControl';\r\nimport { PickControl } from './pickControl';\r\n\r\nexport type CreateControl = (form:FormView, row: FormRow) => ControlBase\r\n\r\nexport const createControl:CreateControl = (form:FormView, row: LabelFormRow):ControlBase => {\r\n    let label = row.label;\r\n    if ((<GroupRow>row).group !== undefined)\r\n        return createGroupControl(form, label, row as GroupRow);\r\n    if ((<FieldRow>row).field !== undefined)\r\n        return createFieldControl(form, label, row as FieldRow);\r\n    return new EmptyControl(form, row.help);\r\n}\r\n\r\nconst controls:{[type:string]: new (formView:FormView, field:Field, face:Face) => Control} = {\r\n    \"string\": StringControl,\r\n    \"password\": PasswordControl,\r\n    \"number\": NumberControl,\r\n    \"checkbox\": CheckControl,\r\n    \"radiobox\": RadioControl,\r\n    \"select\": SelectControl,\r\n    \"pick-id\": PickIdControl,\r\n    \"pick-tuid\": PickTuidControl,\r\n    \"textarea\": TextAreaControl,\r\n    \"pick\": PickControl,\r\n};\r\nconst defaultFaces:{[type:string]: Face} = {\r\n    \"string\": {type:'string'},\r\n    \"number\": {type:'number'},\r\n    \"int\": {type:'number'},\r\n    \"dec\": {type:'number'},\r\n    \"bool\": {type:'checkbox'},\r\n}\r\nfunction createFieldControl(form:FormView, label:string, fieldRow: FieldRow):Control {\r\n    let {field, face} = fieldRow;\r\n    switch (typeof field) {\r\n        case 'string':\r\n            field = {\r\n                name: (field as any) as string,\r\n                type: 'string',\r\n            }\r\n            break;\r\n        case 'object':\r\n            break;\r\n        default:\r\n            return new UnknownControl(form, field, face);\r\n    }\r\n    let fieldType = field.type || 'string';\r\n    if (face === undefined) {\r\n        face = defaultFaces[fieldType];\r\n        if (face === undefined) return new UnknownControl(form, field, face);\r\n    }\r\n    else if (face.type === undefined) {\r\n        let f = defaultFaces[fieldType];\r\n        face.type = f===undefined? 'string' : f.type;\r\n    }\r\n    let control = controls[face.type || fieldType] || UnknownControl;\r\n    return new control(form, field, face);\r\n}\r\n\r\nfunction createGroupControl(form:FormView, label:string, groupRow: GroupRow):Control {\r\n    return new UnknownControl(form, groupRow as any, undefined);\r\n}\r\n","import * as React from 'react';\r\nimport {observable} from 'mobx';\r\nimport * as classNames from 'classnames';\r\nimport * as _ from 'lodash';\r\nimport {FormView} from '../formView';\r\nimport {Field, BoolField} from '../field';\r\nimport {Face, CheckBoxFace} from '../face';\r\nimport {Control} from './control';\r\n\r\nexport class CheckControl extends Control {    \r\n    protected element: HTMLInputElement;\r\n    protected field: BoolField;\r\n    protected face: CheckBoxFace;\r\n    private trueValue: any;\r\n    private falseValue: any;\r\n\r\n    protected init() {\r\n        super.init();\r\n        let {trueValue, falseValue} = this.field;\r\n        if (trueValue === undefined) this.trueValue = 1;\r\n        if (falseValue === undefined) this.falseValue = 0;\r\n    }\r\n\r\n    setProps() {\r\n        super.setProps();\r\n        _.assign(this.props, {\r\n            onChange: this.onChange.bind(this),\r\n        });\r\n    }\r\n\r\n    clearValue() {\r\n        this.element.checked = this.field.defaultValue === this.trueValue;\r\n        this.value = this.getValueFromElement();\r\n    }\r\n\r\n    setInitValues(values: any) {\r\n        let v = values[this.field.name];\r\n        if (v === undefined) {\r\n            v = this.field.defaultValue;\r\n        }\r\n        if (v !== undefined) {\r\n            //this.element.checked = v === this.trueValue;\r\n            //this.value = this.getValueFromElement();\r\n        }\r\n    }\r\n\r\n    protected getValueFromElement():any { return this.element.checked? this.trueValue:this.falseValue; }\r\n\r\n    private onChange() {\r\n        this.value = this.getValueFromElement();\r\n    }\r\n\r\n    renderControl():JSX.Element {\r\n        return <div className=\"form-control-static\">\r\n            <label className=\"form-control\">\r\n                <label className=\"custom-control custom-checkbox mb-0\">\r\n                    <input type='checkbox'\r\n                        name={this.field.name}\r\n                        ref={this.props.ref}\r\n                        onChange={this.props.onChange}\r\n                        className=\"custom-control-input\" />\r\n                    <span className=\"custom-control-indicator\" />\r\n                    <span className=\"custom-control-description\">{this.face.label}</span>\r\n                </label>\r\n            </label>\r\n        </div>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {observable} from 'mobx';\r\nimport * as classNames from 'classnames';\r\nimport * as _ from 'lodash';\r\nimport {FormView} from '../formView';\r\nimport {Field} from '../field';\r\nimport {Face, RadioFace} from '../face';\r\nimport {Control} from './control';\r\n\r\nexport class RadioControl extends Control {\r\n    protected face: RadioFace;\r\n    renderControl():JSX.Element {\r\n        return <div className=\"form-control-static\">\r\n            <div className=\"form-control\">\r\n            {\r\n                this.face.list.map((item, index) => {\r\n                    let t, v;\r\n                    if (typeof item !== 'object') t = v = item;\r\n                    else {\r\n                        t = item.text;\r\n                        v = item.value;\r\n                    }\r\n                    return <label key={index} className=\"custom-control custom-radio w-25\">\r\n                        <input type='radio'\r\n                            name={this.field.name} \r\n                            className=\"custom-control-input\" />\r\n                        <span className=\"custom-control-indicator\"></span>\r\n                        <span className=\"custom-control-description\">{t}</span>\r\n                    </label>;\r\n                })\r\n            }\r\n            </div>\r\n        </div>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {observable} from 'mobx';\r\nimport * as classNames from 'classnames';\r\nimport * as _ from 'lodash';\r\nimport {FormView} from '../formView';\r\nimport {Field} from '../field';\r\nimport {Face, SelectFace} from '../face';\r\nimport {Control} from './control';\r\n\r\nexport class SelectControl extends Control {\r\n    constructor (formView:FormView, field:Field, face:Face) {\r\n        super(formView, field, face);\r\n        this.ref = this.ref.bind(this);\r\n    }\r\n    protected face: SelectFace;\r\n    protected element: HTMLSelectElement;\r\n    protected getValueFromElement():any {\r\n        let {selectedIndex, selectedOptions} = this.element;\r\n        let v:any = selectedOptions[0].value;\r\n        switch (this.field.type) {\r\n            case 'number': v = Number(v); break;\r\n            case 'date': v = new Date(v); break;\r\n            case 'bool': \r\n                if (typeof v === 'string') {\r\n                    v = ((v as string).toLowerCase() === 'true');\r\n                }\r\n                break;\r\n        }\r\n        return v;\r\n    }\r\n    renderControl():JSX.Element {\r\n        let {list} = this.face;\r\n        let def = this.face.default;\r\n        let options: any[] = [];\r\n        if (def === undefined)\r\n            options.push(<option key={-1} value={undefined}>请选择</option>);\r\n        options.push(...list.map((item, index) => {\r\n            let t, v;\r\n            if (typeof item !== 'object') t = v = item;\r\n            else {\r\n                t = item.text;\r\n                v = item.value;\r\n            }\r\n            return <option key={index} value={v}>{t}</option>;\r\n        }));\r\n        return <div className=\"form-control-static\">\r\n            <select name={this.field.name} className=\"form-control\" ref={this.ref}>\r\n                {options}\r\n            </select>\r\n        </div>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport * as _ from 'lodash';\r\nimport {CharsControl} from './charsControl';\r\nimport {StringField} from '../field';\r\nimport {TextAreaFace} from '../face';\r\n\r\nexport class TextAreaControl extends CharsControl {\r\n    protected field: StringField;\r\n    protected face: TextAreaFace;\r\n    private el: HTMLTextAreaElement;\r\n    protected setProps() {\r\n        let p = super.setProps();\r\n        let {maxLength} = this.field;\r\n        let {rows} = this.face;\r\n        _.assign(p, {\r\n            maxLength: maxLength,\r\n            rows: rows,\r\n        });\r\n        return p;\r\n    };\r\n    protected renderInput():JSX.Element {\r\n        return <textarea ref={t=>{this.el = t;if (t!==undefined) t.value=''}} className={this.className()} {...this.props} />;\r\n    }\r\n}\r\n","import { Entities, Field, ArrFields, FieldMap } from './entities';\r\nimport { TuidMain, Tuid } from './tuid';\r\n\r\nconst tab = '\\t';\r\nconst ln = '\\n';\r\n\r\nexport abstract class Entity {\r\n    protected entities: Entities;\r\n    protected schema: any;\r\n    private jName: string;\r\n    sys?: boolean;\r\n    readonly name: string;\r\n    readonly typeId: number;\r\n    abstract get typeName(): string;\r\n    get sName():string {return this.jName || this.name}\r\n    fields: Field[];\r\n    arrFields: ArrFields[];\r\n    returns: ArrFields[];\r\n\r\n    constructor(entities:Entities, name:string, typeId:number) {\r\n        this.entities = entities;\r\n        this.name = name;\r\n        this.typeId = typeId;\r\n        this.sys = this.name.indexOf('$') >= 0;\r\n    }\r\n\r\n    public face: any;           // 对应字段的label, placeHolder等等的中文，或者语言的翻译\r\n\r\n    protected get tvApi() {return this.entities.uqApi;}\r\n    async getApiFrom() {return this.entities.uqApi;}\r\n\r\n    private fieldMaps: {[arr:string]: FieldMap} = {};\r\n    fieldMap(arr?:string): FieldMap {\r\n        if (arr === undefined) arr = '$';\r\n        let ret = this.fieldMaps[arr];\r\n        if (ret === undefined) {\r\n            let fields:Field[];\r\n            if (arr === '$') fields = this.fields;\r\n            else if (this.arrFields !== undefined) {\r\n                let arrFields = this.arrFields.find(v => v.name === arr);\r\n                if (arrFields !== undefined) fields = arrFields.fields;\r\n            }\r\n            else if (this.returns !== undefined) {\r\n                let arrFields = this.returns.find(v => v.name === arr);\r\n                if (arrFields !== undefined) fields = arrFields.fields;\r\n            }\r\n            if (fields === undefined) return {};\r\n            ret = {};\r\n            for (let f of fields) ret[f.name] = f;\r\n            this.fieldMaps[arr] = ret;\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    public async loadSchema():Promise<void> {\r\n        if (this.schema !== undefined) return;\r\n        let schema = await this.entities.uqApi.schema(this.name);\r\n        this.setSchema(schema);\r\n    }\r\n\r\n    public setSchema(schema:any) {\r\n        if (schema === undefined) return;\r\n        if (this.schema !== undefined) return;\r\n        this.schema = schema;\r\n        let {name, fields, arrs, returns} = schema;\r\n        if (name !== this.name) this.jName = name;\r\n        this.entities.buildFieldTuid(this.fields = fields);\r\n        this.entities.buildArrFieldsTuid(this.arrFields = arrs, fields);\r\n        this.entities.buildArrFieldsTuid(this.returns = returns, fields);\r\n        //this.newMain = this.buildCreater(fields);\r\n        //this.newArr = this.buildArrCreater(arrs);\r\n        //this.newRet = this.buildArrCreater(returns);\r\n    }\r\n\r\n    schemaStringify():string {\r\n        return JSON.stringify(this.schema, (key:string, value:any) => {\r\n            if (key === '_tuid') return undefined;\r\n            return value;\r\n        }, 4);\r\n    }\r\n\r\n    tuidFromField(field:Field):Tuid {\r\n        let {_tuid, tuid} = field;\r\n        if (tuid === undefined) return;\r\n        if (_tuid !== undefined) return _tuid;\r\n        return field._tuid = this.entities.getTuid(tuid, undefined);\r\n    }\r\n\r\n    tuidFromName(fieldName:string, arrName?:string):Tuid {\r\n        if (this.schema === undefined) return;\r\n        let {fields, arrs} = this.schema;\r\n        let entities = this.entities;\r\n        function getTuid(fn:string, fieldArr:Field[]) {\r\n            if (fieldArr === undefined) return;\r\n            let f = fieldArr.find(v => v.name === fn);\r\n            if (f === undefined) return;\r\n            return entities.getTuid(f.tuid, undefined);\r\n        }\r\n        let fn = fieldName.toLowerCase();\r\n        if (arrName === undefined) return getTuid(fn, fields);\r\n        if (arrs === undefined) return;\r\n        let an = arrName.toLowerCase();\r\n        let arr = (arrs as ArrFields[]).find(v => v.name === an);\r\n        if (arr === undefined) return;\r\n        return getTuid(fn, arr.fields);\r\n    }\r\n\r\n    protected buildParams(params:any):any {\r\n        let result = {};\r\n        let fields = this.fields;\r\n        if (fields !== undefined) this.buildFieldsParams(result, fields, params);\r\n        let arrs = this.arrFields; \r\n        if (arrs !== undefined) {\r\n            for (let arr of arrs) {\r\n                let {name, fields} = arr;\r\n                let paramsArr:any[] = params[name];\r\n                if (paramsArr === undefined) continue;\r\n                let arrResult = [];\r\n                result[name] = arrResult;\r\n                for (let pa of params) {\r\n                    let rowResult = {};\r\n                    this.buildFieldsParams(rowResult, fields, pa);\r\n                    arrResult.push(rowResult);\r\n                }\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n\r\n    private buildFieldsParams(result:any, fields:Field[], params:any) {\r\n        for (let field of fields) {\r\n            let {name} = field;\r\n            let d = params[name];\r\n            let val:any;\r\n            switch (typeof d) {\r\n                default: val = d; break;\r\n                case 'object':\r\n                    let tuid = field._tuid;\r\n                    if (tuid === undefined) val = d.id;\r\n                    else val = tuid.getIdFromObj(d);\r\n                    break;\r\n            }\r\n            result[name] = val;\r\n        }\r\n    }\r\n\r\n    pack(data:any):string {\r\n        let ret:string[] = [];\r\n        let fields = this.fields;\r\n        if (fields !== undefined) this.packRow(ret, fields, data);\r\n        let arrs = this.arrFields; //schema['arrs'];\r\n        if (arrs !== undefined) {\r\n            for (let arr of arrs) {\r\n                this.packArr(ret, arr.fields, data[arr.name]);\r\n            }\r\n        }\r\n        return ret.join('');\r\n    }\r\n    \r\n    private escape(row:any, field:Field):any {\r\n        let d = row[field.name];\r\n        switch (typeof d) {\r\n            default: return d;\r\n            case 'object':\r\n                let tuid = field._tuid;\r\n                if (tuid === undefined) return d.id;\r\n                return tuid.getIdFromObj(d);\r\n            case 'string':\r\n                let len = d.length;\r\n                let r = '', p = 0;\r\n                for (let i=0;i<len;i++) {\r\n                    let c = d.charCodeAt(i);\r\n                    switch(c) {\r\n                        case 9: r += d.substring(p, i) + '\\\\t'; p = i+1; break;\r\n                        case 10: r += d.substring(p, i) + '\\\\n'; p = i+1; break;\r\n                    }\r\n                }\r\n                return r + d.substring(p);\r\n            case 'undefined': return '';\r\n        }\r\n    }\r\n    \r\n    private packRow(result:string[], fields:Field[], data:any) {\r\n        let len = fields.length;\r\n        if (len === 0) return;\r\n        let ret = '';\r\n        ret += this.escape(data, fields[0]);\r\n        for (let i=1;i<len;i++) {\r\n            let f = fields[i];\r\n            ret += tab + this.escape(data, f);\r\n        }\r\n        result.push(ret + ln);\r\n    }\r\n    \r\n    private packArr(result:string[], fields:Field[], data:any[]) {\r\n        if (data !== undefined) {\r\n            for (let row of data) {\r\n                this.packRow(result, fields, row);\r\n            }\r\n        }\r\n        result.push(ln);\r\n    }\r\n    \r\n    unpackSheet(data:string):any {\r\n        let ret = {} as any; //new this.newMain();\r\n        //if (schema === undefined || data === undefined) return;\r\n        let fields = this.fields;\r\n        let p = 0;\r\n        if (fields !== undefined) p = this.unpackRow(ret, fields, data, p);\r\n        let arrs = this.arrFields; //schema['arrs'];\r\n        if (arrs !== undefined) {\r\n            for (let arr of arrs) {\r\n                p = this.unpackArr(ret, arr, data, p);\r\n            }\r\n        }\r\n        return ret;\r\n    }\r\n    \r\n    unpackReturns(data:string):any {\r\n        let ret = {} as any;\r\n        //if (schema === undefined || data === undefined) return;\r\n        //let fields = schema.fields;\r\n        let p = 0;\r\n        //if (fields !== undefined) p = unpackRow(ret, schema.fields, data, p);\r\n        let arrs = this.returns; //schema['returns'];\r\n        if (arrs !== undefined) {\r\n            for (let arr of arrs) {\r\n                //let creater = this.newRet[arr.name];\r\n                p = this.unpackArr(ret, arr, data, p);\r\n            }\r\n        }\r\n        return ret;\r\n    }\r\n    \r\n    private unpackRow(ret:any, fields:Field[], data:string, p:number):number {\r\n        let ch0 = 0, ch = 0, c = p, i = 0, len = data.length, fLen = fields.length;\r\n        for (;p<len;p++) {\r\n            ch0 = ch;\r\n            ch = data.charCodeAt(p);\r\n            if (ch === 9) {\r\n                let f = fields[i];\r\n                if (ch0 !== 8) {\r\n                    if (p>c) {\r\n                        let v = data.substring(c, p);\r\n                        ret[f.name] = this.to(ret, v, f);\r\n                    }\r\n                }\r\n                else {\r\n                    ret[f.name] = null;\r\n                }\r\n                c = p+1;\r\n                ++i;\r\n                if (i>=fLen) break;\r\n            }\r\n            else if (ch === 10) {\r\n                let f = fields[i];\r\n                if (ch0 !== 8) {\r\n                    if (p>c) {\r\n                        let v = data.substring(c, p);\r\n                        ret[f.name] = this.to(ret, v, f);\r\n                    }\r\n                }\r\n                else {\r\n                    ret[f.name] = null;\r\n                }\r\n                ++p;\r\n                ++i;\r\n                break;\r\n            }\r\n        }\r\n        return p;\r\n    }\r\n\r\n    private to(ret:any, v:string, f:Field):any {\r\n        switch (f.type) {\r\n            default: return v;\r\n            case 'datetime':\r\n            case 'date':\r\n            case 'time':\r\n                let date = new Date(Number(v));\r\n                return date;\r\n            case 'tinyint':\r\n            case 'smallint':\r\n            case 'int':\r\n            case 'dec': return Number(v);\r\n            case 'bigint':\r\n                let id = Number(v);\r\n                let {_tuid} = f;\r\n                if (_tuid === undefined) return id;\r\n                _tuid.useId(id, true);\r\n                return _tuid.boxId(id);\r\n        }\r\n    }\r\n\r\n    private unpackArr(ret:any, arr:ArrFields, data:string, p:number):number {\r\n        let vals:any[] = [], len = data.length;\r\n        let {name, fields} = arr;\r\n        while (p<len) {\r\n            let ch = data.charCodeAt(p);\r\n            if (ch === 10) {\r\n                ++p;\r\n                break;\r\n            }\r\n            let val = {} as any; //new creater();\r\n            vals.push(val);\r\n            p = this.unpackRow(val, fields, data, p);\r\n        }\r\n        ret[name] = vals;\r\n        return p;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {observable} from 'mobx';\r\nimport _ from 'lodash';\r\nimport { Entity } from './entity';\r\nimport { Entities, Field, ArrFields } from './entities';\r\nimport { isNumber } from 'util';\r\nimport { CUq, CTuidMain, CTuidEdit, CTuidInfo, CTuidSelect } from '../controllers';\r\n\r\nexport class BoxId {\r\n    id: number;\r\n    obj?: any;\r\n    content: (templet?:(values?:any, x?:any)=>JSX.Element, x?:any)=>JSX.Element;\r\n    valueFromFieldName: (fieldName:string)=>BoxId|any;\r\n    _$com?: any;\r\n    _$tuid?: Tuid;\r\n    getObj: ()=>any;\r\n}\r\n\r\nconst maxCacheSize = 1000;\r\nexport abstract class Tuid extends Entity {\r\n    private BoxId: ()=>void;\r\n    get typeName(): string { return 'tuid';}\r\n    private queue: number[] = [];               // 每次使用，都排到队头\r\n    private waitingIds: number[] = [];          // 等待loading的\r\n    private cache = observable.map({}, {deep: false});    // 已经缓冲的\r\n    idName: string;\r\n    owner: TuidMain;                    // 用这个值来区分是不是TuidArr\r\n    unique: string[];\r\n    schemaFrom: {owner:string; uq:string};\r\n\r\n    constructor(entities:Entities, name:string, typeId:number) {\r\n        super(entities, name, typeId);\r\n        this.buildIdBoxer();\r\n    }\r\n\r\n    abstract get Main():Tuid;\r\n\r\n    private buildIdBoxer() {\r\n        this.BoxId = function():void {};\r\n        let prototype = this.BoxId.prototype;\r\n        Object.defineProperty(prototype, '_$tuid', {\r\n            value: this,\r\n            writable: false,\r\n            enumerable: false,\r\n        })\r\n        Object.defineProperty(prototype, 'obj', {\r\n            enumerable: false,\r\n            get: function() {\r\n                if (this.id === undefined || this.id<=0) return undefined;\r\n                return this._$tuid.valueFromId(this.id);\r\n            }\r\n        })\r\n        prototype.valueFromFieldName = function(fieldName:string):BoxId|any {\r\n            let t:Tuid = this._$tuid;\r\n            return t.valueFromFieldName(fieldName, this.obj);\r\n        }\r\n        prototype.getObj = function():any {\r\n            if (this._$tuid !== undefined) {\r\n                return this._$tuid.getCacheValue(this.id);\r\n            }\r\n        }\r\n        prototype.toJSON = function() {return this.id}\r\n    }\r\n    boxId(id:number):BoxId {\r\n        this.useId(id);\r\n        let ret:BoxId = new this.BoxId();\r\n        ret.id = id;\r\n        return ret;\r\n    }\r\n    getTuidContent() {\r\n        return this.entities.cUq.getTuidContent(this);\r\n    }\r\n    getIdFromObj(item:any):number {\r\n        return item[this.idName];\r\n    }\r\n\r\n    setSchema(schema:any) {\r\n        super.setSchema(schema);\r\n        let {id, unique} = schema;\r\n        this.idName = id;\r\n        this.unique = unique;\r\n        this.schemaFrom = this.schema.from;\r\n    }\r\n\r\n    private moveToHead(id:number) {\r\n        let index = this.queue.findIndex(v => v === id);\r\n        this.queue.splice(index, 1);\r\n        this.queue.push(id);\r\n    }\r\n\r\n    valueFromId(id:number|BoxId):any {\r\n        let _id:number;\r\n        let tId = typeof id;\r\n        switch (typeof id) {\r\n            case 'object': _id = (id as BoxId).id; break;\r\n            case 'number': _id = id as number; break;\r\n            default: return;\r\n        }\r\n        return this.getCacheValue(_id);\r\n    }\r\n    getCacheValue(id:number) {\r\n        let v = this.cache.get(id);\r\n        if (this.owner !== undefined && typeof v === 'object') {\r\n            v.$owner = this.owner.boxId(v.owner); // this.owner.valueFromId(v.owner);\r\n        }\r\n        return v;\r\n    }\r\n    valueFromFieldName(fieldName:string, obj:any):BoxId|any {\r\n        if (obj === undefined) return;\r\n        let f = this.fields.find(v => v.name === fieldName);\r\n        if (f === undefined) return;\r\n        let v = obj[fieldName];\r\n        let {_tuid} = f;\r\n        if (_tuid === undefined) return v;\r\n        return _tuid.valueFromId(v);\r\n    }\r\n    resetCache(id:number) {\r\n        this.cache.delete(id);\r\n        let index = this.queue.findIndex(v => v === id);\r\n        this.queue.splice(index, 1);\r\n        this.useId(id);\r\n    }\r\n    useId(id:number, defer?:boolean) {\r\n        if (id === undefined || id === 0) return;\r\n        if (isNumber(id) === false) return;\r\n        if (this.cache.has(id) === true) {\r\n            this.moveToHead(id);\r\n            return;\r\n        }\r\n        this.entities.cacheTuids(defer===true?70:20);\r\n        //let idVal = this.createID(id);\r\n        this.cache.set(id, id);\r\n        if (this.waitingIds.findIndex(v => v === id) >= 0) {\r\n            this.moveToHead(id);\r\n            return;\r\n        }\r\n\r\n        if (this.queue.length >= maxCacheSize) {\r\n            // 缓冲已满，先去掉最不常用的\r\n            let r = this.queue.shift();\r\n            if (r === id) {\r\n                // 如果移除的，正好是现在用的，则插入\r\n                this.queue.push(r);\r\n                return;\r\n            }\r\n\r\n            //let rKey = String(r);\r\n            if (this.cache.has(r) === true) {\r\n                // 如果移除r已经缓存\r\n                this.cache.delete(r);\r\n            }\r\n            else {\r\n                // 如果移除r还没有缓存\r\n                let index = this.waitingIds.findIndex(v => v === r);\r\n                this.waitingIds.splice(index, 1);\r\n            }\r\n        }\r\n        this.waitingIds.push(id);\r\n        this.queue.push(id);\r\n        return;\r\n    }\r\n    async proxied(name:string, id:number):Promise<any> {\r\n        let proxyTuid = this.entities.getTuid(name, undefined);\r\n        proxyTuid.useId(id);\r\n        let proxied = await this.tvApi.proxied(this.name, name, id);\r\n        this.cacheValue(proxied);\r\n        return proxied;\r\n    }\r\n    cacheValue(val:any):boolean {\r\n        if (val === undefined) return false;\r\n        let id = this.getIdFromObj(val);\r\n        if (id === undefined) return false;\r\n        let index = this.waitingIds.findIndex(v => v === id);\r\n        if (index>=0) this.waitingIds.splice(index, 1);\r\n        //let cacheVal = this.createID(id, val);\r\n        this.cache.set(id, val);\r\n        // 下面的代码应该是cache proxy id, 需要的时候再写吧\r\n        /*\r\n        let {tuids, fields} = this.schema;\r\n        if (tuids !== undefined && fields !== undefined) {\r\n            for (let f of fields) {\r\n                let {name, tuid} = f;\r\n                if (tuid === undefined) continue;\r\n                let t = this.entities.tuid(tuid);\r\n                if (t === undefined) continue;\r\n                t.useId(val[name]);\r\n            }\r\n        }*/\r\n        return true;\r\n    }\r\n    protected afterCacheId(tuidValue:any) {\r\n        for (let f of this.fields) {\r\n            let {_tuid} = f;\r\n            if (_tuid === undefined) continue;\r\n            _tuid.useId(tuidValue[f.name]);\r\n        }\r\n    }\r\n    async cacheIds():Promise<void> {\r\n        if (this.waitingIds.length === 0) return;\r\n        let name:string, arr:string;\r\n        if (this.owner === undefined) {\r\n            name = this.name;\r\n        }\r\n        else {\r\n            name = this.owner.name;\r\n            arr = this.name;\r\n        }\r\n        let api = await this.getApiFrom();\r\n        let tuids = await api.tuidIds(name, arr, this.waitingIds);\r\n        for (let tuidValue of tuids) {\r\n            if (this.cacheValue(tuidValue) === false) continue;\r\n            this.cacheTuidFieldValues(tuidValue);\r\n            this.afterCacheId(tuidValue);\r\n        }\r\n        await this.cacheDivIds();\r\n    }\r\n    protected async cacheDivIds():Promise<void> {\r\n    }\r\n    async load(id:number):Promise<any> {\r\n        if (id === undefined || id === 0) return;\r\n        let api = await this.getApiFrom();\r\n        let values = await api.tuidGet(this.name, id);\r\n        if (values === undefined) return;\r\n        values._$tuid = this;\r\n        this.cacheValue(values);\r\n        this.cacheTuidFieldValues(values);\r\n        return values;\r\n    }\r\n    protected getDiv(divName:string):TuidDiv {return;}\r\n    private cacheTuidFieldValues(values:any) {\r\n        let {fields, arrs} = this.schema;\r\n        this.cacheFieldsInValue(values, fields);\r\n        if (arrs !== undefined) {\r\n            for (let arr of arrs as ArrFields[]) {\r\n                let {name, fields} = arr;\r\n                let arrValues = values[name];\r\n                if (arrValues === undefined) continue;\r\n                let tuidDiv = this.getDiv(name);\r\n                for (let row of arrValues) {\r\n                    row._$tuid = tuidDiv;\r\n                    row.$owner = this.boxId(row.owner);\r\n                    tuidDiv.cacheValue(row);\r\n                    this.cacheFieldsInValue(row, fields);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    private cacheFieldsInValue(values:any, fields:Field[]) {\r\n        for (let f of fields as Field[]) {\r\n            let {name, _tuid} = f;\r\n            if (_tuid === undefined) continue;\r\n            let id = values[name];\r\n            //_tuid.useId(id);\r\n            values[name] = _tuid.boxId(id);\r\n        }\r\n    }\r\n    async save(id:number, props:any) {\r\n        let params = _.clone(props);\r\n        params[\"$id\"] = id;\r\n        let ret = await this.tvApi.tuidSave(this.name, params);\r\n        let {id:retId, inId} = ret;\r\n        if (retId === undefined) {\r\n            params.id = id;\r\n            this.cacheValue(params);\r\n        }\r\n        else if (retId > 0) {\r\n            params.id = retId;\r\n            this.cacheValue(params);\r\n        }\r\n        return ret;\r\n    }\r\n    async search(key:string, pageStart:string|number, pageSize:number):Promise<any> {\r\n        let ret:any[] = await this.searchArr(undefined, key, pageStart, pageSize);\r\n        return ret;\r\n    }\r\n    async searchArr(owner:number, key:string, pageStart:string|number, pageSize:number):Promise<any> {\r\n        let {fields} = this.schema;\r\n        let name:string, arr:string;\r\n        if (this.owner !== undefined) {\r\n            name = this.owner.name;\r\n            arr = this.name;\r\n        }\r\n        else {\r\n            name = this.name;\r\n            arr = undefined;\r\n        }\r\n        let api = await this.getApiFrom();\r\n        let ret = await api.tuidSearch(name, arr, owner, key, pageStart, pageSize);\r\n        for (let row of ret) {\r\n            this.cacheFieldsInValue(row, fields);\r\n            if (this.owner !== undefined) row.$owner = this.owner.boxId(row.owner);\r\n        }\r\n        return ret;\r\n    }\r\n    async loadArr(arr:string, owner:number, id:number):Promise<any> {\r\n        if (id === undefined || id === 0) return;\r\n        let api = await this.getApiFrom();\r\n        return await api.tuidArrGet(this.name, arr, owner, id);\r\n    }\r\n    /*\r\n    async loadArrAll(owner:number):Promise<any[]> {\r\n        return this.all = await this.tvApi.tuidGetAll(this.name);\r\n    }*/\r\n    async saveArr(arr:string, owner:number, id:number, props:any) {\r\n        let params = _.clone(props);\r\n        params[\"$id\"] = id;\r\n        return await this.tvApi.tuidArrSave(this.name, arr, owner, params);\r\n    }\r\n    async posArr(arr:string, owner:number, id:number, order:number) {\r\n        return await this.tvApi.tuidArrPos(this.name, arr, owner, id, order);\r\n    }\r\n    \r\n    // cache放到Tuid里面之后，这个函数不再需要公开调用了\r\n    //private async ids(idArr:number[]) {\r\n    //    return await this.tvApi.tuidIds(this.name, idArr);\r\n    //}\r\n    async showInfo(id:number) {\r\n        await this.entities.cUq.showTuid(this, id);\r\n    }\r\n}\r\n\r\nexport class TuidMain extends Tuid {\r\n    get Main() {return this}\r\n    get uqApi() {return this.entities.uqApi};\r\n\r\n    divs: {[name:string]: TuidDiv};\r\n    proxies: {[name:string]: TuidMain};\r\n\r\n    public setSchema(schema:any) {\r\n        super.setSchema(schema);\r\n        let {arrs} = schema;\r\n        if (arrs !== undefined) {\r\n            this.divs = {};\r\n            for (let arr of arrs) {\r\n                let {name} = arr;\r\n                let tuidDiv = new TuidDiv(this.entities, name, this.typeId);\r\n                tuidDiv.owner = this;\r\n                this.divs[name] = tuidDiv;\r\n                tuidDiv.setSchema(arr);\r\n            }\r\n        }\r\n    }\r\n    protected getDiv(divName:string):TuidDiv {return this.divs[divName];}\r\n    /* 努力回避async里面的super调用，edge不兼容\r\n    async cacheIds():Promise<void> {\r\n        await super.cacheIds();\r\n        if (this.divs === undefined) return;\r\n        for (let i in this.divs) {\r\n            await this.divs[i].cacheIds();\r\n        }\r\n    }\r\n    */\r\n    protected async cacheDivIds():Promise<void> {\r\n        if (this.divs === undefined) return;\r\n        for (let i in this.divs) {\r\n            await this.divs[i].cacheIds();\r\n        }\r\n    }\r\n\r\n    async cUqFrom(): Promise<CUq> {\r\n        if (this.schemaFrom === undefined) return this.entities.cUq;\r\n        let {owner, uq: uq} = this.schemaFrom;\r\n        let cUq = await this.entities.cUq\r\n        let cApp = cUq.cApp;\r\n        if (cApp === undefined) return cUq;\r\n        let cUqFrm = await cApp.getImportUq(owner, uq);\r\n        if (cUqFrm === undefined) {\r\n            console.error(`${owner}/${uq} 不存在`);\r\n            debugger;\r\n            return cUq;\r\n        }\r\n        let retErrors = await cUqFrm.loadSchema();\r\n        if (retErrors !== undefined) {\r\n            console.error('cUq.loadSchema: ' + retErrors);\r\n            debugger;\r\n            return cUq;\r\n        }\r\n        return cUqFrm;\r\n    }\r\n\r\n    async getApiFrom() {\r\n        let from = await this.from();\r\n        if (from !== undefined) {\r\n            return from.entities.uqApi;\r\n        }\r\n        return this.entities.uqApi;\r\n    }\r\n\r\n    async from(): Promise<TuidMain> {\r\n        let cUq = await this.cUqFrom();\r\n        return cUq.tuid(this.name);\r\n    }\r\n\r\n    async cFrom(): Promise<CTuidMain> {\r\n        let cUq = await this.cUqFrom();\r\n        return cUq.cTuidMainFromName(this.name);\r\n    }\r\n\r\n    async cEditFrom(): Promise<CTuidEdit> {\r\n        let cUq = await this.cUqFrom();\r\n        return cUq.cTuidEditFromName(this.name);\r\n    }\r\n\r\n    async cInfoFrom(): Promise<CTuidInfo> {\r\n        let cUq = await this.cUqFrom();\r\n        return cUq.cTuidInfoFromName(this.name);\r\n    }\r\n\r\n    async cSelectFrom(): Promise<CTuidSelect> {\r\n        let cUq = await this.cUqFrom();\r\n        if (cUq === undefined) return;\r\n        return cUq.cTuidSelectFromName(this.name);\r\n    }\r\n\r\n    protected afterCacheId(tuidValue:any) {\r\n        super.afterCacheId(tuidValue);\r\n        if (this.proxies === undefined) return;\r\n        let {type, $proxy} = tuidValue;\r\n        let pTuid = this.proxies[type];\r\n        pTuid.useId($proxy);\r\n    }\r\n}\r\n\r\nexport class TuidDiv extends Tuid {\r\n    get Main() {return this.owner}\r\n\r\n    async getApiFrom() {\r\n        return await this.owner.getApiFrom();\r\n    }\r\n}\r\n","import {Entity} from './entity';\r\n\r\nexport class Action extends Entity {\r\n    get typeName(): string { return 'action';}\r\n    async submit(data:object) {\r\n        await this.loadSchema();\r\n        let text = this.pack(data);\r\n        return await this.tvApi.action(this.name, {data:text});\r\n    }\r\n}\r\n\r\n","import {observable, IObservableArray} from 'mobx';\r\nimport {Entity} from './entity';\r\nimport { PageItems } from 'tonva-tools';\r\n\r\nexport interface SheetState {\r\n    name: string;\r\n    actions: SheetAction[];\r\n}\r\n\r\nexport interface SheetAction {\r\n    name: string;\r\n}\r\n\r\nexport interface StateCount {\r\n    state: string;\r\n    count: number;\r\n}\r\n\r\nexport class Sheet extends Entity {\r\n    get typeName(): string { return 'sheet';}\r\n    states: SheetState[];\r\n\r\n    /*\r\n    setStates(states: SheetState[]) {\r\n        for (let state of states) {\r\n            this.setStateAccess(this.states.find(s=>s.name==state.name), state);\r\n        }\r\n    }*/\r\n    setSchema(schema:any) {\r\n        super.setSchema(schema);\r\n        this.states = schema.states;\r\n    }\r\n    build(obj:any) {\r\n        this.states = [];\r\n        for (let op of obj.ops) {\r\n            this.states.push({name: op, actions:undefined});\r\n        }\r\n        /*\r\n        for (let p in obj) {\r\n            switch(p) {\r\n                case '#':\r\n                case '$': continue;\r\n                default: this.states.push(this.createSheetState(p, obj[p])); break;\r\n            }\r\n        }*/\r\n    }\r\n    private createSheetState(name:string, obj:object):SheetState {\r\n        let ret:SheetState = {name:name, actions:[]};\r\n        let actions = ret.actions;\r\n        for (let p in obj) {\r\n            let action:SheetAction = {name: p};\r\n            actions.push(action);\r\n        }\r\n        return ret;\r\n    }\r\n    /*\r\n    private setStateAccess(s:SheetState, s1:SheetState) {\r\n        if (s === undefined) return;\r\n        for (let action of s1.actions) {\r\n            let acn = action.name;\r\n            let ac = s.actions.find(a=>a.name === acn);\r\n            if (ac === undefined) continue;\r\n            s.actions.push(action);\r\n        }\r\n    }*/\r\n    async save(discription:string, data:any):Promise<any> {\r\n        await this.loadSchema();\r\n        let {appId} = this.entities;\r\n        let text = this.pack(data);\r\n\r\n        let ret = await this.tvApi.sheetSave(this.name, {app: appId, discription: discription, data:text});\r\n        return ret;\r\n        /*\r\n        let {id, state} = ret;\r\n        if (id > 0) this.changeStateCount(state, 1);\r\n        return ret;\r\n        */\r\n    }\r\n    async action(id:number, flow:number, state:string, action:string) {\r\n        await this.loadSchema();\r\n        return await this.tvApi.sheetAction(this.name, {id:id, flow:flow, state:state, action:action});\r\n    }\r\n    private async unpack(data:any):Promise<any> {\r\n        //if (this.schema === undefined) await this.loadSchema();\r\n        let ret = data[0];\r\n        let brief = ret[0];\r\n        let sheetData = this.unpackSheet(brief.data);\r\n        let flows = data[1];\r\n        return {\r\n            brief: brief,\r\n            data: sheetData,\r\n            flows: flows,\r\n        }\r\n    }\r\n    async getSheet(id:number):Promise<any> {\r\n        await this.loadSchema();\r\n        let ret = await this.tvApi.getSheet(this.name, id);\r\n        if (ret[0].length === 0) return await this.getArchive(id);\r\n        return await this.unpack(ret);\r\n    }\r\n    async getArchive(id:number):Promise<any> {\r\n        await this.loadSchema();\r\n        let ret = await this.tvApi.sheetArchive(this.name, id)\r\n        return await this.unpack(ret);\r\n    }\r\n\r\n    async getArchives(pageStart:number, pageSize:number) {\r\n        await this.loadSchema();\r\n        let ret = await this.tvApi.sheetArchives(this.name, {pageStart:pageStart, pageSize:pageSize});\r\n        return ret;\r\n    }\r\n\r\n    async getStateSheets(state:string, pageStart:number, pageSize:number):Promise<any[]> {\r\n        await this.loadSchema();\r\n        let ret = await this.tvApi.stateSheets(this.name, {state:state, pageStart:pageStart, pageSize:pageSize});\r\n        return ret;\r\n    }\r\n    createPageStateItems<T>(): PageStateItems<T> {return new PageStateItems<T>(this);}\r\n\r\n    async stateSheetCount():Promise<StateCount[]> {\r\n        await this.loadSchema();\r\n        let ret:StateCount[] = await this.tvApi.stateSheetCount(this.name);\r\n        return this.states.map(s => {\r\n            let n = s.name, count = 0;\r\n            let r = ret.find(v => v.state === n);\r\n            if (r !== undefined) count = r.count;\r\n            return {state: n, count: count} \r\n        });\r\n    }\r\n}\r\n\r\nexport class PageStateItems<T> extends PageItems<T> {\r\n    private sheet: Sheet;\r\n    constructor(sheet: Sheet) {\r\n        super(true);\r\n        this.sheet = sheet;\r\n        this.pageSize = 10;\r\n    }\r\n    protected async load(param:any, pageStart:any, pageSize:number):Promise<any[]> {\r\n        let ret = await this.sheet.getStateSheets(param, pageStart, pageSize);\r\n        return ret;\r\n    }\r\n    protected setPageStart(item:any) {\r\n        this.pageStart = item === undefined? 0 : item.id;\r\n    }\r\n}\r\n","import {observable, IObservableArray} from 'mobx';\r\nimport {Field, ArrFields} from './entities';\r\nimport {Entity} from './entity';\r\n\r\nexport type QueryPageApi = (name:string, pageStart:any, pageSize:number, params:any) => Promise<string>;\r\nexport class Query extends Entity {\r\n    get typeName(): string { return 'query';}\r\n    private pageStart: any;\r\n    private pageSize:number;\r\n    private params:any;\r\n    private more: boolean;\r\n    private startField: Field;\r\n    @observable list:IObservableArray; // = observable.array([], {deep: false});\r\n    returns: ArrFields[];\r\n    isPaged: boolean;\r\n\r\n    setSchema(schema:any) {\r\n        super.setSchema(schema);\r\n        let {returns} = schema;\r\n        this.returns = returns;\r\n        this.isPaged = (returns as any[]).find(v => v.name === '$page') !== undefined;\r\n    }\r\n\r\n    resetPage(size:number, params:any) {\r\n        this.pageStart = undefined;\r\n        this.pageSize = size;\r\n        this.params = params;\r\n        this.more = false;\r\n        this.list = undefined;\r\n    }\r\n    get hasMore() {return this.more;}\r\n    async loadPage():Promise<void> {\r\n        if (this.pageSize === undefined) {\r\n            throw 'call resetPage(size:number, params:any) first';\r\n        }\r\n        let pageStart:any;\r\n        if (this.pageStart !== undefined) {\r\n            switch (this.startField.type) {\r\n                default: pageStart = this.pageStart; break;\r\n                case 'date':\r\n                case 'time':\r\n                case 'datetime': pageStart = (this.pageStart as Date).getTime(); break;\r\n            }\r\n        }\r\n        let page = await this.page(this.params, pageStart, this.pageSize+1);\r\n        /*\r\n        await this.loadSchema();\r\n        let res = await this.tvApi.page(this.name, pageStart, this.pageSize+1, this.params);\r\n        let data = await this.unpackReturns(res);\r\n        let page = data['$page'] as any[];\r\n        */\r\n        this.list = observable.array([], {deep: false});\r\n        if (page !== undefined) {\r\n            if (page.length > this.pageSize) {\r\n                this.more = true;\r\n                page.pop();\r\n                let ret = this.returns.find(r => r.name === '$page');\r\n                this.startField = ret.fields[0];\r\n                this.pageStart = page[page.length-1][this.startField.name];\r\n            }\r\n            else {\r\n                this.more = false;\r\n            }\r\n            this.list.push(...page);\r\n        }\r\n        //this.loaded = true;\r\n    }\r\n\r\n    async page(params:any, pageStart:any, pageSize:number):Promise<any[]> {\r\n        await this.loadSchema();\r\n        let res = await this.tvApi.page(this.name, pageStart, pageSize+1, this.buildParams(params));\r\n        let data = await this.unpackReturns(res);\r\n        return data.$page;// as any[];\r\n    }\r\n    async query(params:any):Promise<any> {\r\n        await this.loadSchema();\r\n        let res = await this.tvApi.query(this.name, this.buildParams(params));\r\n        let data = await this.unpackReturns(res);\r\n        return data;\r\n    }\r\n    async table(params:any): Promise<any[]> {\r\n        let ret = await this.query(params);\r\n        for (let i in ret) {\r\n            return ret[i];\r\n        }\r\n    }\r\n    async obj(params:any):Promise<any> {\r\n        let ret = await this.table(params);\r\n        if (ret.length > 0) return ret[0];\r\n    }\r\n    async scalar(params:any):Promise<any> {\r\n        let ret = await this.obj(params);\r\n        for (let i in ret) return ret[i];\r\n    }\r\n}\r\n","import {Query} from './query';\r\n\r\nexport class Book extends Query {\r\n    get typeName(): string { return 'book';}\r\n    protected queryApiName = 'book';\r\n}\r\n","import {Query} from './query';\r\n\r\nexport class History extends Query {\r\n    get typeName(): string { return 'history';}\r\n    protected queryApiName = 'history';\r\n}\r\n","import { Entity } from './entity';\r\nimport { Action } from './action';\r\nimport { Query } from './query';\r\nimport { Field } from './entities';\r\n\r\ninterface MapActions {\r\n    add: Action;\r\n    del: Action;\r\n}\r\ninterface MapQueries {\r\n    all: Query;\r\n    page: Query;\r\n    query: Query;\r\n}\r\n\r\nexport class Map extends Entity {\r\n    get typeName(): string { return 'map';}\r\n    keys: Field[];\r\n    actions: MapActions = {} as any;\r\n    queries: MapQueries = {} as any;\r\n    schemaFrom: {owner:string; uq:string};\r\n\r\n    setSchema(schema:any) {\r\n        super.setSchema(schema);\r\n        this.schemaFrom = this.schema.from;\r\n        let {actions, queries, keys} = schema;\r\n        this.entities.buildFieldTuid(this.keys = keys);\r\n        //let t = this.schemaStringify();\r\n        for (let i in actions) {\r\n            let schema = actions[i];\r\n            let {name} = schema;\r\n            let action = this.entities.newAction(name, undefined);\r\n            action.setSchema(schema);\r\n            this.actions[i] = action;\r\n        }\r\n        for (let i in queries) {\r\n            let schema = queries[i];\r\n            let {name} = schema;\r\n            let query = this.entities.newQuery(name, undefined);\r\n            query.setSchema(schema);\r\n            this.queries[i] = query;\r\n        }\r\n    }\r\n\r\n    async add(param:any) {\r\n        await this.loadSchema();\r\n        return await this.actions.add.submit(param);\r\n    }\r\n\r\n    async del(param:any) {\r\n        await this.loadSchema();\r\n        return await this.actions.del.submit(param);\r\n    }\r\n\r\n    async all() {\r\n        await this.loadSchema();\r\n        return await this.queries.all.query({});\r\n    }\r\n\r\n    async page(param:any, pageStart:any, pageSize: number) {\r\n        await this.loadSchema();\r\n        return await this.queries.page.page(param, pageStart, pageSize);\r\n    }\r\n\r\n    async query(param:any) {\r\n        await this.loadSchema();\r\n        return await this.queries.query.query(param);\r\n    }\r\n    async table(params:any): Promise<any[]> {\r\n        let ret = await this.query(params);\r\n        for (let i in ret) {\r\n            return ret[i];\r\n        }\r\n    }\r\n    async obj(params:any):Promise<any> {\r\n        let ret = await this.table(params);\r\n        if (ret.length > 0) return ret[0];\r\n    }\r\n    async scalar(params:any):Promise<any> {\r\n        let ret = await this.obj(params);\r\n        for (let i in ret) return ret[i];\r\n    }\r\n}\r\n","import {Query} from './query';\r\n\r\nexport class Pending extends Query {\r\n    get typeName(): string { return 'pending';}\r\n    protected queryApiName = 'pending';\r\n}\r\n","import {TuidMain, Tuid} from './tuid';\r\nimport {Action} from './action';\r\nimport {Sheet, SheetState, SheetAction} from './sheet';\r\nimport {Query} from './query';\r\nimport {Book} from './book';\r\nimport {History} from './history';\r\nimport { UqApi } from 'tonva-tools';\r\nimport { Map } from './map';\r\nimport { Pending } from './pending';\r\nimport { CUq } from '../controllers';\r\n\r\nexport type FieldType = 'tinyint' | 'smallint' | 'int' | 'bigint' | 'dec' | 'char' | 'text' \r\n    | 'datetime' | 'date' | 'time';\r\n\r\nexport function fieldDefaultValue(type:FieldType) {\r\n    switch (type) {\r\n        case 'tinyint':\r\n        case 'smallint':\r\n        case 'int':\r\n        case 'bigint':\r\n        case 'dec':\r\n            return 0;\r\n        case 'char':\r\n        case 'text': \r\n            return '';\r\n        case 'datetime':\r\n        case 'date':\r\n            return '2000-1-1';\r\n        case 'time':\r\n            return '0:00';\r\n    }\r\n}\r\n\r\nexport interface Field {\r\n    name: string;\r\n    type: FieldType;\r\n    tuid?: string;\r\n    arr?: string;\r\n    url?: string;\r\n    null?: boolean;\r\n    size?: number;\r\n    owner?: string;\r\n    _ownerField: Field;\r\n    _tuid: Tuid;\r\n}\r\nexport interface ArrFields {\r\n    name: string;\r\n    fields: Field[];\r\n    id?: string;\r\n    order?: string;\r\n}\r\nexport interface FieldMap {\r\n    [name:string]: Field;\r\n}\r\n\r\nexport class Entities {\r\n    private tuids: {[name:string]: TuidMain} = {};\r\n    private actions: {[name:string]: Action} = {};\r\n    private sheets: {[name:string]: Sheet} = {};\r\n    private queries: {[name:string]: Query} = {};\r\n    private books: {[name:string]: Book} = {};\r\n    private maps: {[name:string]: Map} = {};\r\n    private histories: {[name:string]: History} = {};\r\n    private pendings: {[name:string]: Pending} = {};\r\n    private cacheTimer: any;\r\n    cUq: CUq;\r\n    uqApi: UqApi;\r\n    appId: number;\r\n    uqId: number;\r\n\r\n    constructor(cUq: CUq, uqApi:UqApi, appId: number) {\r\n        this.cUq = cUq;\r\n        this.uqApi = uqApi;\r\n        this.appId = appId;\r\n    }\r\n\r\n    tuid(name:string):TuidMain {return this.tuids[name.toLowerCase()]}\r\n    action(name:string):Action {return this.actions[name.toLowerCase()]}\r\n    sheet(name:string):Sheet {return this.sheets[name.toLowerCase()]}\r\n    query(name:string):Query {return this.queries[name.toLowerCase()]}\r\n    book(name:string):Book {return this.books[name.toLowerCase()]}\r\n    map(name:string):Map {return this.maps[name.toLowerCase()]}\r\n    history(name:string):History {return this.histories[name.toLowerCase()]}\r\n    pending(name:string):Pending {return this.pendings[name.toLowerCase()]}\r\n\r\n    sheetFromTypeId(typeId:number):Sheet {\r\n        for (let i in this.sheets) {\r\n            let sheet = this.sheets[i];\r\n            if (sheet.typeId === typeId) return sheet;\r\n        }\r\n    }\r\n\r\n    tuidArr: TuidMain[] = [];\r\n    actionArr: Action[] = [];\r\n    sheetArr: Sheet[] = [];\r\n    queryArr: Query[] = [];\r\n    bookArr: Book[] = [];\r\n    mapArr: Map[] = [];\r\n    historyArr: History[] = [];\r\n    pendingArr: Pending[] = [];\r\n\r\n    async loadAccess() {\r\n        let accesses = await this.uqApi.loadAccess();\r\n        if (accesses === undefined) return;\r\n        this.buildEntities(accesses);\r\n    }\r\n\r\n    async loadEntities() {\r\n        let accesses = await this.uqApi.loadEntities();\r\n        this.buildEntities(accesses);\r\n    }\r\n\r\n    private buildEntities(entities:any) {\r\n        if (entities === undefined) {\r\n            debugger;\r\n        }\r\n        let {access, tuids} = entities;\r\n        this.buildTuids(tuids);\r\n        this.buildAccess(access);\r\n    }\r\n\r\n    getTuid(name:string, div?:string, tuidUrl?:string): Tuid {\r\n        let tuid = this.tuids[name];\r\n        if (tuid === undefined) return;\r\n        if (div === undefined) return tuid;\r\n        return tuid.divs[div];\r\n    }\r\n\r\n    cacheTuids(defer:number) {\r\n        this.clearCacheTimer();\r\n        this.cacheTimer = setTimeout(this.loadIds, defer);\r\n    }\r\n    private clearCacheTimer() {\r\n        if (this.cacheTimer === undefined) return;\r\n        clearTimeout(this.cacheTimer);\r\n        this.cacheTimer = undefined;\r\n    }\r\n    private loadIds = () => {\r\n        this.clearCacheTimer();\r\n        for (let i in this.tuids) {\r\n            let tuid = this.tuids[i];\r\n            tuid.cacheIds();\r\n        }\r\n    }\r\n\r\n    private buildTuids(tuids:any) {\r\n        let proxyColl = {} as any;\r\n        for (let i in tuids) {\r\n            let schema = tuids[i];\r\n            let {name, typeId, proxies} = schema;\r\n            let tuid = this.newTuid(i, typeId);\r\n            tuid.sys = true;\r\n            //tuid.setSchema(schema);\r\n            if (proxies !== undefined) proxyColl[i] = proxies;\r\n        }\r\n        for (let i in tuids) {\r\n            let schema = tuids[i];\r\n            let {name} = schema;\r\n            let tuid = this.getTuid(i);\r\n            //tuid.sys = true;\r\n            tuid.setSchema(schema);\r\n        }\r\n        for (let i in proxyColl) {\r\n            let proxies:string[] = proxyColl[i];\r\n            let tuid = this.tuids[i];\r\n            tuid.proxies = {};\r\n            for (let p of proxies) {\r\n                tuid.proxies[p] = this.tuids[p];\r\n            }\r\n        }\r\n    }\r\n\r\n    private buildAccess(access:any) {\r\n        for (let a in access) {\r\n            let v = access[a];\r\n            switch (typeof v) {\r\n                case 'string': this.fromType(a, v); break;\r\n                case 'object': this.fromObj(a, v); break;\r\n            }\r\n        }\r\n        /*\r\n        for (let tuid of this.tuidArr) {\r\n            tuid.setProxies(this);\r\n        }*/\r\n    }\r\n\r\n    newAction(name:string, id:number):Action {\r\n        let action = this.actions[name];\r\n        if (action !== undefined) return action;\r\n        action = this.actions[name] = new Action(this, name, id)\r\n        this.actionArr.push(action);\r\n        return action;\r\n    }\r\n    newTuid(name:string, id:number):TuidMain {\r\n        let tuid = this.tuids[name];\r\n        if (tuid !== undefined) return tuid;\r\n        tuid = this.tuids[name] = new TuidMain(this, name, id);\r\n        this.tuidArr.push(tuid);\r\n        return tuid;\r\n    }\r\n    newQuery(name:string, id:number):Query {\r\n        let query = this.queries[name];\r\n        if (query !== undefined) return query;\r\n        query = this.queries[name] = new Query(this, name, id)\r\n        this.queryArr.push(query);\r\n        return query;\r\n    }\r\n    newBook(name:string, id:number):Book {\r\n        let book = this.books[name];\r\n        if (book !== undefined) return book;\r\n        book = this.books[name] = new Book(this, name, id);\r\n        this.bookArr.push(book);\r\n        return book;\r\n    }\r\n    newMap(name:string, id:number):Map {\r\n        let map = this.maps[name];\r\n        if (map !== undefined) return map;\r\n        map = this.maps[name] = new Map(this, name, id)\r\n        this.mapArr.push(map);\r\n        return map;\r\n    }\r\n    newHistory(name:string, id:number):History {\r\n        let history = this.histories[name];\r\n        if (history !== undefined) return;\r\n        history = this.histories[name] = new History(this, name, id)\r\n        this.historyArr.push(history);\r\n        return history;\r\n    }\r\n    newPending(name:string, id:number):Pending {\r\n        let pending = this.pendings[name];\r\n        if (pending !== undefined) return;\r\n        pending = this.pendings[name] = new Pending(this, name, id)\r\n        this.pendingArr.push(pending);\r\n        return pending;\r\n    }\r\n    newSheet(name:string, id:number):Sheet {\r\n        let sheet = this.sheets[name];\r\n        if (sheet !== undefined) return sheet;\r\n        sheet = this.sheets[name] = new Sheet(this, name, id);\r\n        this.sheetArr.push(sheet);\r\n        return sheet;\r\n    }\r\n    private fromType(name:string, type:string) {\r\n        let parts = type.split('|');\r\n        type = parts[0];\r\n        let id = Number(parts[1]);\r\n        switch (type) {\r\n            case 'uq': this.uqId = id; break;\r\n            case 'tuid': \r\n                let tuid = this.newTuid(name, id);\r\n                tuid.sys = false;\r\n                break;\r\n            case 'action': this.newAction(name, id); break;\r\n            case 'query': this.newQuery(name, id); break;\r\n            case 'book': this.newBook(name, id); break;\r\n            case 'map': this.newMap(name, id); break;\r\n            case 'history': this.newHistory(name, id); break;\r\n            case 'sheet':this.newSheet(name, id); break;\r\n            case 'pending': this.newPending(name, id); break;\r\n        }\r\n    }\r\n    private fromObj(name:string, obj:any) {\r\n        switch (obj['$']) {\r\n            case 'sheet': this.buildSheet(name, obj); break;\r\n        }\r\n    }\r\n    private buildSheet(name:string, obj:any) {\r\n        let sheet = this.sheets[name];\r\n        if (sheet === undefined) sheet = this.newSheet(name, obj.id);\r\n        sheet.build(obj);\r\n        /*\r\n        let states = sheet.states;\r\n        for (let p in obj) {\r\n            switch(p) {\r\n                case '#':\r\n                case '$': continue;\r\n                default: states.push(this.createSheetState(p, obj[p])); break;\r\n            }\r\n        }*/\r\n    }\r\n    /*\r\n    private createSheetState(name:string, obj:object):SheetState {\r\n        let ret:SheetState = {name:name, actions:[]};\r\n        let actions = ret.actions;\r\n        for (let p in obj) {\r\n            let action:SheetAction = {name: p};\r\n            actions.push(action);\r\n        }\r\n        return ret;\r\n    }*/\r\n    buildFieldTuid(fields:Field[], mainFields?:Field[]) {\r\n        if (fields === undefined) return;\r\n        for (let f of fields) {\r\n            let {tuid, arr, url} = f;\r\n            if (tuid === undefined) continue;\r\n            f._tuid = this.getTuid(tuid, arr, url);\r\n        }\r\n        for (let f of fields) {\r\n            let {owner} = f;\r\n            if (owner === undefined) continue;\r\n            let ownerField = fields.find(v => v.name === owner);\r\n            if (ownerField === undefined) {\r\n                if (mainFields !== undefined) {\r\n                    ownerField = mainFields.find(v => v.name === owner);\r\n                }\r\n                if (ownerField === undefined) {\r\n                    throw `owner field ${owner} is undefined`;\r\n                }\r\n            }\r\n            f._ownerField = ownerField;\r\n            let {arr, url} = f;\r\n            f._tuid = this.getTuid(ownerField._tuid.name, arr, url);\r\n            if (f._tuid === undefined) throw 'owner field ${owner} is not tuid';\r\n        }\r\n    }\r\n    buildArrFieldsTuid(arrFields:ArrFields[], mainFields:Field[]) {\r\n        if (arrFields === undefined) return;\r\n        for (let af of arrFields) {\r\n            let {fields} = af;\r\n            if (fields === undefined) continue;\r\n            this.buildFieldTuid(fields, mainFields);\r\n        }\r\n    }\r\n}\r\n","export * from './entities';\r\nexport * from './entity';\r\nexport * from './action';\r\nexport * from './query';\r\nexport * from './sheet';\r\nexport * from './tuid';\r\nexport * from './book';\r\nexport * from './map';\r\nexport * from './history';\r\nexport * from './pending';\r\n","import * as React from 'react';\r\nimport {FormView, FormRow, FieldRow, GroupRow, LabelFormRow} from '../formView';\r\nimport {Control, ControlBase, createControl, CreateControl} from '../control';\r\n\r\nexport type CreateRow = (form:FormView, row: FormRow)=>RowContainer;\r\n\r\nexport abstract class RowContainer {\r\n    protected form:FormView;\r\n    protected row: FormRow;\r\n    protected control: ControlBase;\r\n    constructor(form:FormView, row: FormRow) {\r\n        this.form = form;\r\n        this.row = row;\r\n        if ((row as JSX.Element).type === undefined) {\r\n            let cc:CreateControl = (row as LabelFormRow).createControl;\r\n            if (cc === undefined) cc = form.createControl;\r\n            if (cc === undefined) cc = createControl;\r\n            this.control = cc(form, row);\r\n        }\r\n    }\r\n    abstract render(key:string):JSX.Element;\r\n    \r\n    isOk():boolean {\r\n        if (this.control === undefined) return true;\r\n        return this.control.isOk();\r\n    }\r\n\r\n    contains(fieldName:string):boolean {\r\n        let field = (this.row as FieldRow).field;\r\n        if (field !== undefined) return fieldName === field.name;\r\n        let group = (this.row as GroupRow).group;\r\n        if (group !== undefined) return group.find(g => g.field.name === fieldName)!==undefined;\r\n        return false;\r\n    }\r\n    get hasError():boolean {return this.control.hasError;}\r\n    get filled():boolean {return this.control.filled;}\r\n    clear() {\r\n        if (this.control !== undefined) this.control.clear();\r\n    }\r\n    clearErrors() {\r\n        if (this.control !== undefined) this.control.clearErrors();\r\n    }\r\n    readValues(values:any):any {\r\n        if (this.control !== undefined) this.control.readValues(values);\r\n    }\r\n    setError(fieldName:string, error:string) {\r\n        if (this.control !== undefined) this.control.setError(fieldName, error);\r\n    }\r\n    setInitValues(values:any) {\r\n        if (this.control !== undefined) this.control.setInitValues(values);\r\n    }\r\n}\r\n\r\nclass ElementRowContainer extends RowContainer {\r\n    render(key:string):JSX.Element {\r\n        return <div key={key} className=\"form-group\">{this.row as JSX.Element}</div>;\r\n    }\r\n    get hasError():boolean {return false;}\r\n    get filled():boolean {return false;}\r\n}\r\n\r\nclass BootStrapRowContainer extends RowContainer {\r\n    render(key:string):JSX.Element {\r\n        return <div key={key} className='form-group row'>\r\n            <label className='col-sm-2 col-form-label'>\r\n                {(this.row as LabelFormRow).label}\r\n            </label>\r\n            {this.control.render()}\r\n        </div>;\r\n\r\n        //has-success is-valid\r\n    }\r\n}\r\n\r\nexport function bootstrapCreateRow(form:FormView, row: FormRow):RowContainer {\r\n    return new BootStrapRowContainer(form, row);\r\n}\r\n\r\nexport function elementCreateRow(form:FormView, row: FormRow):RowContainer {\r\n    return new ElementRowContainer(form, row);\r\n}\r\n","//import {isDevelopment} from '../local';\r\nimport {HttpChannel} from './httpChannel';\r\n\r\nexport async function refetchApi(channel:HttpChannel, url, options, resolve, reject) {\r\n    await channel.fetch(url, options, resolve, reject);\r\n}\r\n\r\nexport abstract class ApiBase {\r\n    protected token: string;\r\n    protected path: string;\r\n    protected showWaiting: boolean;\r\n\r\n    constructor(path: string, showWaiting: boolean) {\r\n        this.path = path || '';\r\n        this.showWaiting = showWaiting;\r\n    }\r\n\r\n    protected abstract async getHttpChannel(): Promise<HttpChannel>;\r\n\r\n    public async call(url:string, method:string, body:any):Promise<any> {\r\n        let channel = await this.getHttpChannel();\r\n        return await channel.callFetch(url, method, body);\r\n    }\r\n\r\n    public async get(path:string, params:any=undefined): Promise<any> {\r\n        let channel = await this.getHttpChannel();\r\n        return await channel.get(this.path + path, params);\r\n    }\r\n\r\n    public async post(path:string, params:any): Promise<any> {\r\n        let channel = await this.getHttpChannel();\r\n        return await channel.post(this.path + path, params);\r\n    }\r\n\r\n    public async put(path:string, params:any): Promise<any> {\r\n        let channel = await this.getHttpChannel();\r\n        return await channel.put(this.path + path, params);\r\n    }\r\n\r\n    public async delete(path:string, params:any): Promise<any> {\r\n        let channel = await this.getHttpChannel();\r\n        return await channel.delete(this.path + path, params);\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport _ from 'lodash';\r\nimport {nav, mobileHeaderStyle} from './nav';\r\n\r\nexport interface TitleBarProps {\r\n    back?: 'back' | 'close' | 'none';\r\n    center: string | JSX.Element;\r\n    right?: JSX.Element;\r\n    logout?: boolean | (()=>Promise<void>);\r\n}\r\nexport interface TitleBarState {\r\n    hasBack: boolean;\r\n}\r\nexport class TitleBar extends React.Component<TitleBarProps, TitleBarState> {\r\n    private navChangeHandler: ()=>void;\r\n    constructor(props) {\r\n        super(props);\r\n        this.navChange = this.navChange.bind(this);\r\n        this.state = {\r\n            hasBack: false,\r\n        };\r\n    }\r\n    navChange() {\r\n        this.setState({\r\n            hasBack: nav.level > 1\r\n        })\r\n    }\r\n    componentWillMount() {\r\n        this.navChange();\r\n        //this.navChangeHandler = nav.events.add('change', this.navChange);\r\n    }\r\n    componentWillUnmount() {\r\n        //nav.events.remove('change', this.navChangeHandler);\r\n    }\r\n    async back() {\r\n        await nav.back(); // 这个才会显示confirm box，在dataForm里面，如果输入了数据的话\r\n    }\r\n    openWindow() {\r\n        window.open(document.location.href);\r\n    }\r\n    private logoutClick = () => {\r\n        nav.showLogout(this.logout);\r\n        /*\r\n        nav.push(<Page header=\"安全退出\" back=\"close\">\r\n            <div className=\"m-5 border border-info bg-white rounded p-3 text-center\">\r\n                <div>退出当前账号不会删除任何历史数据，下次登录依然可以使用本账号</div>\r\n                <div className=\"mt-3\">\r\n                    <button className=\"btn btn-danger\" onClick={()=>this.logout()}>退出</button>\r\n                </div>\r\n            </div>\r\n        </Page>);\r\n        */\r\n    }\r\n    private logout = async () => {\r\n        let {logout} = this.props;\r\n        if (typeof logout === 'function') {\r\n            await logout(); \r\n        }\r\n        await nav.logout(undefined);\r\n    }\r\n    render() {\r\n        let b = this.state.hasBack || self != top;\r\n        let {right, center, logout} = this.props;\r\n        let back, pop, debugLogout;\r\n        if (logout !== undefined && self === top) {\r\n            if (typeof logout === 'boolean' && logout === true\r\n                || typeof logout === 'function')\r\n            {\r\n                let {user} = nav;\r\n                if (user !== undefined) {\r\n                    let {nick, name} = user;\r\n                    debugLogout = <div className=\"d-flex align-items-center\">\r\n                        <small className=\"text-light\">{nick || name}</small>\r\n                        <a className=\"dropdown-toggle btn btn-secondary btn-sm ml-2\"\r\n                            role=\"button\"\r\n                            onClick={this.logoutClick}>\r\n                            <i className=\"fa fa-sign-out\" />\r\n                        </a>\r\n                    </div>;\r\n                }\r\n            }\r\n        }\r\n        if (b) {\r\n            switch (this.props.back) {\r\n                case 'none': back = undefined; break;\r\n                default:\r\n                case 'back': back = <nav onClick={this.back}><i className=\"fa fa-arrow-left\" /></nav>; break;\r\n                case 'close': back = <nav onClick={this.back}><i className=\"fa fa-close\" /></nav>; break;\r\n            }\r\n        }\r\n        if (self != top) {\r\n            console.log(document.location.href);\r\n            pop = <header onClick={this.openWindow} />;\r\n        }\r\n        let rightView;\r\n        if (right || debugLogout) rightView = <aside>{right} {debugLogout}</aside>;\r\n        return (\r\n        <header style={mobileHeaderStyle}>\r\n            {pop}\r\n            {back}\r\n            <div>{center}</div>\r\n            {rightView}\r\n        </header>\r\n        );\r\n    }\r\n}\r\n","import React from 'react';\r\nimport { jsonStringify } from '../../tools';\r\n\r\nexport const DefaultRow = (values) => <div className=\"px-3 py-2\">{jsonStringify(values)}</div>;\r\n","import * as React from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport { List, FA } from 'tonva-react-form';\r\nimport { Page, nav } from 'tonva-tools';\r\nimport { TuidMain, Query, Entity } from '../../entities';\r\nimport { VForm } from '../form';\r\nimport { VEntity } from '../CVEntity';\r\nimport { QueryUI, CQuery } from './cQuery';\r\nimport { DefaultRow } from './defaultRow';\r\n\r\nexport class VQueryMain extends VEntity<Query, QueryUI, CQuery> {\r\n    protected vForm: VForm;\r\n    private row: React.StatelessComponent;\r\n\r\n    async open(param?:any):Promise<void> {\r\n        this.vForm = this.createForm(this.onSubmit, param);\r\n        let {row, queryRow} = this.ui;\r\n        this.row = queryRow || row || DefaultRow;\r\n        this.openPage(this.view);\r\n    }\r\n\r\n    onSubmit = async () => {\r\n        let params = this.vForm.getValues();\r\n        if (this.entity.isPaged === true) {\r\n            await this.entity.resetPage(30, params);\r\n            await this.entity.loadPage();\r\n            this.replacePage(this.pageResult);\r\n        }\r\n        else {\r\n            let data = await this.entity.query(params);\r\n            this.replacePage(this.queryResult, data);\r\n        }\r\n    }\r\n\r\n    again = () => {\r\n        this.vForm.reset();\r\n        this.replacePage(this.view);\r\n    }\r\n\r\n    renderExtra() {\r\n        return;\r\n    }\r\n\r\n    renderRow = (item:any, index:number) => <this.row {...item} />;\r\n\r\n    protected view = () => <Page header={this.label}>\r\n        {this.vForm.render('mx-3 my-2')}\r\n        {this.renderExtra()}\r\n    </Page>;\r\n\r\n    protected pageResult = () => {\r\n        let {name, list} = this.entity;\r\n        let rightClose = <button\r\n            className=\"btn btn-outline-success\"\r\n            onClick={this.again}>\r\n            <FA name=\"search\" /> 再查询\r\n        </button>;\r\n        return <Page header={this.label} right={rightClose}>\r\n            <List items={list} item={{render: this.renderRow}} />\r\n        </Page>;\r\n    }\r\n\r\n    protected queryResult = observer((result:any) => {\r\n        let rightClose = <button\r\n            className=\"btn btn-outline-success\"\r\n            onClick={this.again}>\r\n            <FA name=\"search\" /> 再查询\r\n        </button>;\r\n        return <Page header={this.label} right={rightClose}>\r\n            <pre>{JSON.stringify(result, undefined, '\\t')}</pre>\r\n        </Page>;\r\n    })\r\n}\r\n","import * as React from 'react';\r\nimport { FA, SearchBox, List } from 'tonva-react-form';\r\nimport { Page, PageItems } from 'tonva-tools';\r\nimport { Query } from '../../entities';\r\nimport { VEntity } from '../CVEntity';\r\nimport { QueryUI, CQuerySelect } from './cQuery';\r\nimport { DefaultRow } from './defaultRow';\r\n\r\nexport class VQuerySelect extends VEntity<Query, QueryUI, CQuerySelect> {\r\n    private row: React.StatelessComponent;\r\n\r\n    PageItems:QueryPageItems;\r\n    ownerId: number;\r\n\r\n    async open(param?:any) {\r\n        let {row, selectRow} = this.ui;\r\n        this.row = selectRow || row || DefaultRow;\r\n        //this.entity = this.controller.entity;\r\n        this.PageItems = new QueryPageItems(this.entity);\r\n        await this.onSearch(param);\r\n        this.openPage(this.view);\r\n    }\r\n    onSearch = async (key:string) => {\r\n        await this.PageItems.first(key);\r\n    }\r\n\r\n    renderRow = (item:any, index:number) => <this.row {...item} />;\r\n\r\n    private callOnSelected(item:any) {\r\n       this.closePage();\r\n       this.returnCall(item);\r\n    }\r\n    clickRow = (item:any) => {\r\n        this.callOnSelected(item);\r\n    }\r\n\r\n    view = () => {\r\n        let header = <SearchBox className=\"mx-1 w-100\"\r\n            initKey={''}\r\n            onSearch={this.onSearch} placeholder={'搜索'+this.label} />;\r\n        return <Page header={header}>\r\n            <List\r\n                items={this.PageItems.items}\r\n                item={{render: this.renderRow, onClick: this.clickRow}}\r\n                before={'搜索'+this.label+'资料'} />\r\n        </Page>;\r\n    };\r\n}\r\n\r\nexport class QueryPageItems extends PageItems<any> {\r\n    private query: Query;\r\n    constructor(query: Query) {\r\n        super();\r\n        this.query = query;\r\n    }\r\n    protected async load():Promise<any[]> {\r\n        await  this.query.loadSchema();\r\n        let ret:any[];\r\n        if (this.query.isPaged === true)\r\n            ret = await this.query.page(this.param, this.pageStart, this.pageSize);\r\n        else {\r\n            let data = await this.query.query(this.param);\r\n            //let data = await this.query.unpackReturns(res);\r\n            ret = data[this.query.returns[0].name];\r\n        }\r\n        return ret;\r\n    }\r\n    protected setPageStart(item:any) {\r\n        if (item === undefined) this.pageStart = 0;\r\n    }\r\n}\r\n","import { StatelessComponent } from \"react\";\r\nimport { CEntity, EntityUI } from \"../CVEntity\";\r\nimport { Query } from \"../../entities\";\r\nimport { VQueryMain } from \"./vQueryMain\";\r\nimport { VQuerySelect } from \"./vQuerySelect\";\r\n\r\nexport interface QueryUI extends EntityUI {\r\n    CQuery?: typeof CQuery;\r\n    CQuerySelect?: typeof CQuerySelect;\r\n    main?: typeof VQueryMain;\r\n    row?: StatelessComponent;\r\n    queryRow?: StatelessComponent;\r\n    selectRow?: StatelessComponent;\r\n}\r\n\r\nexport abstract class CQueryBase extends CEntity<Query, QueryUI> {\r\n}\r\n\r\nexport class CQuery extends CQueryBase {\r\n    protected async internalStart() {\r\n        await this.openVPage(this.VQueryMain);\r\n    }\r\n\r\n    protected get VQueryMain():typeof VQueryMain {return this.ui && this.ui.main || VQueryMain}\r\n}\r\n\r\nexport class CQuerySelect extends CQueryBase {\r\n    protected async internalStart(param?:any) {\r\n        await this.openVPage(this.VQuerySelect, param);\r\n    }\r\n\r\n    protected get VQuerySelect():typeof VQuerySelect {return VQuerySelect}\r\n}\r\n","export * from './cQuery';\r\nexport * from './vQueryMain';\r\nexport * from './vQuerySelect';","import * as React from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport { observable } from 'mobx';\r\nimport { Schema, UiSchema, ItemSchema, UiItem, UiTextItem } from '../schema';\r\nimport { ResUploader } from '../resUploader';\r\nimport { Image } from '../image';\r\nimport { nav } from '../nav';\r\nimport { Page } from '../page';\r\nimport { ItemEdit } from './itemEdit';\r\n\r\nexport class ImageItemEdit extends ItemEdit {\r\n    protected uiItem: UiTextItem;\r\n    private resUploader: ResUploader;\r\n    @observable private resId: string;\r\n    @observable private overSize: boolean = false;\r\n\r\n    protected async internalStart():Promise<any> {\r\n        this.resId = this.value;        \r\n        return new Promise<any>((resolve, reject) => {\r\n            nav.push(React.createElement(this.page, {resolve:resolve, reject:reject}), ()=>reject());\r\n        });\r\n    }\r\n\r\n    private upload = async () => {\r\n        if (!this.resUploader) return;\r\n        let ret = await this.resUploader.upload();\r\n        if (ret === null) {\r\n            this.overSize = true;\r\n            setTimeout(() => this.overSize = false, 3000);\r\n            return;\r\n        }\r\n        this.resId = ret;\r\n        this.isChanged = (this.resId != this.value);\r\n    }\r\n\r\n    private page = observer((props:{resolve:(value:any)=>void, reject: (resean?:any)=>void}):JSX.Element => {\r\n        let {resolve} = props;\r\n        let right = <button\r\n            className=\"btn btn-sm btn-success\"\r\n            disabled={!this.isChanged}\r\n            onClick={()=>resolve(this.resId)}>保存</button>;\r\n        let overSize:any;\r\n        if (this.overSize === true) {\r\n            overSize = <div className=\"text-danger\">\r\n                <i className=\"fa fa-times-circle\" /> 图片文件大小超过2M，无法上传\r\n            </div>;\r\n        }\r\n        return <Page header={'更改' + this.label} right={right}>\r\n            <div className=\"my-3 px-3 py-3 bg-white\">\r\n                <div>\r\n                    <div>上传图片：</div>\r\n                    <div className=\"my-3\">\r\n                        <ResUploader ref={v=>this.resUploader=v} multiple={false} maxSize={2048} />\r\n                    </div>\r\n                    <div>\r\n                        <button className=\"btn btn-primary\" onClick={this.upload}>上传</button>\r\n                    </div>\r\n                </div>\r\n                {overSize}\r\n                <div className=\"small muted my-4\">支持JPG、GIF、PNG格式图片，不超过2M。</div>\r\n                <div className=\"d-flex\">\r\n                    <div className=\"w-12c h-12c mr-4\"\r\n                        style={{border: '1px dotted gray', padding: '8px'}}>\r\n                        <Image className=\"w-100 h-100\" src={this.resId} />\r\n                    </div>\r\n                    <div>\r\n                        <div className=\"small\">图片预览</div>\r\n                        <Image className=\"w-4c h-4c mt-3\" src={this.resId} />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </Page>;\r\n    })\r\n}\r\n","import * as React from 'react';\r\n\r\nexport function Loading() {\r\n    return <div className=\"d-flex h-100 align-items-center justify-content-center\">\r\n        <i className=\"fa fa-spinner fa-spin fa-2x fa-fw text-info\" />\r\n    </div>;\r\n}\r\n\r\n/*\r\nexport function Loading() {\r\n    return <div style={{height:'100%'}} className=\"d-flex flex-fill align-items-center justify-content-center\">\r\n    <div className=\"d-flex align-items-center justify-content-center slide text-info\" style={{width:'5em', height:'2em'}}>\r\n        加载中...\r\n    </div>\r\n    </div>\r\n}\r\n*/\r\n\r\n\r\n","import * as React from 'react';\r\nimport { nav } from './nav';\r\n\r\nexport interface ResUploaderProps {\r\n    className?: string;\r\n    multiple?: boolean;\r\n    maxSize?: number;\r\n    onFilesChange?: (evt: React.ChangeEvent<HTMLInputElement>) => void;\r\n}\r\n\r\nexport class ResUploader extends React.Component<ResUploaderProps> {\r\n    private fileInput: HTMLInputElement;\r\n\r\n    upload = async ():Promise<string> => {\r\n        let {maxSize} = this.props;\r\n        if (maxSize === undefined || maxSize <= 0) \r\n            maxSize = 100000000000;\r\n        else\r\n            maxSize = maxSize * 1024;\r\n        let resUrl = nav.resUrl + 'upload';\r\n        var files:FileList = this.fileInput.files;\r\n        var data = new FormData();\r\n        let len = files.length;\r\n        for (let i=0; i<len; i++) {\r\n            let file = files[i];\r\n            if (file.size > maxSize) return null;\r\n            data.append('files[]', file, file.name);\r\n        }\r\n  \r\n        try {\r\n            let abortController = new AbortController();\r\n            let res = await fetch(resUrl, {\r\n                method: \"POST\",\r\n                body: data,\r\n                signal: abortController.signal,\r\n            });\r\n            let json = await res.json();\r\n            return ':' + json.res.id;\r\n        }\r\n        catch (err) {\r\n            console.error('%s %s', resUrl, err);\r\n        }\r\n    }\r\n    render() {\r\n        let {className, multiple, onFilesChange} = this.props;\r\n        return <input \r\n            className={className}\r\n            ref={t=>this.fileInput=t} \r\n            onChange={onFilesChange}\r\n            type='file' name='file' multiple={multiple} />\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport _ from 'lodash';\r\nimport { Page, loadAppUqs, nav, meInFrame, Controller, TypeVPage, VPage, resLang, getExHash, isDevelopment} from 'tonva-tools';\r\nimport { List, LMR, FA } from 'tonva-react-form';\r\nimport { CUq, EntityType, UqUI } from './uq';\r\nimport { centerApi } from '../centerApi';\r\n\r\nexport interface RoleAppUI {\r\n    CApp?: typeof CApp;\r\n    CUq?: typeof CUq;\r\n    main?: TypeVPage<CApp>;\r\n    uqs: {[uq:string]: UqUI | (()=>Promise<UqUI>)};\r\n    res?: any;\r\n}\r\n\r\nexport interface AppUI extends RoleAppUI {\r\n    roles?: {[role:string]: RoleAppUI | (()=>Promise<RoleAppUI>)};\r\n}\r\n\r\nexport class CApp extends Controller {\r\n    private appOwner:string;\r\n    private appName:string;\r\n    private cImportUqs: {[uq:string]: CUq} = {};\r\n    protected ui:AppUI;\r\n    id: number;\r\n    appUnits:any[];\r\n\r\n    constructor(tonvaApp:string, ui?:AppUI) {\r\n        super(resLang(ui && ui.res));\r\n        let parts = tonvaApp.split('/');\r\n        if (parts.length !== 2) {\r\n            throw 'tonvaApp name must be / separated, owner/app';\r\n        }\r\n        this.appOwner = parts[0];\r\n        this.appName = parts[1];\r\n        this.ui = ui || {uqs:{}};\r\n        this.caption = this.res.caption || 'Tonva';\r\n    }\r\n    \r\n    readonly caption: string; // = 'View Model 版的 Uq App';\r\n    cUqCollection: {[uq:string]: CUq} = {};\r\n\r\n    async startDebug() {\r\n        let appName = this.appOwner + '/' + this.appName;\r\n        let cApp = new CApp(appName, {uqs:{}} );\r\n        let keepNavBackButton = true;\r\n        await cApp.start(keepNavBackButton);    \r\n    }\r\n\r\n    protected async loadUqs(): Promise<string[]> {\r\n        let retErrors:string[] = [];\r\n        let unit = meInFrame.unit;\r\n        let app = await loadAppUqs(this.appOwner, this.appName);\r\n        let {id, uqs} = app;\r\n        this.id = id;\r\n\r\n        let promises: PromiseLike<string>[] = [];\r\n        let promiseChecks: PromiseLike<boolean>[] = [];\r\n        let roleAppUI = await this.buildRoleAppUI();\r\n        for (let appUq of uqs) {\r\n            let {id:uqId, uqOwner, uqName, access} = appUq;\r\n            let uq = uqOwner + '/' + uqName;\r\n            let uqUI = roleAppUI && roleAppUI.uqs && roleAppUI.uqs[uq];\r\n            let cUq = this.newCUq(uq, uqId, access, uqUI || {});\r\n            this.cUqCollection[uq] = cUq;\r\n            promises.push(cUq.loadSchema());\r\n            promiseChecks.push(cUq.entities.uqApi.checkAccess());\r\n        }\r\n        let results = await Promise.all(promises);\r\n        Promise.all(promiseChecks).then((checks) => {\r\n            for (let c of checks) {\r\n                if (c === false) {\r\n                    //debugger;\r\n                    //nav.start();\r\n                    //return;\r\n                }\r\n            }\r\n        });\r\n        for (let result of results)\r\n        {\r\n            let retError = result; // await cUq.loadSchema();\r\n            if (retError !== undefined) {\r\n                retErrors.push(retError);\r\n                continue;\r\n            }\r\n        }\r\n        if (retErrors.length === 0) return;\r\n        return retErrors;\r\n    }\r\n\r\n    private async buildRoleAppUI():Promise<RoleAppUI> {\r\n        if (!this.ui) return undefined;\r\n        let {hashParam} = nav;\r\n        if (!hashParam) return this.ui;\r\n        let {roles} = this.ui;\r\n        let ret:RoleAppUI = {} as any;\r\n        for (let i in this.ui) {\r\n            if (i === 'roles') continue;\r\n            ret[i] = _.cloneDeep(this.ui[i]);\r\n        }\r\n        let roleAppUI = roles && roles[hashParam];\r\n        if (typeof roleAppUI === 'function') roleAppUI = await roleAppUI();\r\n        _.merge(ret, roleAppUI);\r\n        return ret;\r\n    }\r\n\r\n    async getImportUq(uqOwner:string, uqName:string):Promise<CUq> {\r\n        let uq = uqOwner + '/' + uqName;\r\n        let cUq = this.cImportUqs[uq];\r\n        if (cUq !== undefined) return cUq;\r\n        let ui = this.ui && this.ui.uqs && this.ui.uqs[uq];\r\n        let uqId = -1; // unknown\r\n        this.cImportUqs[uq] = cUq = this.newCUq(uq, uqId, undefined, ui || {});\r\n        let retError = await cUq.loadSchema();\r\n        if (retError !== undefined) {\r\n            console.error(retError);\r\n            debugger;\r\n            return;\r\n        }\r\n        return cUq;\r\n    }\r\n\r\n    protected newCUq(uq:string, uqId:number, access:string, ui:any) {\r\n        let cUq = new (this.ui.CUq || CUq)(this, uq, this.id, uqId, access, ui);        \r\n        Object.setPrototypeOf(cUq.x, this.x);\r\n        return cUq;\r\n    }\r\n\r\n    get cUqArr():CUq[] {\r\n        let ret:CUq[] = [];\r\n        for (let i in this.cUqCollection) {\r\n            ret.push(this.cUqCollection[i]);\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    getCUq(apiName:string):CUq {\r\n        return this.cUqCollection[apiName];\r\n    }\r\n\r\n    protected get VAppMain():TypeVPage<CApp> {return (this.ui&&this.ui.main) || VAppMain}\r\n    protected async beforeStart():Promise<boolean> {\r\n        try {\r\n            let {unit} = meInFrame;\r\n            if (isDevelopment === true) {\r\n                let app = await loadAppUqs(this.appOwner, this.appName);\r\n                let {id} = app;\r\n                this.id = id;\r\n                let {user} = nav;\r\n                if (user !== undefined && user.id > 0) {\r\n                    await this.loadAppUnits();\r\n                    switch (this.appUnits.length) {\r\n                        case 0:\r\n                            this.showUnsupport(unit);\r\n                            return false;\r\n                        case 1:\r\n                            let appUnit = this.appUnits[0].id;\r\n                            if (appUnit === undefined || appUnit < 0 || \r\n                                unit !== undefined && appUnit != unit)\r\n                            {\r\n                                this.showUnsupport(unit);\r\n                                return false;\r\n                            }\r\n                            meInFrame.unit = appUnit;\r\n                            break;\r\n                        default:\r\n                            if (unit>0 && this.appUnits.find(v => v.id===unit) !== undefined) {\r\n                                meInFrame.unit = unit;\r\n                                break;\r\n                            }\r\n                            nav.push(<this.selectUnitPage />)\r\n                            return false;\r\n                    }\r\n                }\r\n            }\r\n\r\n            let retErrors = await this.loadUqs();\r\n            if (retErrors !== undefined) {\r\n                this.openPage(<Page header=\"ERROR\">\r\n                    <div className=\"m-3\">\r\n                        <div>Load Uqs 发生错误：</div>\r\n                        {retErrors.map((r, i) => <div key={i}>{r}</div>)}\r\n                    </div>\r\n                </Page>);\r\n                return false;\r\n            }\r\n            return true;\r\n        }\r\n        catch (err) {\r\n            nav.push(<Page header=\"App start error!\">\r\n                <pre>\r\n                    {typeof err === 'string'? err : err.message}\r\n                </pre>\r\n            </Page>);\r\n            return false;\r\n        }\r\n    }\r\n\r\n    protected async internalStart(param:any) {\r\n        if (param !== true) {\r\n            this.clearPrevPages();\r\n        }\r\n        await this.showMainPage();\r\n    }\r\n    async load() {\r\n        await this.beforeStart();\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        return this.renderView(this.VAppMain);\r\n    }\r\n\r\n    // 如果是独立app，删去显示app之前的页面。\r\n    // 如果非独立app，则不删\r\n    protected clearPrevPages() {\r\n        nav.clear();\r\n    }\r\n\r\n    private showUnsupport(unit:number) {\r\n        this.clearPrevPages();\r\n        let {user} = nav;\r\n        let userName:string = user? user.name : '[未登录]';\r\n        this.openPage(<Page header=\"APP无法运行\" logout={true}>\r\n            <div className=\"m-3 text-danger container\">\r\n                <div className=\"form-group row\">\r\n                    <div className=\"col-2\">\r\n                        <FA name=\"exclamation-triangle\" />\r\n                    </div>\r\n                    <div className=\"col\">\r\n                        用户不支持APP, unit={unit}\r\n                    </div>\r\n                </div>\r\n                <div className=\"form-group row\">\r\n                    <div className=\"col-2\">用户: </div>\r\n                    <div className=\"col\">{userName}</div>\r\n                </div>\r\n                <div className=\"form-group row\">\r\n                    <div className=\"col-2\">App:</div>\r\n                    <div className=\"col\">{`${this.appOwner}/${this.appName}`}</div>\r\n                </div>\r\n            </div>\r\n        </Page>)\r\n    }\r\n\r\n    private async showMainPage() {\r\n        // #tv-RwPBwMef-23-sheet-api-108\r\n        let exHash = getExHash();\r\n        if (exHash !== undefined) {\r\n            let parts = exHash.split('-');\r\n            if (parts.length > 3) {\r\n                let action = parts[3];\r\n                // sheet_debug 表示centerUrl是debug方式的\r\n                if (action === 'sheet' || action === 'sheet_debug') {\r\n                    let uqId = Number(parts[4]);\r\n                    let sheetTypeId = Number(parts[5]);\r\n                    let sheetId = Number(parts[6]);\r\n                    let cUq = this.getCUqFromId(uqId);\r\n                    if (cUq === undefined) {\r\n                        alert('unknown uqId: ' + uqId);\r\n                        return;\r\n                    }\r\n                    this.clearPrevPages();\r\n                    await cUq.navSheet(sheetTypeId, sheetId);\r\n                    return;\r\n                }\r\n            }\r\n        }\r\n        this.openVPage(this.VAppMain);\r\n    }\r\n\r\n    private getCUqFromId(uqId:number): CUq {\r\n        for (let i in this.cUqCollection) {\r\n            let cUq = this.cUqCollection[i];\r\n            if (cUq.id === uqId) return cUq;\r\n        }\r\n        return;\r\n    }\r\n\r\n    private async loadAppUnits() {\r\n        let ret = await centerApi.userAppUnits(this.id);\r\n        this.appUnits = ret;\r\n        /*\r\n        if (ret.length === 1) {\r\n            meInFrame.unit = ret[0].id;\r\n        }*/\r\n    }\r\n\r\n    renderRow = (item: any, index: number):JSX.Element => {\r\n        let {id, nick, name} = item;\r\n        return <LMR className=\"px-3 py-2\" right={'id: ' + id}>\r\n            <div>{nick || name}</div>\r\n        </LMR>;\r\n    }\r\n    onRowClick = async (item: any) => {\r\n        meInFrame.unit = item.id; // 25;\r\n        await this.start();\r\n    }\r\n\r\n    protected selectUnitPage = () => {\r\n        return <Page header=\"选择小号\" logout={true}>\r\n            <List items={this.appUnits} item={{render: this.renderRow, onClick: this.onRowClick}}/>\r\n        </Page>\r\n    }\r\n}\r\n\r\nclass VAppMain extends VPage<CApp> {\r\n    async open(param?:any) {\r\n        this.openPage(this.appPage);\r\n    }\r\n\r\n    render(param?:any) {\r\n        return this.appContent();\r\n    }\r\n\r\n    protected appPage() {\r\n        let {caption} = this.controller;\r\n        return <Page header={caption} logout={async()=>{meInFrame.unit = undefined}}>\r\n            {this.appContent()}\r\n        </Page>;\r\n    }\r\n\r\n    protected appContent = () => {\r\n        let {cUqArr} = this.controller;\r\n        let content:any;\r\n        if (cUqArr.length === 0) {\r\n            content = <div className=\"text-danger\">\r\n                <FA name=\"\" /> 此APP没有绑定任何的UQ\r\n            </div>;\r\n        }\r\n        else {\r\n            content = cUqArr.map((v,i) => <div key={i}>{v.render()}</div>);\r\n        }\r\n        return <>{content}</>;\r\n    };\r\n}\r\n","export * from './rule';\r\nexport * from './field';\r\nexport * from './face';\r\nexport * from './rowContainer';\r\nexport * from './formView';\r\nexport * from './TonvaForm';\r\nexport {ControlBase} from './control';\r\n","import * as React from 'react';\r\nimport {FormEvent} from 'react';\r\nimport {computed} from 'mobx';\r\nimport {uid} from '../uid';\r\nimport {Rule} from './rule';\r\nimport {Field} from './field';\r\nimport {Face} from './face';\r\nimport {CreateControl, ButtonsControl} from './control';\r\nimport {RowContainer, CreateRow, bootstrapCreateRow, elementCreateRow} from './rowContainer';\r\n\r\nexport interface FieldView {\r\n    field: Field;\r\n    face?: Face;\r\n}\r\n\r\nexport interface LabeledRow {\r\n    label?: string;\r\n    createRow?: CreateRow;\r\n    createControl?: CreateControl;\r\n    help?: JSX.Element;\r\n}\r\n\r\nexport interface FieldRow extends LabeledRow, FieldView {\r\n}\r\n\r\nexport interface GroupRow extends LabeledRow {\r\n    group: FieldView[];\r\n}\r\n\r\nexport type LabelFormRow = FieldRow|GroupRow|LabeledRow;\r\nexport type FormRow = LabelFormRow|JSX.Element;\r\n\r\nexport interface SubmitResult {\r\n    success: boolean;\r\n    message?: string\r\n    result?: any;\r\n}\r\n\r\nexport interface FormProps {\r\n    formRows: FormRow[];\r\n    //context?: any;              // form context，比如，可以是EntitiesUI\r\n    rules?: Rule | Rule[];\r\n    onSubmit: (values:any) => Promise<SubmitResult|undefined>;\r\n    submitButton?: string|JSX.Element;\r\n    otherButton?: string|JSX.Element;\r\n    onOther?: (values:any) => void;\r\n    createRow?: CreateRow;\r\n    createControl?: CreateControl;\r\n    readOnly?: boolean;\r\n}\r\n\r\nexport class FormView {\r\n    uid:string;\r\n    private rows: RowContainer[] = [];\r\n    private buttonsRow: RowContainer;\r\n    props: FormProps;\r\n    createControl?: CreateControl;\r\n    constructor(props:FormProps) {\r\n        this.uid = uid();\r\n        this.props = props;\r\n        this.buildRows(props);\r\n        this.createControl = props.createControl;\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n    }\r\n\r\n    @computed get hasError():boolean {\r\n        let ret = this.rows.map((v, index) => index + ': ' + v.hasError + '\\n');\r\n        console.log(ret);\r\n        return this.rows.some(row => row.hasError);\r\n    }\r\n    @computed get nothing():boolean {\r\n        let ret = this.rows.every(row => !row.filled);\r\n        return ret;\r\n    }\r\n\r\n    readValues():any {\r\n        let values = {} as any;\r\n        for (let row of this.rows) {\r\n            row.readValues(values);\r\n        }\r\n        return values;\r\n    }\r\n\r\n    clear() {\r\n        for (let row of this.rows) {\r\n            row.clear();\r\n        }\r\n    }\r\n\r\n    clearErrors() {\r\n        for (let row of this.rows) {\r\n            row.clearErrors();\r\n        }\r\n    }\r\n\r\n    setError(fieldName:string, error:string) {\r\n        for (let row of this.rows) {\r\n            row.setError(fieldName, error);\r\n        }\r\n    }\r\n\r\n    setInitValues(initValues:any) {\r\n        if (initValues === undefined) return;\r\n        for (let row of this.rows) {\r\n            row.setInitValues(initValues);\r\n        }\r\n    }\r\n\r\n    private buildRows(props:FormProps) {\r\n        let {formRows, createRow} = props;\r\n        if (formRows !== undefined) {\r\n            for (let row of formRows) {\r\n                this.rows.push(this.buildRow(row, createRow));\r\n            }\r\n            if (this.props.readOnly !== true) {\r\n                this.buttonsRow = this.buildRow({createControl:this.createButtons.bind(this)}, undefined);\r\n            }\r\n        }\r\n        else {\r\n            this.rows.push(elementCreateRow(this, <div className=\"text-warning\">TonvaForm need formRows defined</div>));\r\n        }\r\n    }\r\n\r\n    private buildRow(formRow: FormRow, formRowCreator: CreateRow):RowContainer {\r\n        let createRow:CreateRow;\r\n        let type = (formRow as JSX.Element).type;\r\n        if (type !== undefined) {\r\n            createRow = elementCreateRow;\r\n        }\r\n        else {\r\n            createRow = (formRow as (FieldRow | GroupRow | LabeledRow)).createRow;\r\n            if (createRow === undefined) {\r\n                createRow = formRowCreator;\r\n                if (createRow === undefined) createRow = bootstrapCreateRow;\r\n            }\r\n        }\r\n        let row = createRow(this, formRow);\r\n        return row;\r\n    }\r\n\r\n    private createButtons(form:FormView, row: FormRow) {\r\n        return new ButtonsControl(form);\r\n    }\r\n\r\n    private isOk():boolean {\r\n        let isOk = true;\r\n        for (let row of this.rows) {\r\n            if (!row.isOk()) isOk = false;\r\n        }\r\n        return isOk;\r\n    }\r\n\r\n    render():JSX.Element {\r\n        return <form onSubmit={this.onSubmit}>\r\n            {this.rows.map((row,index) => row.render(this.uid + index))}\r\n            {this.buttons()}\r\n        </form>;\r\n    }\r\n\r\n    buttons():JSX.Element {\r\n        if (this.buttonsRow === undefined) return;\r\n        return this.buttonsRow.render(this.uid + this.rows.length);\r\n    }\r\n    \r\n    async onSubmit(event:FormEvent<HTMLFormElement>) {\r\n        event.preventDefault();\r\n        if (!this.isOk()) return;\r\n        let values = this.readValues();\r\n        await this.props.onSubmit(values);\r\n    }\r\n}\r\n","import React from 'react';\r\nimport { FA } from \"tonva-react-form\";\r\n\r\nfunction icon(className:string, name:string) {\r\n    return <FA className={className} name={name} fixWidth={true} />;\r\n}\r\n/*\r\nexport interface EntityRes {\r\n    caption: string;\r\n    icon: JSX.Element;\r\n}\r\n*/\r\n\r\nexport const entityIcons:{[type:string]:JSX.Element} = {\r\n    tuid: icon('text-info', 'list-alt'),\r\n    action: icon('text-info', 'hand-o-right'),\r\n    map: icon('text-muted', 'list-ul'),\r\n    book: icon('text-muted', 'book'),\r\n    query: icon('text-warning', 'search'),\r\n    history: icon('text-info', 'hand-o-right'),\r\n    pending: icon('text-info', 'forward'),\r\n    sheet: icon('text-primary', 'wpforms'),\r\n};\r\n","import { Controller } from \"tonva-tools\";\r\nimport { CUq } from \"./uq\";\r\n\r\nexport abstract class ControllerUq extends Controller {\r\n    constructor(cUq: CUq, res:any) {\r\n        super(res);\r\n        this.cUq = cUq;\r\n    }\r\n    cUq: CUq;\r\n}\r\n","import {CenterApi as CenterApiBase} from 'tonva-tools';\r\n\r\n//\r\n\r\nexport class CenterApi extends CenterApiBase {\r\n    async userAppUnits(app:number):Promise<any[]> {\r\n        return await this.get('tie/user-app-units', {app:app});\r\n    }\r\n}\r\n\r\nexport const centerApi = new CenterApi('tv/', undefined);\r\n","import * as React from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport { Page } from 'tonva-tools';\r\nimport { List, Muted, LMR } from 'tonva-react-form';\r\nimport { VEntity } from '../CVEntity';\r\nimport { Sheet } from '../../entities';\r\nimport { CSheet, SheetUI } from './cSheet';\r\n\r\nexport class VSheetMain extends VEntity<Sheet, SheetUI, CSheet> {\r\n    async open() {\r\n        this.openPage(this.view);\r\n    }\r\n\r\n    newClick = () => this.event('new');\r\n    schemaClick = () => this.event('schema'); \r\n    archivesClick = () => this.event('archives');\r\n    sheetStateClick = (state) => this.event('state', state);\r\n\r\n    renderState = (item:any, index:number) => {\r\n        let {state, count} = item;\r\n        if (count === 0) return null;\r\n        let badge = <span className=\"badge badge-success ml-5 align-self-end\">{count}</span>;\r\n        return <LMR className=\"px-3 py-2\" left={this.controller.getStateLabel(state)} right={badge} />;\r\n    }\r\n\r\n    protected view = observer(() => {\r\n        let list = this.controller.statesCount.filter(row=>row.count);\r\n        let right = <button className=\"btn btn-outline-primary\" onClick={this.archivesClick}>已归档</button>;\r\n        let templet:any;\r\n        if (this.isDev === true) {\r\n            templet = <button className=\"btn btn-primary mr-2\" color=\"primary\" onClick={this.schemaClick}>模板</button>;\r\n        }\r\n        return <Page header={this.label}>\r\n            <LMR\r\n                className=\"mx-3 my-2\"\r\n                right={right}>\r\n                <button className=\"btn btn-primary mr-2\" color=\"primary\" onClick={this.newClick}>新建</button>\r\n                {templet}\r\n            </LMR>\r\n            <List className=\"my-2\"\r\n                header={<Muted className=\"mx-3 my-1\">待处理{this.label}</Muted>}\r\n                none=\"[ 无 ]\"\r\n                items={list}\r\n                item={{render:this.renderState, onClick:this.sheetStateClick}} />\r\n        </Page>;\r\n    });\r\n}\r\n","import * as React from 'react';\r\nimport { Page } from 'tonva-tools';\r\nimport { FA } from 'tonva-react-form';\r\nimport { Sheet } from '../../entities';\r\nimport { VForm } from '../form';\r\nimport { VEntity } from '../CVEntity';\r\nimport { SheetUI, CSheet } from './cSheet';\r\n\r\nexport class VSheetNew extends VEntity<Sheet, SheetUI, CSheet> {\r\n    vForm: VForm;\r\n\r\n    async open(param?:any) {\r\n        this.vForm = this.createForm(this.onSubmit, param);\r\n        this.openPage(this.view);\r\n    }\r\n\r\n    private onSubmit = async ():Promise<void> => {\r\n        let values = this.vForm.getValues();\r\n        let valuesWithBox = this.vForm.values;\r\n        //let ret = \r\n        await this.controller.onSave(values, valuesWithBox);\r\n        /*\r\n        this.ceasePage();\r\n        //this.openPage(this.finishedPage);\r\n        await this.controller.showSaved(ret);\r\n        */\r\n    }\r\n\r\n    protected view = () => <Page header={this.label}>\r\n        {this.vForm.render()}\r\n    </Page>;\r\n}\r\n","import * as React from 'react';\r\nimport {List, Muted, LMR, EasyDate, FA} from 'tonva-react-form';\r\nimport { Sheet } from '../../entities';\r\nimport { VForm } from '../form';\r\nimport { VEntity } from '../CVEntity';\r\nimport { CSheet, SheetUI, SheetData } from './cSheet';\r\n\r\nconst leftFlowStyle = {width: '8rem'};\r\n\r\nexport abstract class VSheetView extends VEntity<Sheet, SheetUI, CSheet> {\r\n    protected vForm: VForm;\r\n    protected sheetData: SheetData;\r\n    //data: any;\r\n    //state: string;\r\n    //flows:any[];\r\n\r\n    flowRow = (item:any, index:number):JSX.Element => {\r\n        let {date, user, preState, state, action} = item;\r\n        if (action === undefined) action = <><FA className=\"text-primary\" name=\"pencil-square-o\" /> 制单</>;\r\n        let to;\r\n        switch (state) {\r\n            case '$': break;\r\n            case '#': to = <><FA className=\"text-success\" name=\"file-archive-o\" /></>; break;\r\n            default: to = <><FA className=\"text-muted\" name=\"arrow-right\" /> &nbsp; {state}</>; break;\r\n        }\r\n        /*\r\n        return <div className=\"row\">\r\n            <div className=\"col-sm\"></div>\r\n            <div className=\"col-sm\"><div className=\"p-2\">{to}</div></div>\r\n            <div className=\"col-sm text-right\"><div className=\"p-2\"><Muted><EasyDate date={date} /></Muted></div></div>\r\n        </div>;\r\n        */\r\n        return <LMR \r\n            left={<div className=\"pl-3 py-2\" style={leftFlowStyle}>{action}</div>}\r\n            right={<div className=\"p-2\"><Muted><EasyDate date={date} /></Muted></div>}>\r\n            <div className=\"p-2\">{to}</div>\r\n        </LMR>;\r\n    }\r\n\r\n    protected sheetView = () => {\r\n        let {brief, flows} = this.sheetData;\r\n        let removed;\r\n        if (brief.state === '-')\r\n            removed = <div className=\"mx-3 my-2\" style={{color:'red'}}>本单据作废</div>;\r\n        return <div>\r\n            {removed}\r\n            {this.vForm.render()}\r\n    \r\n            <List header={<Muted className=\"mx-3 my-1\">流程</Muted>}\r\n                items={flows}\r\n                item={{render:this.flowRow}}/>\r\n        </div>;\r\n    };\r\n}\r\n","import * as React from 'react';\r\nimport { Page } from 'tonva-tools';\r\nimport { VForm, FormMode } from '../form';\r\nimport { VSheetView } from './vSheetView';\r\nimport { SheetData } from './cSheet';\r\n\r\nexport class VSheetEdit extends VSheetView { //VEntity<Sheet, SheetUI, CSheet> {\r\n    protected sheetData: SheetData;\r\n    async open(param: SheetData) {\r\n        this.sheetData = param;\r\n        this.vForm = this.createForm(this.onSubmit, param.data, FormMode.edit);\r\n        this.openPage(this.view);\r\n    }\r\n\r\n    onSubmit = async ():Promise<void> => {\r\n        let values = this.vForm.getValues();\r\n        await this.controller.saveSheet(values, this.vForm.values);\r\n        this.closePage();\r\n        this.returnCall(this.vForm.values);\r\n    }\r\n\r\n    protected view = () => <Page header={this.label}>\r\n        {this.vForm.render()}\r\n    </Page>;\r\n}\r\n","import React from 'react';\r\nimport classNames from 'classnames';\r\nimport { nav, Page } from 'tonva-tools';\r\nimport { FA } from 'tonva-react-form';\r\nimport { VSheetView } from './vSheetView';\r\nimport { SheetData } from './cSheet';\r\n\r\nexport class VSheetAction extends VSheetView { \r\n    async open(sheetData:SheetData) {\r\n        this.sheetData = sheetData;\r\n        //let {brief, data, flows} = await this.controller.getSheetData(sheetId);\r\n        //this.brief = brief;\r\n        //this.flows = flows;\r\n        //this.data = data;\r\n        //this.state = this.brief.state;\r\n        this.vForm = this.createForm(undefined, sheetData.data);\r\n        this.openPage(this.page);\r\n    }\r\n\r\n    actionClick = async (action:any) => {\r\n        let {id, flow, state} = this.sheetData.brief;\r\n        let res = await this.controller.action(id, flow, state, action.name);\r\n        this.ceasePage();\r\n        this.openPage(this.acted);\r\n        //alert(jsonStringify(res));\r\n        //await this.backPage();\r\n    }\r\n\r\n    deleteClick = async () => {\r\n        alert('单据作废：程序正在设计中');\r\n    }\r\n\r\n    editClick = async () => {\r\n        //alert('修改单据：程序正在设计中');\r\n        let values = await this.controller.editSheet(this.sheetData);\r\n        this.vForm.setValues(values);\r\n    }\r\n\r\n    protected page = () => {\r\n        let {brief} = this.sheetData;\r\n        let {state, no} = brief;\r\n        let stateLabel = this.controller.getStateLabel(state);\r\n        let {states} = this.entity;\r\n        let s = states.find(v => v.name === state);\r\n        let actionButtons, startButtons;\r\n        if (s === undefined) {\r\n            let text:string, cn:string;\r\n            switch (state) {\r\n                default:\r\n                    text = '不认识的单据状态\\'' + state + '\\'';\r\n                    cn = 'text-info';\r\n                    break;\r\n                case '-': \r\n                    text = '已作废';\r\n                    cn = 'text-danger';\r\n                    break;\r\n                case '#':\r\n                    text = '已归档';\r\n                    cn = 'text-success';\r\n                    break;\r\n            }\r\n            actionButtons = <div className={classNames(cn)}>[{text}]</div>;\r\n        }\r\n        else {\r\n            actionButtons = <div className=\"flex-grow-1\">{s.actions.map((v,index) => \r\n                <button\r\n                    key={index}\r\n                    className=\"btn btn-primary mr-2\"\r\n                    onClick={()=>this.actionClick(v)}\r\n                >\r\n                    {this.controller.getActionLabel(state, v.name)}\r\n                </button>)}\r\n            </div>;\r\n            if (state === '$') {\r\n                startButtons = <div>\r\n                    <button className=\"btn btn-outline-info ml-2\" onClick={this.editClick}>修改</button>\r\n                    <button className=\"btn btn-outline-danger ml-2\" onClick={this.deleteClick}>作废</button>\r\n                </div>\r\n            }\r\n        };\r\n        return <Page header={this.label + ':' + stateLabel + '-' + no}>\r\n            <div className=\"mb-2\">\r\n                <div className=\"d-flex px-3 py-2 border-bottom bg-light\">\r\n                    {actionButtons}\r\n                    {startButtons}\r\n                </div>\r\n                <this.sheetView />\r\n            </div>\r\n        </Page>;\r\n    }\r\n\r\n    private acted = () => {\r\n        let {discription} = this.sheetData.brief;\r\n        return <Page header=\"已处理\" back=\"close\">\r\n            <div className=\"p-3 d-flex flex-column align-items-center\">\r\n                <div className=\"p-3\">{discription}</div>\r\n                <div className=\"text-success\"><FA name=\"check-circle-o\" /> 单据已处理！</div>\r\n                <div className=\"p-3\">\r\n                    <button className=\"btn btn-outline-info\" onClick={()=>this.backPage()}>返回</button>\r\n                </div>\r\n            </div>\r\n        </Page>\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { Page } from 'tonva-tools';\r\nimport { VEntity } from '../CVEntity';\r\nimport { Sheet } from '../../entities';\r\nimport { SheetUI, CSheet } from './cSheet';\r\n\r\nexport class VSheetSchema extends VEntity<Sheet, SheetUI, CSheet> {\r\n    async open(param?:any) {\r\n        this.openPage(this.view);\r\n    }\r\n\r\n    protected view = () => <Page header={this.label + \"模板\"}>\r\n        <pre className=\"mx-3 my-2\">{this.entity.schemaStringify()}</pre>\r\n    </Page>;\r\n}\r\n\r\n","import * as React from 'react';\r\nimport { Page } from 'tonva-tools';\r\nimport {List, LMR, FA, EasyDate, Muted} from 'tonva-react-form';\r\nimport { VEntity } from '../CVEntity';\r\nimport { Sheet } from '../../entities';\r\nimport { SheetUI, CSheet } from './cSheet';\r\n\r\nexport class VArchives extends VEntity<Sheet, SheetUI, CSheet> {\r\n    list: any[];\r\n\r\n    async open() {\r\n        this.list = await this.entity.getArchives(undefined, 10);\r\n        this.openPage(this.view);\r\n    }\r\n\r\n    archiveClick = async (brief:any) => {\r\n        if (brief.processing===1) return;\r\n        this.event('archived', brief);\r\n    }\r\n    archiveRow = (row:any, index:number) => {\r\n        let {id, no, discription, date} = row;\r\n        let left = <>\r\n            {row.processing===1? '... ' : ''}\r\n            {row.no} &nbsp; {row.discription}\r\n        </>;\r\n        let right = <Muted><EasyDate date={date} /></Muted>;\r\n        return <LMR className=\"px-3 py-2\" left={left} right={right} />\r\n    }\r\n\r\n    protected view = () => {\r\n        return <Page header={'已归档' + this.label}>\r\n            <List items={this.list} item={{render:this.archiveRow, onClick:this.archiveClick}} />\r\n        </Page>;\r\n    };\r\n}\r\n","import * as React from 'react';\r\nimport { Page, nav } from 'tonva-tools';\r\nimport { List, Muted, FA, LMR, EasyDate } from 'tonva-react-form';\r\nimport { VEntity } from '../CVEntity';\r\nimport { Sheet } from '../../entities';\r\nimport { CSheet, SheetUI } from './cSheet';\r\n\r\nexport class VSheetList extends VEntity<Sheet, SheetUI, CSheet> {\r\n    protected row: (values) => JSX.Element;\r\n    stateName: string;\r\n    stateLabel: string;\r\n\r\n    async open(item:any) {\r\n        this.row = this.ui.listRow || this.rowContent;\r\n        this.stateName = item.state;\r\n        this.stateLabel = this.controller.getStateLabel(this.stateName);\r\n        //await this.controller.getStateSheets(this.stateName, 0, 10);\r\n        await this.controller.pageStateItems.first(this.stateName);\r\n        this.openPage(this.view);\r\n    }\r\n\r\n    rowClick = async (brief:any) => {\r\n        if (brief.processing===1) {\r\n            this.event('processing', brief.id);\r\n            return;\r\n        }\r\n        this.event('action', brief.id);\r\n    }\r\n\r\n    private onScrollBottom = () => {\r\n        console.log('onScrollBottom');\r\n        this.controller.pageStateItems.more();\r\n    }\r\n\r\n    protected rowContent = (row:any):JSX.Element => {\r\n        let {id, no, discription, date, processing} = row;\r\n        let left = <>            \r\n            {no} &nbsp; <Muted>{discription}</Muted> {processing===1? '...' : ''}\r\n        </>;\r\n        let right = <Muted><EasyDate date={date} /></Muted>;\r\n        return <LMR className=\"px-3 py-2\" left={left} right={right} />;\r\n    }\r\n\r\n    private renderRow = (row:any, index:number) => <this.row {...row} />\r\n\r\n    protected view = () => {\r\n        //let sheets = this.controller.stateSheets;\r\n        let {pageStateItems} = this.controller;\r\n        return <Page header={this.label + ' - ' + this.stateLabel} onScrollBottom={this.onScrollBottom}>\r\n            <List items={pageStateItems} item={{render:this.renderRow, onClick:this.rowClick}} />\r\n        </Page>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {Page} from 'tonva-tools';\r\nimport { VSheetView } from './vSheetView';\r\nimport { CSheet, SheetUI, SheetData } from './cSheet';\r\n\r\nexport interface State {\r\n    flows: any;\r\n    data: any;\r\n}\r\nexport class VArchived extends VSheetView {\r\n    //protected controller: CSheet;\r\n    //brief: any;\r\n\r\n    async open(sheetData:SheetData) {\r\n        this.sheetData = sheetData;\r\n        /*\r\n        let {brief, data, flows} = await this.controller.getArchived(inBrief.id);\r\n        this.brief = brief;\r\n        this.data = data;\r\n        this.flows = flows;\r\n        */\r\n        this.vForm = this.createForm(undefined, this.sheetData.data);\r\n        this.openPage(this.view);\r\n    }\r\n\r\n    protected view = () => {\r\n        let {brief} = this.sheetData;\r\n        return <Page header={this.label + ':' + '-' + brief.no}>\r\n            <this.sheetView />\r\n        </Page>;\r\n    };\r\n}\r\n","import { Sheet } from \"../../entities\";\r\nimport { SheetUI, CSheet } from \"./cSheet\";\r\nimport { VEntity } from \"../CVEntity\";\r\n\r\nexport abstract class VSheet extends VEntity<Sheet, SheetUI, CSheet> {\r\n}\r\n","import * as React from 'react';\r\nimport { Page } from 'tonva-tools';\r\nimport { FA } from 'tonva-react-form';\r\nimport { VSheet } from \"./vSheet\";\r\n\r\nexport class VSheetSaved extends VSheet {\r\n    private brief: any;\r\n    async open(brief?:any) {\r\n        this.brief = brief;\r\n        this.openPage(this.view);\r\n    }\r\n\r\n    private restart = async () => {\r\n        this.ceasePage();\r\n        await this.event('new');\r\n    }\r\n\r\n    actionClick = async (action:any) => {\r\n        this.ceasePage();\r\n        let {id, flow, state} = this.brief;\r\n        let res = await this.controller.action(id, flow, state, action.name);\r\n        this.openPage(this.acted);\r\n    }\r\n\r\n    private buttons = <>\r\n        <button className=\"btn btn-outline-primary mr-3\" onClick={this.restart}>继续开单</button>\r\n        <button className=\"btn btn-outline-info\" onClick={()=>this.backPage()}>返回</button>\r\n    </>;\r\n\r\n    private view = () => {\r\n        let {states} = this.entity;\r\n        const state = '$';\r\n        let s = states.find(v => v.name === state);\r\n        let actionButtons = <>{s.actions.map((v,index) => \r\n            <button\r\n                key={index}\r\n                className=\"btn btn-primary mr-3\"\r\n                onClick={()=>this.actionClick(v)}\r\n            >\r\n                {this.controller.getActionLabel(state, v.name)}\r\n            </button>)}\r\n        </>;\r\n        return <Page header=\"已保存\" back=\"close\">\r\n            <div className=\"p-3 d-flex flex-column align-items-center\">\r\n                <div className=\"text-success\"><FA name=\"check-circle-o\" /> 单据已保存！系统尚未处理</div>\r\n                <div className=\"p-3\">\r\n                    {actionButtons}\r\n                    {this.buttons}\r\n                </div>\r\n            </div>\r\n        </Page>;\r\n    }\r\n\r\n    private acted = () => {\r\n        return <Page>\r\n            <div className=\"p-3 d-flex flex-column align-items-center\">\r\n                <div className=\"text-success\"><FA name=\"check-circle-o\" /> 单据已处理！</div>\r\n                <div className=\"p-3\">\r\n                    {this.buttons}\r\n                </div>\r\n            </div>\r\n        </Page>\r\n    }\r\n}\r\n","import React from 'react';\r\nimport { nav, Page } from 'tonva-tools';\r\nimport { VSheetView } from './vSheetView';\r\nimport { SheetData } from './cSheet';\r\n\r\nexport class VSheetProcessing extends VSheetView { \r\n    async open(sheetData:SheetData) {\r\n        this.sheetData = sheetData;\r\n        //let {brief, data, flows} = await this.controller.getSheetData(sheetId);\r\n        //this.brief = brief;\r\n        //this.flows = flows;\r\n        //this.data = data;\r\n        //this.state = this.brief.state;\r\n        this.vForm = this.createForm(undefined, sheetData.data);\r\n        this.openPage(this.page);\r\n    }\r\n\r\n    protected page = () => {\r\n        let {brief} = this.sheetData;\r\n        let {state, no} = brief;\r\n        let stateLabel = this.controller.getStateLabel(state);\r\n        return <Page header={this.label + ':' + stateLabel + '-' + no}>\r\n            <div className=\"mb-2\">\r\n                <div className=\"d-flex px-3 py-2 border-bottom bg-light\">\r\n                    正在处理中...\r\n                </div>\r\n                <this.sheetView />\r\n            </div>\r\n        </Page>;\r\n    }\r\n}\r\n","import { IObservableArray, observable } from \"mobx\";\r\nimport { TypeVPage, VPage, PageItems, postWsToTop } from 'tonva-tools';\r\nimport { Sheet, StateCount } from \"../../entities\";\r\nimport { CEntity, EntityUI, VEntity } from \"../CVEntity\";\r\nimport { VSheetMain } from \"./vMain\";\r\nimport { VSheetNew } from \"./vNew\";\r\nimport { VSheetEdit } from \"./vEdit\";\r\nimport { VSheetAction } from \"./vSheetAction\";\r\nimport { VSheetSchema } from \"./vSchema\";\r\nimport { VArchives } from \"./vArchives\";\r\nimport { VSheetList } from \"./vList\";\r\nimport { VArchived } from \"./vArchived\";\r\nimport { VSheetSaved } from \"./vSaved\";\r\nimport { VSheetProcessing } from \"./vSheetProcessing\";\r\n\r\nexport interface SheetActionUI {\r\n    label: string;\r\n}\r\n\r\nexport interface StateUI {\r\n    label: string;\r\n    actions: {[name:string]: SheetActionUI}\r\n}\r\n\r\nexport interface SheetUI extends EntityUI {\r\n    CSheet?: typeof CSheet;\r\n    states?: {[name:string]: StateUI};\r\n    main?: TypeVPage<CSheet>;\r\n    sheetNew?: TypeVPage<CSheet>;\r\n    sheetSaved?: TypeVPage<CSheet>;\r\n    sheetEdit?: TypeVPage<CSheet>;\r\n    sheetAction?: TypeVPage<CSheet>;\r\n    listRow?: (row:any) => JSX.Element;\r\n    sheetTitle?: (sheetValues:any, x:any) => string;      // 返回单据的描述\r\n}\r\n\r\nexport interface SheetData {\r\n    brief: any;\r\n    data: any;\r\n    flows: any[];\r\n}\r\n\r\nexport class CSheet extends CEntity<Sheet, SheetUI> {\r\n    statesCount:IObservableArray<StateCount> = observable.array<StateCount>([], {deep:true});\r\n    curState:string;\r\n    pageStateItems: PageItems<any>;\r\n\r\n    protected async internalStart() {\r\n        await this.loadStateSheetCount();\r\n        this.pageStateItems = this.entity.createPageStateItems();\r\n        await this.openVPage(this.VSheetMain);\r\n    }\r\n\r\n    protected async onMessage(msg: any):Promise<void> {\r\n        let {type, body, from, to, push} = msg;\r\n        if (type === 'sheet') this.onSheet(from, to, body);\r\n    }\r\n    private onSheet(from:number, to:number[], sheetData:any) {\r\n        let me = this.user.id;\r\n        let {id, preState, state} = sheetData;\r\n        console.log({$:'onMessage sheet', from:from, to:to.join(','), id:id, preState:preState, state:state, me:me, sheetData:sheetData})\r\n        if (from === me) {\r\n            this.sheetActPreState(id, preState);\r\n        }\r\n        if (to.find(v=>v===me) !== undefined) {\r\n            this.sheetActState(id, state, sheetData);\r\n        }\r\n    }\r\n    private sheetActPreState(id:number, preState:string) {\r\n        this.changeStateCount(preState, -1);\r\n        if (this.curState === undefined || this.curState !== preState) return;\r\n        /*\r\n        let index = this.stateSheets.findIndex(v => v.id === id);\r\n        if (index>=0) {\r\n            this.stateSheets.splice(index, 1);\r\n        }*/\r\n        let index = this.pageStateItems.items.findIndex(v => v.id === id);\r\n        if (index>=0) {\r\n            this.pageStateItems.items.splice(index, 1);\r\n        }\r\n    }\r\n\r\n    private sheetActState(id:number, state:string, msg:any) {\r\n        this.changeStateCount(state, 1);\r\n        if (this.curState === undefined || this.curState !== state) return;\r\n        /*\r\n        if (this.stateSheets.findIndex(v => v.id === id) < 0) {\r\n            this.stateSheets.push(msg);\r\n        }\r\n        */\r\n        if (this.pageStateItems.items.findIndex(v => v.id === id) < 0) {\r\n            this.pageStateItems.items.push(msg);\r\n        }\r\n    }\r\n\r\n    private changeStateCount(state:string, delta:number) {\r\n        if (state === undefined) return;\r\n        let index = this.statesCount.findIndex(v => v.state === state);\r\n        console.log({$:'changeState', state: state, delta: delta, index: index});\r\n        if (index < 0) return;\r\n        let stateCount = this.statesCount[index];\r\n        stateCount.count += delta;\r\n        if (stateCount.count < 0) stateCount.count = 0;\r\n    }\r\n\r\n    protected get VSheetMain():TypeVPage<CSheet> {return (this.ui&&this.ui.main) || VSheetMain}\r\n    protected get VSheetNew(): TypeVPage<CSheet> {return this.ui.sheetNew || VSheetNew}\r\n    protected get VSheetSaved(): TypeVPage<CSheet> {return this.ui.sheetSaved || VSheetSaved}\r\n    protected get VSheetEdit(): TypeVPage<CSheet> {return this.ui.sheetEdit || VSheetEdit}\r\n    protected get VSheetSchema(): TypeVPage<CSheet> {return VSheetSchema}\r\n    protected get VArchives(): TypeVPage<CSheet> {return VArchives}\r\n    protected get VArchived(): TypeVPage<CSheet> {return VArchived}\r\n    protected get VSheetList(): TypeVPage<CSheet> {return VSheetList}\r\n    protected get VSheetAction(): TypeVPage<CSheet> {return this.ui.sheetAction || VSheetAction}\r\n    protected get VSheetProcessing(): TypeVPage<CSheet> {return VSheetProcessing}\r\n    protected async onEvent(type:string, value:any) {\r\n        let c: TypeVPage<CSheet>;\r\n        switch (type) {\r\n            default: return;\r\n            case 'new': c = this.VSheetNew; break;\r\n            case 'schema': c = this.VSheetSchema; break;\r\n            case 'archives': c = this.VArchives; break;\r\n            case 'state':\r\n                this.curState = value.state;\r\n                c = this.VSheetList;\r\n                break;\r\n            case 'archived':\r\n                await this.showArchived(value); return;\r\n            case 'action':\r\n                await this.showAction(value); return;\r\n            case 'processing':\r\n                await this.showProcessing(value); return;\r\n        }\r\n        await this.openVPage(c, value);\r\n    }\r\n\r\n    async startSheet(sheetId:number) {\r\n        if (await this.beforeStart() === false) return;\r\n        await this.onEvent('action', sheetId);\r\n    }\r\n\r\n    async showAction(sheetId:number) {\r\n        let sheetData:SheetData = await this.getSheetData(sheetId);\r\n        postWsToTop({\r\n            body: {\r\n                $type: 'msg',\r\n                action: '$sheet',\r\n                msg: {\r\n                    id: sheetId,\r\n                    uq: this.cUq.id,\r\n                    state: sheetData.brief.state\r\n                }\r\n            }\r\n        });\r\n        await this.openVPage(this.VSheetAction, sheetData);\r\n    }\r\n\r\n    async showProcessing(sheetId:number) {\r\n        let sheetData:SheetData = await this.getSheetData(sheetId);\r\n        await this.openVPage(this.VSheetProcessing, sheetData);\r\n    }\r\n\r\n    async editSheet(sheetData:SheetData):Promise<any> {\r\n        //alert('修改单据：程序正在设计中');\r\n        let values = await this.vCall(this.VSheetEdit, sheetData);\r\n        return values;\r\n    }\r\n\r\n    async showArchived(inBrief:any) {\r\n        let sheetData = await this.getArchived(inBrief.id);\r\n        await this.openVPage(this.VArchived, sheetData);\r\n    }\r\n\r\n    onSave = async (values:any, valuesWithBox:any):Promise<void> => {\r\n        //let values = this.vForm.getValues();\r\n        //let ret = await this.controller.saveSheet(values, this.vForm.values);\r\n        let ret = await this.saveSheet(values, valuesWithBox);\r\n        this.ceasePage();\r\n        //this.openPage(this.finishedPage);\r\n        await this.showSaved(ret);\r\n    }\r\n\r\n    async showSaved(sheetData:any) {\r\n        await this.openVPage(this.VSheetSaved, sheetData);\r\n    }\r\n\r\n    private getStateUI(stateName:string) {\r\n        let {states} = this.res;\r\n        if (states === undefined) return;\r\n        return states[stateName];\r\n    }\r\n    getStateLabel(stateName:string) {\r\n        let state = this.getStateUI(stateName);\r\n        let ret = (state && state.label) || stateName;\r\n        switch (ret) {\r\n            default: return ret;\r\n            case '$': return '新单';\r\n        }\r\n    }\r\n    getActionLabel(stateName:string, actionName:string) {\r\n        let state = this.getStateUI(stateName);\r\n        if (state === undefined) return actionName;\r\n        let actions = state.actions;\r\n        if (actions === undefined) return actionName;\r\n        let action = actions[actionName];\r\n        return (action && action.label) || actionName;\r\n    }\r\n\r\n    private async loadStateSheetCount():Promise<void> {\r\n        this.statesCount.clear();\r\n        let statesCount = await this.entity.stateSheetCount();\r\n        this.statesCount.splice(0, 0, ...statesCount);\r\n    }\r\n\r\n    async getSheetData(sheetId:number):Promise<SheetData> {\r\n        return await this.entity.getSheet(sheetId);\r\n    }\r\n\r\n    async getArchived(sheetId:number):Promise<SheetData> {\r\n        return await this.entity.getArchive(sheetId);\r\n    }\r\n\r\n    async saveSheet(values:any, valuesWithBox:any):Promise<any> {\r\n        let {sheetTitle} = this.ui;\r\n        let disc = sheetTitle === undefined? this.label : sheetTitle(valuesWithBox, this.x);\r\n        let ret = await this.entity.save(disc, values);\r\n        //let {id, state} = ret;\r\n        //if (id > 0) this.changeStateCount(state, 1);\r\n        return ret;\r\n    }\r\n\r\n    async action(id:number, flow:number, state:string, actionName:string):Promise<any> {\r\n        return await this.entity.action(id, flow, state, actionName);\r\n    }\r\n}\r\n","export * from './cSheet';\r\nexport * from './vSheet';\r\nexport * from './vMain';\r\nexport * from './vNew';\r\nexport * from './vEdit';\r\nexport * from './vList';\r\nexport * from './vSheetAction';\r\nexport * from './vSchema';\r\nexport * from './vArchived';\r\nexport * from './vSheetView';\r\n","import * as React from 'react';\r\nimport { TuidMain, Book, Entity } from '../../entities';\r\nimport { Page } from 'tonva-tools';\r\nimport { VEntity } from '../CVEntity';\r\nimport { CBook, BookUI } from './cBook';\r\n\r\nexport class VBookMain extends VEntity<Book, BookUI, CBook> {\r\n    async open(param?:any):Promise<void> {\r\n        this.openPage(this.view);\r\n    }\r\n\r\n    protected view = () => <Page header={this.label}>\r\n        Book\r\n    </Page>;\r\n}\r\n","import { CEntity, EntityUI } from \"../CVEntity\";\r\nimport { Book } from \"../../entities\";\r\nimport { VBookMain } from \"./vBookMain\";\r\n\r\nexport interface BookUI extends EntityUI {\r\n    CBook?: typeof CBook;\r\n    main: typeof VBookMain,\r\n}\r\n\r\nexport class CBook extends CEntity<Book, BookUI> {\r\n    protected async internalStart() {\r\n        await this.openVPage(this.VBookMain);\r\n    }\r\n\r\n    protected get VBookMain():typeof VBookMain {return VBookMain}\r\n}\r\n","import React from \"react\";\r\nimport { View } from \"tonva-tools\";\r\nimport { List, Muted } from \"tonva-react-form\";\r\nimport { Entity } from \"../../entities\";\r\nimport { CLink } from \"../link\";\r\nimport { CUq } from \"./cUq\";\r\n\r\nexport class VUq extends View<CUq> {\r\n    protected isSysVisible = false;\r\n    protected tuidLinks: CLink[];\r\n    protected mapLinks: CLink[];\r\n    protected sheetLinks: CLink[];\r\n    protected actionLinks: CLink[];\r\n    protected queryLinks: CLink[];\r\n    protected bookLinks: CLink[];\r\n    protected historyLinks: CLink[];\r\n    protected pendingLinks: CLink[];\r\n\r\n    constructor(cUq: CUq) {\r\n        super(cUq);\r\n        let {tuidArr, mapArr, sheetArr, actionArr, queryArr, bookArr, historyArr, pendingArr} = cUq.entities;\r\n        this.tuidLinks = tuidArr.filter(v => this.isVisible(v)).map(v => new CLink(this.controller.cTuidMain(v)));\r\n        this.mapLinks = mapArr.filter(v => this.isVisible(v)).map(v => new CLink(this.controller.cMap(v)));\r\n        this.sheetLinks = sheetArr.filter(v => this.isVisible(v)).map(v => new CLink(this.controller.cSheet(v)));\r\n        this.actionLinks = actionArr.filter(v => this.isVisible(v)).map(v => new CLink(this.controller.cAction(v)));\r\n        this.queryLinks = queryArr.filter(v => this.isVisible(v)).map(v => new CLink(this.controller.cQuery(v)));\r\n        this.bookLinks = bookArr.filter(v => this.isVisible(v)).map(v => new CLink(this.controller.cBook(v)));\r\n        this.historyLinks = historyArr.filter(v => this.isVisible(v)).map(v => new CLink(this.controller.cHistory(v)));\r\n        this.pendingLinks = pendingArr.filter(v => this.isVisible(v)).map(v => new CLink(this.controller.cPending(v)));\r\n    }\r\n    protected isVisible(entity: Entity):boolean {\r\n        return entity.sys !== true || this.isSysVisible;\r\n    }\r\n    render(param?:any) {\r\n        if (this.view === undefined) return <div>??? viewModel 必须定义 view ???</div>\r\n        return React.createElement(this.view);\r\n    }\r\n\r\n    protected view = () => {\r\n        let {res, uq, error} = this.controller;\r\n        let linkItem = {\r\n            render: (cLink:CLink, index:number):JSX.Element => cLink.render(), \r\n            onClick: undefined, \r\n        };\r\n        let lists = [\r\n            {\r\n                header: res.tuid || 'TUID',\r\n                items: this.tuidLinks,\r\n            },\r\n            {\r\n                cn: 'my-2',\r\n                header: res.map || 'MAP',\r\n                items: this.mapLinks,\r\n            },\r\n            {\r\n                cn: 'my-2',\r\n                header: res.sheet || 'SHEET',\r\n                items: this.sheetLinks\r\n            },\r\n            {\r\n                cn: 'my-2',\r\n                header: res.action || 'ACTION',\r\n                items: this.actionLinks\r\n            },\r\n            {\r\n                cn: 'my-2',\r\n                header: res.query || 'QUERY',\r\n                items: this.queryLinks\r\n            },\r\n            {\r\n                cn: 'mt-2 mb-4',\r\n                header: res.book || 'BOOK',\r\n                items: this.bookLinks\r\n            },\r\n            {\r\n                cn: 'mt-2 mb-4',\r\n                header: res.history || 'HISTORY',\r\n                items: this.historyLinks\r\n            },\r\n            {\r\n                cn: 'mt-2 mb-4',\r\n                header: res.pending || 'PENDING',\r\n                items: this.pendingLinks\r\n            }\r\n        ];\r\n        let content;\r\n        if (error !== undefined) {\r\n            content = <div className=\"p-3 text-danger\">连接错误: {error}</div>;\r\n        }\r\n        else {\r\n            content = lists.map(({cn, header, items},index) => items.length > 0 && <List\r\n                key={index}\r\n                className={cn}\r\n                header={<div className=\"px-3 py-1 bg-light\"><Muted>{header}</Muted></div>}\r\n                items={items}\r\n                item={linkItem} />\r\n            );\r\n        }\r\n        return <>\r\n            <div className=\"px-3 py-1 small\">{res.uq || uq}</div>\r\n            {content}\r\n        </>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport _ from 'lodash';\r\nimport { UqApi, Controller, UnitxApi, meInFrame, resLang, nav } from 'tonva-tools';\r\nimport { Entities, TuidMain, Action, Sheet, Query, Book, Map, Entity, Tuid, History, Pending } from '../../entities';\r\nimport { CLink } from '../link';\r\nimport { CBook, BookUI } from '../book';\r\nimport { CSheet, SheetUI } from '../sheet';\r\nimport { ActionUI, CAction } from '../action';\r\nimport { QueryUI, CQuery, CQuerySelect } from '../query';\r\nimport { CTuidMain, TuidUI, CTuid, CTuidInfo, CTuidSelect, CTuidEdit, CTuidList } from '../tuid';\r\nimport { MapUI, CMap } from '../map';\r\nimport { CEntity, EntityUI } from '../CVEntity';\r\nimport { PureJSONContent } from '../form/viewModel';\r\nimport { VUq } from './vUq';\r\nimport { CHistory, HistoryUI } from '../history';\r\nimport { CPending, PendingUI } from '../pending';\r\nimport { CApp } from '../CApp';\r\n\r\nexport type EntityType = 'sheet' | 'action' | 'tuid' | 'query' | 'book' | 'map' | 'history' | 'pending';\r\n\r\nexport interface UqUI {\r\n    CTuidMain?: typeof CTuidMain;\r\n    CTuidEdit?: typeof CTuidEdit;\r\n    CTuidList?: typeof CTuidList;\r\n    CTuidSelect?: typeof CTuidSelect;\r\n    CTuidInfo?: typeof CTuidInfo;\r\n    CQuery?: typeof CQuery;\r\n    CQuerySelect?: typeof CQuerySelect;\r\n    CMap?: typeof CMap;\r\n    CAction?: typeof CAction;\r\n    CSheet?: typeof CSheet;\r\n    CBook?: typeof CBook;\r\n    CHistory?: typeof CHistory;\r\n    CPending?: typeof CPending;\r\n    tuid?: {[name:string]: TuidUI};\r\n    sheet?: {[name:string]: SheetUI};\r\n    action?: {[name:string]: ActionUI};\r\n    map?: {[name:string]: MapUI};\r\n    query?: {[name:string]: QueryUI};\r\n    book?: {[name:string]: BookUI};    \r\n    history?: {[name:string]: HistoryUI};\r\n    pending?: {[name:string]: PendingUI};\r\n    res?: any;\r\n}\r\n\r\nfunction lowerPropertyName(entities: {[name:string]: EntityUI}) {\r\n    if (entities === undefined) return;\r\n    for (let i in entities) entities[i.toLowerCase()] = entities[i];\r\n}\r\n\r\nexport class CUq extends Controller /* implements Uq*/ {\r\n    private ui:any;\r\n    private CTuidMain: typeof CTuidMain;\r\n    private CTuidEdit: typeof CTuidEdit;\r\n    private CTuidList: typeof CTuidList;\r\n    private CTuidSelect: typeof CTuidSelect;\r\n    private CTuidInfo: typeof CTuidInfo;\r\n    private CQuery: typeof CQuery;\r\n    private CQuerySelect: typeof CQuerySelect;\r\n    private CMap: typeof CMap;\r\n    private CAction: typeof CAction;\r\n    private CSheet: typeof CSheet;\r\n    private CBook: typeof CBook;\r\n    private CHistory: typeof CHistory;\r\n    private CPending: typeof CPending;\r\n\r\n    constructor(cApp:CApp, uq:string, appId:number, uqId:number, access:string, ui:UqUI) {\r\n        super(resLang(ui.res));\r\n        this.cApp = cApp;\r\n        this.uq = uq;\r\n        this.id = uqId;\r\n        // 每一个ui都转换成小写的key的版本\r\n        lowerPropertyName(ui.tuid);\r\n        lowerPropertyName(ui.sheet);\r\n        lowerPropertyName(ui.map);\r\n        lowerPropertyName(ui.query);\r\n        lowerPropertyName(ui.action);\r\n        lowerPropertyName(ui.book);\r\n        lowerPropertyName(ui.history);\r\n        lowerPropertyName(ui.pending);\r\n        this.ui = ui;\r\n        this.CTuidMain = ui.CTuidMain || CTuidMain;\r\n        this.CTuidEdit = ui.CTuidEdit || CTuidEdit;\r\n        this.CTuidList = ui.CTuidList || CTuidList;\r\n        this.CTuidSelect = ui.CTuidSelect || CTuidSelect;\r\n        this.CTuidInfo = ui.CTuidInfo || CTuidInfo;\r\n        this.CQuery = ui.CQuery || CQuery;\r\n        this.CQuerySelect = ui.CQuerySelect || CQuerySelect;\r\n        this.CMap = ui.CMap || CMap;\r\n        this.CAction = ui.CAction || CAction;\r\n        this.CSheet = ui.CSheet || CSheet;\r\n        this.CBook = ui.CBook || CBook;\r\n        this.CHistory = ui.CHistory || CHistory;\r\n        this.CPending = ui.CPending || CPending;\r\n\r\n        let token = undefined;\r\n        let uqOwner:string, uqName:string;\r\n        let p = uq.split('/');\r\n        switch (p.length) {\r\n            case 1:\r\n                uqOwner = '$$$';\r\n                uqName = p[0];\r\n                break;\r\n            case 2:\r\n                uqOwner = p[0];\r\n                uqName = p[1];\r\n                break;\r\n            default:\r\n                console.log('uq must be uqOwner/uqName format');\r\n                return;\r\n        }\r\n\r\n        let hash = document.location.hash;\r\n        let baseUrl = hash===undefined || hash===''? \r\n            'debug/':'tv/';\r\n\r\n        let acc: string[];\r\n        if (access === null || access === undefined || access === '*') {\r\n            acc = [];\r\n        }\r\n        else {\r\n            acc = access.split(';').map(v => v.trim()).filter(v => v.length > 0);\r\n        }\r\n        let uqApi:UqApi;\r\n        if (uq === '$$$/$unitx') {\r\n            // 这里假定，点击home link之后，已经设置unit了\r\n            // 调用 UnitxApi会自动搜索绑定 unitx service\r\n            uqApi = new UnitxApi(meInFrame.unit);\r\n        }\r\n        else {\r\n            uqApi = new UqApi(baseUrl, uqOwner, uqName, acc, true);\r\n        }\r\n        this.entities = new Entities(this, uqApi, appId);\r\n    }\r\n\r\n    protected async internalStart() {\r\n    }\r\n\r\n    cApp:CApp;\r\n    uq: string;\r\n    id: number;\r\n    res: any;\r\n    entities:Entities;\r\n    error: string;\r\n    private schemaLoaded:boolean = false;\r\n\r\n    protected async loadEntites() {\r\n        await this.entities.loadAccess();\r\n    }\r\n\r\n    async loadSchema():Promise<string> {\r\n        try {\r\n            if (this.schemaLoaded === true) return;\r\n            await this.loadEntites();\r\n            if (this.id === undefined) this.id = this.entities.uqId;\r\n\r\n            for (let i in this.ui) {\r\n                let g = this.ui[i];\r\n                if (g === undefined) continue;\r\n                let {caption, collection} = g;\r\n                if (collection === undefined) continue;\r\n                for (let j in collection) {\r\n                    if (this.entities[i](j) === undefined) {\r\n                        console.warn(i + ':' + '\\'' + j + '\\' is not uq entity');\r\n                    }\r\n                }\r\n            }\r\n            this.schemaLoaded = true;\r\n            return;\r\n        }\r\n        catch(err) {\r\n            console.error(err);\r\n            return this.error = err;\r\n            //debugger;\r\n            //return err.message;\r\n        }\r\n    }\r\n\r\n    async getQuerySearch(name:string):Promise<Query> {\r\n        let query = this.entities.query(name);\r\n        if (query === undefined) \r\n            alert(`QUERY ${name} 没有定义!`);\r\n        else {\r\n            await query.loadSchema();\r\n            let {returns} = query;\r\n            if (returns.length > 1) {\r\n                alert(`QUERY ${name} 返回多张表, 无法做QuerySearch`);\r\n            }\r\n        }\r\n        return query;\r\n    }\r\n    getTuidPlaceHolder(tuid:Tuid) {\r\n        let {tuidPlaceHolder, entity} = this.res;\r\n        let {name} = tuid;\r\n        let type:string;\r\n        if (entity !== undefined) {\r\n            let en = entity[name];\r\n            if (en !== undefined) {\r\n                type = en.label;\r\n            }\r\n        }\r\n        return (tuidPlaceHolder || 'Select');\r\n    }\r\n    getNone() {\r\n        let {none} = this.res;\r\n        return none || 'none';\r\n    }\r\n    protected isSysVisible = false;\r\n    protected isVisible(entity: Entity):boolean {\r\n        return entity.sys !== true || this.isSysVisible;\r\n    }\r\n\r\n    async navSheet(sheetTypeId:number, sheetId:number) {\r\n        let sheet = this.entities.sheetFromTypeId(sheetTypeId);\r\n        if (sheet === undefined) {\r\n            alert('sheetTypeId ' + sheetTypeId + ' is not exists!');\r\n            return;\r\n        }\r\n        let cSheet = this.cSheet(sheet);\r\n        await cSheet.startSheet(sheetId);\r\n    }\r\n\r\n    sheet(entityName:string) {return this.entities.sheet(entityName);}\r\n    action(entityName:string) {return this.entities.action(entityName);}\r\n    query(entityName:string) {return this.entities.query(entityName);}\r\n    book(entityName:string) {return this.entities.book(entityName);}\r\n    map(entityName:string) {return this.entities.map(entityName);}\r\n    history(entityName:string) {return this.entities.history(entityName);}\r\n    pending(entityName:string) {return this.entities.pending(entityName);}\r\n    tuid(entityName:string) {return this.entities.tuid(entityName)}\r\n    tuidDiv(entityName:string, divName:string) {\r\n        let tuid = this.entities.tuid(entityName);\r\n        if (tuid === undefined) return;\r\n        let {divs} = tuid;\r\n        if (divs === undefined) return;\r\n        return divs[divName];\r\n    }\r\n\r\n    cSheetFromName(entityName:string):CSheet {\r\n        let entity = this.entities.sheet(entityName);\r\n        if (entity !== undefined) return this.cSheet(entity);\r\n    }\r\n    cActionFromName(entityName:string) {\r\n        let entity = this.entities.action(entityName);\r\n        if (entity !== undefined) return this.cAction(entity);\r\n    }\r\n    cQueryFromName(entityName:string) {\r\n        let entity = this.entities.query(entityName);\r\n        if (entity !== undefined) return this.cQuery(entity);\r\n    }\r\n    cBookFromName(entityName:string) {\r\n        let entity = this.entities.book(entityName);\r\n        if (entity !== undefined) return this.cBook(entity);\r\n    }\r\n    cMapFromName(entityName:string) {\r\n        let entity = this.entities.map(entityName);\r\n        if (entity !== undefined) return this.cMap(entity);\r\n    }\r\n    cHistoryFromName(entityName:string) {\r\n        let entity = this.entities.history(entityName);\r\n        if (entity !== undefined) return this.cHistory(entity);\r\n    }\r\n    cPendingFromName(entityName:string) {\r\n        let entity = this.entities.pending(entityName);\r\n        if (entity !== undefined) return this.cPending(entity);\r\n    }\r\n    cTuidMainFromName(entityName:string) {\r\n        let entity = this.entities.tuid(entityName);\r\n        if (entity !== undefined) return this.cTuidMain(entity);\r\n    }\r\n    cTuidEditFromName(entityName:string) {\r\n        let entity = this.entities.tuid(entityName);\r\n        if (entity !== undefined) return this.cTuidEdit(entity);\r\n    }\r\n    cTuidInfoFromName(entityName:string) {\r\n        let entity = this.entities.tuid(entityName);\r\n        if (entity !== undefined) return this.cTuidInfo(entity);\r\n    }\r\n\r\n    cTuidSelectFromName(entityName:string) {\r\n        let entity = this.entities.tuid(entityName);\r\n        if (entity !== undefined) return this.cTuidSelect(entity);\r\n    }\r\n\r\n    cFromName(entityType:EntityType, entityName:string): CEntity<Entity, EntityUI> {\r\n        switch (entityType) {\r\n            case 'sheet':\r\n                let sheet = this.entities.sheet(entityName);\r\n                if (sheet === undefined) return;\r\n                return this.cSheet(sheet);\r\n            case 'action':\r\n                let action = this.entities.action(entityName);\r\n                if (action === undefined) return;\r\n                return this.cAction(action);\r\n            case 'tuid':\r\n                let tuid = this.entities.tuid(entityName);\r\n                if (tuid === undefined) return;\r\n                return this.cTuidMain(tuid);\r\n            case 'query':\r\n                let query = this.entities.query(entityName);\r\n                if (query === undefined) return;\r\n                return this.cQuery(query);\r\n            case 'book':\r\n                let book = this.entities.book(entityName);\r\n                if (book === undefined) return;\r\n                return this.cBook(book);\r\n            case 'map':\r\n                let map = this.entities.map(entityName);\r\n                if (map === undefined) return;\r\n                return this.cMap(map);\r\n            case 'history':\r\n                let history = this.entities.history(entityName);\r\n                if (history === undefined) return;\r\n                return this.cHistory(history);\r\n            case 'pending':\r\n                let pending = this.entities.pending(entityName);\r\n                if (pending === undefined) return;\r\n                return this.cPending(pending);\r\n        }\r\n    }\r\n\r\n    linkFromName(entityType:EntityType, entityName:string) {\r\n        return this.link(this.cFromName(entityType, entityName));\r\n    }\r\n\r\n    private getUI<T extends Entity, UI extends EntityUI>(t:T):{ui:UI, res:any} {\r\n        let ui, res;\r\n        let {name, typeName} = t;\r\n        if (this.ui !== undefined) {\r\n            let tUI = this.ui[typeName];\r\n            if (tUI !== undefined) {\r\n                ui = tUI[name];\r\n            }\r\n        }\r\n        let {entity} = this.res;\r\n        if (entity !== undefined) {\r\n            res = entity[name];\r\n        }\r\n        return {ui: ui || {}, res: res || {} };\r\n    }\r\n\r\n    link(cEntity:CEntity<Entity, EntityUI>) {\r\n        return new CLink(cEntity);\r\n    }\r\n\r\n    get tuidLinks() {\r\n        return this.entities.tuidArr.filter(v => this.isVisible(v)).map(v => this.link(this.cTuidMain(v)));\r\n    }\r\n    cTuidMain(tuid:TuidMain):CTuidMain {\r\n        let {ui, res} = this.getUI<TuidMain, TuidUI>(tuid);\r\n        return new (ui && ui.CTuidMain || this.CTuidMain)(this, tuid, ui, res);\r\n    }\r\n    cTuidEdit(tuid:TuidMain):CTuidEdit {\r\n        let {ui, res} = this.getUI<TuidMain, TuidUI>(tuid);\r\n        return new (ui && ui.CTuidEdit || this.CTuidEdit)(this, tuid, ui, res);\r\n    }\r\n    cTuidList(tuid:TuidMain):CTuidList {\r\n        let {ui, res} = this.getUI<TuidMain, TuidUI>(tuid);\r\n        return new (ui && ui.CTuidList || this.CTuidList)(this, tuid, ui, res);\r\n    }\r\n    cTuidSelect(tuid:Tuid):CTuidSelect {\r\n        let {ui, res} = this.getUI<Tuid, TuidUI>(tuid.owner || tuid);\r\n        return new (ui && ui.CTuidSelect || this.CTuidSelect)(this, tuid, ui, res);\r\n    }\r\n    cTuidInfo(tuid:TuidMain):CTuidInfo {\r\n        let {ui, res} = this.getUI<Tuid, TuidUI>(tuid);\r\n        return new (ui && ui.CTuidInfo || this.CTuidInfo)(this, tuid, ui, res);\r\n    }\r\n\r\n    cSheet(sheet:Sheet/*, sheetUI?:SheetUI, sheetRes?:any*/):CSheet {\r\n        let {ui, res} = this.getUI<Sheet, SheetUI>(sheet);\r\n        //if (sheetUI !== undefined) ui = sheetUI;\r\n        //if (sheetRes !== undefined) res = sheetRes;\r\n        //return new (ui && ui.CSheet || this.CSheet)(this, sheet, sheetUI, sheetRes);\r\n        return new (ui && ui.CSheet || this.CSheet)(this, sheet, ui, res);\r\n    }\r\n    get sheetLinks() { \r\n        return this.entities.sheetArr.filter(v => this.isVisible(v)).map(v => {\r\n            return this.link(this.cSheet(v))\r\n        });\r\n    }\r\n\r\n    cAction(action:Action):CAction {\r\n        let {ui, res} = this.getUI<Action, ActionUI>(action);\r\n        return new (ui && ui.CAction || this.CAction)(this, action, ui, res);\r\n    }\r\n    get actionLinks() { \r\n        return this.entities.actionArr.filter(v => this.isVisible(v)).map(v => {\r\n            return this.link(this.cAction(v))\r\n        });\r\n    }\r\n\r\n    cQuery(query:Query):CQuery {\r\n        let {ui, res} = this.getUI<Query, QueryUI>(query);\r\n        return new (ui && ui.CQuery || this.CQuery)(this, query, ui, res);\r\n    }\r\n    cQuerySelect(queryName:string):CQuerySelect {\r\n        let query = this.entities.query(queryName);\r\n        if (query === undefined) return;\r\n        let {ui, res} = this.getUI<Query, QueryUI>(query);\r\n        return new (ui && ui.CQuerySelect || this.CQuerySelect)(this, query, ui, res);\r\n    }\r\n    get queryLinks() {\r\n        return this.entities.queryArr.filter(v => this.isVisible(v)).map(v => {\r\n            return this.link(this.cQuery(v))\r\n        });\r\n    }\r\n    \r\n    cBook(book:Book):CBook {\r\n        let {ui, res} = this.getUI<Book, BookUI>(book);\r\n        return new (ui && ui.CBook || this.CBook)(this, book, ui, res);\r\n    }\r\n    get bookLinks() { \r\n        return this.entities.bookArr.filter(v => this.isVisible(v)).map(v => {\r\n            return this.link(this.cBook(v))\r\n        });\r\n    }\r\n    \r\n    cHistory(history:History):CHistory {\r\n        let {ui, res} = this.getUI<History, HistoryUI>(history);\r\n        return new (ui && ui.CHistory || this.CHistory)(this, history, ui, res);\r\n    }\r\n    get historyLinks() { \r\n        return this.entities.historyArr.filter(v => this.isVisible(v)).map(v => {\r\n            return this.link(this.cHistory(v))\r\n        });\r\n    }\r\n    \r\n    cPending(pending:Pending):CPending {\r\n        let {ui, res} = this.getUI<Pending, PendingUI>(pending);\r\n        return new (ui && ui.CPending || this.CPending)(this, pending, ui, res);\r\n    }\r\n    get pendingLinks() { \r\n        return this.entities.pendingArr.filter(v => this.isVisible(v)).map(v => {\r\n            return this.link(this.cPending(v))\r\n        });\r\n    }\r\n    \r\n    cMap(map:Map):CMap {\r\n        let {ui, res} = this.getUI<Map, MapUI>(map);\r\n        return new (ui && ui.CMap || this.CMap)(this, map, ui, res);\r\n    }\r\n    get mapLinks() { \r\n        return this.entities.mapArr.filter(v => this.isVisible(v)).map(v => {\r\n            return this.link(this.cMap(v));\r\n        });\r\n    }\r\n\r\n    getTuidContent(tuid:Tuid): React.StatelessComponent<any> {\r\n        let {owner} = tuid;\r\n        if (owner === undefined) {\r\n            let {ui} = this.getUI<Tuid, TuidUI>(tuid);\r\n            return (ui && ui.content) || PureJSONContent;\r\n        }\r\n        else {\r\n            let {ui} = this.getUI<Tuid, TuidUI>(owner);\r\n            return (ui && ui.divs && ui.divs[tuid.name].content) || PureJSONContent;\r\n        }\r\n    }\r\n\r\n    async showTuid(tuid:Tuid, id:number):Promise<void> {\r\n        let {owner} = tuid;\r\n        let c = this.cTuidInfo(owner || (tuid as TuidMain));\r\n        await c.start(id);\r\n    }\r\n\r\n    protected get VUq():typeof VUq {return VUq}\r\n\r\n    render() {\r\n        let v = new (this.VUq)(this);\r\n        return v.render();\r\n    }\r\n}\r\n\r\n","export * from './cUq';\r\nexport * from './vUq';","import * as React from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport className from 'classnames';\r\nimport { List, LMR, FA } from 'tonva-react-form';\r\nimport { Page, nav } from 'tonva-tools';\r\nimport { tv } from '../../tools';\r\nimport { Map } from '../../entities';\r\nimport { VEntity } from '../CVEntity';\r\nimport { CMap, MapItem, MapKey, MapUI } from './cMap';\r\nimport { PureJSONContent } from '../form/viewModel';\r\n\r\nexport class VMapMain extends VEntity<Map, MapUI, CMap> {\r\n    private isFrom: boolean;\r\n\r\n    async open(param?:any) {\r\n        this.isFrom = this.controller.isFrom;\r\n        this.openPage(this.view);\r\n    }\r\n\r\n    itemRender = (item:MapItem, index:number) => {\r\n        return <this.ItemRow item={item} />;\r\n    }\r\n\r\n    private ItemRow = observer(({item}: {item:MapItem}) => {\r\n        let {tuid, box, children, isLeaf, keyIndex, values} = item;\r\n        let keyUI = this.controller.keyUIs[keyIndex];\r\n        let {content:keyContent, valuesContent, none:keyNone} = keyUI;\r\n        let add:any, remove:any;\r\n        if (this.isFrom === false) {\r\n            add = <button className=\"btn btn-link btn-sm\" onClick={()=>this.controller.addClick(item)}>\r\n                <FA name=\"plus\" />\r\n            </button>;\r\n            remove = <button className=\"btn btn-link btn-sm\" onClick={()=>this.controller.removeClick(item)}>\r\n                <FA className=\"text-info\" name=\"trash\" />\r\n            </button>;\r\n        }\r\n        let right:any;\r\n        if (isLeaf === false) {\r\n            if (keyIndex === 0)\r\n                right = add;\r\n            else\r\n                right = <>{remove} &nbsp; {add}</>;\r\n        }\r\n        else if (keyIndex > 0) {\r\n            right = remove;\r\n        }\r\n        let content:any, border:any, valuesView:any;\r\n        if (isLeaf === true) {\r\n            content = undefined; //<div className=\"ml-5\">leaf</div>;\r\n            if (values) {\r\n                //valuesView = null; // 现在不显示values content了\r\n                valuesView = (valuesContent || PureJSONContent)(values, this.x);\r\n            }\r\n        }\r\n        else {\r\n            border = \"border-bottom\";\r\n            let none = keyNone && keyNone(this.x);\r\n            content = <List \r\n                className=\"ml-4\" \r\n                items={children} \r\n                item={{onClick:undefined, render:this.itemRender}}\r\n                none={none} />\r\n        }\r\n        let left = <div className=\"py-1 pr-3\">{tv(box, keyContent, this.x)}</div>;\r\n        return <div className=\"d-flex flex-column\">\r\n            <LMR className={className('px-3', 'py-2', border)}\r\n                left={left}\r\n                right={right}\r\n            >\r\n                <div className=\"py-1\">{valuesView}</div>\r\n            </LMR>\r\n            {content}\r\n        </div>;\r\n    });\r\n\r\n    protected get view() { return () => <Page header={this.label}>\r\n            <List items={this.controller.items} item={{className:'my-2', onClick:undefined, render:this.itemRender}} />\r\n        </Page>\r\n    };\r\n}\r\n","import * as React from 'react';\r\nimport { VEntity } from \"../CVEntity\";\r\nimport { MapUI, CMap } from \"./cMap\";\r\nimport { Map } from \"../../entities\";\r\nimport { Page } from \"tonva-tools\";\r\nimport { VForm } from '../form';\r\n\r\nexport class VInputValues extends VEntity<Map, MapUI, CMap> {\r\n    private vForm: VForm;\r\n\r\n    async open(param?:any) {\r\n        this.vForm = this.createForm(this.onValuesSubmit);\r\n        this.openPageElement(<this.view />);\r\n    }\r\n\r\n    private onValuesSubmit = async () => {\r\n        this.ceasePage();\r\n        let values = this.vForm.getValues();\r\n        this.returnCall(values);\r\n    }\r\n\r\n    private view = () => {\r\n        return <Page>\r\n            {this.vForm.render()}\r\n        </Page>\r\n    }\r\n}\r\n","import React from 'react';\r\nimport _ from 'lodash';\r\nimport { CEntity, EntityUI } from \"../CVEntity\";\r\nimport { Map, Tuid, BoxId, Field, TuidMain, fieldDefaultValue } from \"../../entities\";\r\nimport { VMapMain } from \"./vMain\";\r\nimport { observable } from \"mobx\";\r\nimport { PureJSONContent } from '../form/viewModel';\r\nimport { VInputValues } from './inputValues';\r\n\r\nexport interface MapKey {\r\n    content: (values, x?:any) => JSX.Element;\r\n    valuesContent?: (values, x?:any) => JSX.Element;\r\n    none?: (x:any)=>string;\r\n}\r\n\r\nexport interface MapUI extends EntityUI {\r\n    CMap?: typeof CMap;\r\n    keys?: MapKey[],\r\n}\r\n\r\nexport class MapItem {\r\n    parent: MapItem;\r\n    tuid: Tuid;\r\n    box: BoxId;\r\n    isLeaf: boolean;\r\n    keyIndex:number;\r\n    children: MapItem[] = observable.array([], {deep: true});\r\n    values: any;\r\n    constructor(parent:MapItem, tuid:Tuid, box:BoxId, keyIndex:number) {\r\n        this.parent = parent;\r\n        this.tuid = tuid;\r\n        this.box = box;\r\n        this.keyIndex = keyIndex;\r\n        this.isLeaf = false;\r\n    }\r\n}\r\n\r\nexport class CMap extends CEntity<Map, MapUI> {\r\n    isFrom: boolean;\r\n    items:MapItem[];\r\n    keyFields: Field[];\r\n    keyUIs: MapKey[];\r\n\r\n    protected async internalStart() {\r\n        let {keys, schemaFrom} = this.entity;\r\n        this.isFrom = schemaFrom !== undefined;\r\n        let q = this.entity.queries.all;\r\n        let result = await q.query({});\r\n        //let data = await this.entity.unpackReturns(res);\r\n        let ret = result.ret;\r\n        let keysLen = keys.length;\r\n        this.keyUIs = _.clone(this.ui.keys || []);\r\n        this.keyFields = [];\r\n        let retFields = q.returns[0].fields;\r\n        for (let i=0; i<keysLen; i++) {\r\n            this.keyFields.push(retFields[i]);\r\n            if (i >= this.keyUIs.length) {\r\n                this.keyUIs.push({\r\n                    content: PureJSONContent,\r\n                });\r\n            }\r\n        }\r\n        this.items = observable([]);\r\n        let item:MapItem = undefined;\r\n        for (let r of ret) {\r\n            let newItem = this.addItem(item, r);\r\n            if (newItem !== undefined) {\r\n                this.items.push(newItem);\r\n                item = newItem;\r\n            }\r\n        }\r\n\r\n        await this.openVPage(this.VMapMain);\r\n    }\r\n\r\n    private createItem(parent:MapItem, tuid:Tuid, box:BoxId, keyIndex:number, values?:any) {\r\n        let item = new MapItem(parent, tuid, box, keyIndex);\r\n        if (keyIndex === this.keyFields.length - 1) {\r\n            item.isLeaf = true;\r\n            item.values = values;\r\n        }\r\n        return item;\r\n    }\r\n\r\n    addItem(item:MapItem, row:any):MapItem {\r\n        let ret:MapItem = undefined;\r\n        let keysLen = this.keyFields.length;\r\n        let p = item;\r\n        for (let i=0;i<keysLen;i++) {\r\n            let key = this.keyFields[i];\r\n            let {name} = key;\r\n            let tuid = key._tuid;\r\n            let val:BoxId = row[name];\r\n            if (val === undefined) break;\r\n            let {id} = val;\r\n            if (i === 0) {\r\n                if (id === 0) continue;\r\n                if (p === undefined || p.box.id !== id) {\r\n                    ret = p = this.createItem(undefined, tuid, val, i, row);\r\n                }\r\n                continue;\r\n            }\r\n            let {children, box} = p;\r\n            let len = children.length;\r\n            if (len > 0) {\r\n                let n = children[len-1];\r\n                if (n.box.id === id) {\r\n                    p = n;\r\n                    continue;\r\n                }\r\n            }\r\n            if (id > 0) {\r\n                children.push(p = this.createItem(p, tuid, val, i, row));\r\n            }\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    async searchOnKey(keyField:Field, param):Promise<number> {\r\n        let {_tuid, _ownerField} = keyField;\r\n        let cTuidSelect = this.cUq.cTuidSelect(_tuid);\r\n        let callParam = param;\r\n        if (_ownerField !== undefined) {\r\n            callParam = param[_ownerField.name];\r\n            if (typeof callParam === 'object') {\r\n                callParam = callParam.id;\r\n            }\r\n        }\r\n        let ret = await cTuidSelect.call(callParam);\r\n        return _tuid.getIdFromObj(ret);\r\n    }\r\n\r\n    addClick = async(item:MapItem) => {\r\n        let {keyIndex, children} = item;\r\n        let keysLen = this.keyFields.length;\r\n        let keysLast = keysLen-1;\r\n        let idx = keyIndex + 1;\r\n        if (idx >= keysLen) return;\r\n        let keyField = this.keyFields[idx];\r\n        let kn = keyField.name;\r\n        let tuid = keyField._tuid;\r\n        let searchParam = {} as any;\r\n        let data = {} as any;\r\n        for (let p=item;p!==undefined;p=p.parent) {\r\n            let {keyIndex:ki, box} = p;\r\n            let kn = this.keyFields[ki].name;\r\n            //searchParam[kn] = data['_' + kn] = box.id;\r\n            searchParam[kn] = data[kn] = box.id;\r\n        }\r\n\r\n        let id = await this.searchOnKey(keyField, searchParam);\r\n        if (id === undefined || id <= 0) return;\r\n        tuid.useId(id);\r\n        let idBox = tuid.boxId(id);\r\n        let arr1 = {} as any;\r\n        let values:any = {};\r\n        if (keyIndex+1===keysLast) {\r\n            tuid.useId(id);\r\n            //values[kn] = arr1['_' + kn] = idBox;\r\n            values[kn] = arr1[kn] = idBox;\r\n            if (this.entity.fields.length > 0) {\r\n                let ret = await this.vCall(VInputValues, data);\r\n                for (let i in ret) {\r\n                    //values[i] = arr1['_' + i] = ret[i];\r\n                    values[i] = arr1[i] = ret[i];\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            //values[kn] = data['_' + kn] = idBox;\r\n            values[kn] = data[kn] = idBox;\r\n            for (let i=idx+1;i<keysLast;i++) {\r\n                //data['_' + this.keyFields[i].name] = 0;\r\n                data[this.keyFields[i].name] = 0;\r\n            }\r\n            // 填map的key field 0 值\r\n            //arr1['_' + this.keyFields[keysLast].name] = 0;\r\n            arr1[this.keyFields[keysLast].name] = 0;\r\n            let {fields} = this.entity;\r\n            for (let f of fields) {\r\n                let {name, type, null:nullable} = f;\r\n                if (!(nullable === true)) {\r\n                    //arr1['_' + f.name] = fieldDefaultValue(type);\r\n                    arr1[f.name] = fieldDefaultValue(type);\r\n                }\r\n            }\r\n        }\r\n        data.arr1 = [arr1];\r\n        await this.entity.actions.add.submit(data);\r\n        let rowIndex = children.findIndex(v => v.box.id === id);\r\n        if (rowIndex < 0) {\r\n            children.push(this.createItem(item, tuid, idBox, idx, values));\r\n        }\r\n        else {\r\n            let {fields} = this.entity;\r\n            if (fields !== undefined && fields.length > 0) {\r\n                let row = children[rowIndex];\r\n                children.splice(rowIndex, 1);\r\n                row.values = values;\r\n                /*\r\n                for (let f of fields) {\r\n                    let {name:fn} = f;\r\n                    row.values[fn] = values[fn];\r\n                }*/\r\n                children.splice(rowIndex, 0, row);\r\n            }\r\n        }\r\n        this.removeCeased();\r\n    }\r\n\r\n    removeClick = async(item:MapItem) => {\r\n        let keyField = this.keyFields[item.keyIndex];\r\n        let tuid = keyField._tuid;\r\n        let cTuidMain = this.cUq.cTuidMain(tuid.Main as TuidMain);\r\n        let label = cTuidMain.getLable(tuid);\r\n        let confirmDelete:_.TemplateExecutor = \r\n            this.res.confirmDelete \r\n            || _.template('do you really want to remove ${label}?');\r\n        if (confirm(confirmDelete({label:label})) === false) return;\r\n        let map:Map = this.entity;\r\n        let data = {} as any;\r\n        let arr1 = data['arr1'] = [];\r\n        let v0 = {} as any;\r\n        arr1.push(v0);\r\n        for (let p=item; p!==undefined;p=p.parent) {\r\n            let ki=p.keyIndex;\r\n            //v0['_'+this.keyFields[ki].name] = p.box.id;\r\n            v0[this.keyFields[ki].name] = p.box.id;\r\n        }\r\n        let len = this.keyFields.length;\r\n        for (let i=item.keyIndex+1; i<len; i++) {\r\n            let k = this.keyFields[i];\r\n            //v0['_'+k.name] = -1;\r\n            v0[k.name] = -1;\r\n        }\r\n        await map.actions.del.submit(data);\r\n        let children = item.parent.children;\r\n        let index = children.findIndex(v => v === item);\r\n        if (index >= 0) children.splice(index, 1);\r\n    }\r\n\r\n    protected get VMapMain():typeof VMapMain {return VMapMain}\r\n}\r\n","export * from './cMap';\r\nexport * from './vMain';\r\n","import * as React from 'react';\r\nimport { VPage, Page } from 'tonva-tools';\r\nimport { jsonStringify } from '../../tools';\r\nimport { VForm } from '../form';\r\nimport { VEntity } from '../CVEntity';\r\nimport { CAction, ActionUI } from './cAction';\r\nimport { Action } from '../../entities';\r\n\r\nexport class VActionMain extends VEntity<Action, ActionUI, CAction> {\r\n    protected vForm: VForm;\r\n    protected returns: any;\r\n\r\n    async open(param?:any):Promise<void> {\r\n        this.vForm = this.createForm(this.onSubmit, param);\r\n        this.openPage(this.mainPage);\r\n    }\r\n\r\n    private onSubmit = async () => {\r\n        let values = this.vForm.getValues();\r\n        this.returns = await this.controller.submit(values);\r\n        this.closePage();\r\n        this.openPage(this.resultPage);\r\n    }\r\n\r\n    protected mainPage = () => {\r\n        let {label} = this.controller;\r\n        return <Page header={label}>\r\n            {this.vForm.render('mx-3 my-2')}\r\n        </Page>;\r\n    }\r\n\r\n    protected resultPage = () => {\r\n        let {label} = this.controller;\r\n        return <Page header={label} back=\"close\">\r\n            完成！\r\n            <pre>\r\n                {jsonStringify(this.returns)}\r\n            </pre>\r\n        </Page>;\r\n    }\r\n}\r\n","import { CEntity, EntityUI } from \"../CVEntity\";\r\nimport { Action } from \"../../entities\";\r\nimport { VActionMain } from \"./vActionMain\";\r\n\r\nexport interface ActionUI extends EntityUI {\r\n    CAction?: typeof CAction;\r\n    //main: typeof VActionMain,\r\n}\r\n\r\nexport class CAction extends CEntity<Action, ActionUI> {\r\n    protected async internalStart() {\r\n        await this.openVPage(this.VActionMain);\r\n    }\r\n\r\n    protected get VActionMain():typeof VActionMain {return VActionMain}\r\n\r\n    async submit(values:any) {\r\n        return this.entity.submit(values);\r\n    }\r\n}\r\n","export * from './cAction';\r\nexport * from './vActionMain';\r\n","import * as React from 'react';\r\nimport { TuidMain, Pending, Entity } from '../../entities';\r\nimport { Page } from 'tonva-tools';\r\nimport { VEntity } from '../CVEntity';\r\nimport { CPending, PendingUI } from './cPending';\r\n\r\nexport class VPendingMain extends VEntity<Pending, PendingUI, CPending> {\r\n    async open(param?:any):Promise<void> {\r\n        this.openPage(this.view);\r\n    }\r\n\r\n    protected view = () => <Page header={this.label}>\r\n        pending\r\n    </Page>;\r\n}\r\n","import { CEntity, EntityUI } from \"../CVEntity\";\r\nimport { Pending } from \"../../entities\";\r\nimport { VPendingMain } from \"./vPendingMain\";\r\n\r\nexport interface PendingUI extends EntityUI {\r\n    CPending?: typeof CPending;\r\n    main: typeof VPendingMain,\r\n}\r\n\r\nexport class CPending extends CEntity<Pending, PendingUI> {\r\n    protected async internalStart() {\r\n        await this.openVPage(this.VPendingMain);\r\n    }\r\n\r\n    protected get VPendingMain():typeof VPendingMain {return VPendingMain}\r\n}\r\n","export * from './cPending';\r\nexport * from './vPendingMain';\r\n","import * as React from 'react';\r\nimport { TuidMain, History, Entity } from '../../entities';\r\nimport { Page } from 'tonva-tools';\r\nimport { VEntity } from '../CVEntity';\r\nimport { CHistory, HistoryUI } from './cHistory';\r\n\r\nexport class VHistoryMain extends VEntity<History, HistoryUI, CHistory> {\r\n    async open(param?:any):Promise<void> {\r\n        this.openPage(this.view);\r\n    }\r\n\r\n    protected view = () => <Page header={this.label}>\r\n        History\r\n    </Page>;\r\n}\r\n","import { CEntity, EntityUI } from \"../CVEntity\";\r\nimport { History } from \"../../entities\";\r\nimport { VHistoryMain } from \"./vHistoryMain\";\r\n\r\nexport interface HistoryUI extends EntityUI {\r\n    CHistory?: typeof CHistory;\r\n    main: typeof VHistoryMain,\r\n}\r\n\r\nexport class CHistory extends CEntity<History, HistoryUI> {\r\n    protected async internalStart() {\r\n        await this.openVPage(this.VHistoryMain);\r\n    }\r\n\r\n    protected get VHistoryMain():typeof VHistoryMain {return VHistoryMain}\r\n}\r\n","export * from './cHistory';\r\nexport * from './vHistoryMain';\r\n","import * as React from 'react';\r\nimport { Schema, UiSchema, ItemSchema, UiItem, UiTextItem } from '../schema';\r\nimport { nav } from '../nav';\r\nimport { Page } from '../page';\r\nimport { observer } from 'mobx-react';\r\nimport { observable } from 'mobx';\r\n\r\nexport abstract class ItemEdit {\r\n    protected name: string;\r\n    protected itemSchema: ItemSchema;\r\n    protected uiItem:UiItem;\r\n    protected value: any;\r\n    protected label: string;\r\n\r\n    @observable protected isChanged: boolean = false;\r\n    protected newValue: any;\r\n\r\n    constructor(itemSchema: ItemSchema, uiItem:UiItem, label:string, value: any) {\r\n        this.itemSchema = itemSchema;\r\n        this.uiItem = uiItem\r\n        this.value = value;\r\n        let {name} = itemSchema;\r\n        this.name = name;\r\n        this.label = label;\r\n    }\r\n    async start():Promise<any> {\r\n        return await this.internalStart();\r\n    }\r\n\r\n    protected abstract internalStart():Promise<any>;\r\n\r\n    async end():Promise<any> {\r\n        await this.internalEnd()\r\n    }\r\n\r\n    protected async internalEnd():Promise<void> {nav.pop()}\r\n}\r\n","\r\nimport {setCenterToken} from './uqApi';\r\nimport {WSChannel} from './wsChannel';\r\n\r\nexport const netToken = {\r\n    set(userId:number, token:string) {\r\n        setCenterToken(userId, token);\r\n        WSChannel.setCenterToken(token);\r\n    },\r\n    clear() {\r\n        setCenterToken(0, undefined);\r\n        WSChannel.setCenterToken(undefined);\r\n    }\r\n};\r\n","import {CenterApi} from '../net';\r\nimport {User, decodeUserToken} from '../user';\r\n//import { nav } from '../ui';\r\n\r\nexport class UserApi extends CenterApi {\r\n    async login(params: {user: string, pwd: string, guest: number}): Promise<any> {\r\n        //(params as any).device = nav.local.device.get();\r\n        let ret = await this.get('login', params);\r\n        switch (typeof ret) {\r\n            default: return;\r\n            case 'string': return decodeUserToken(ret);\r\n            case 'object':\r\n                let token = ret.token;\r\n                let user = decodeUserToken(token);\r\n                let {nick, icon} = ret;\r\n                if (nick) user.nick = nick;\r\n                if (icon) user.icon = icon;\r\n                return user;\r\n        }\r\n        // !== undefined) return decodeToken(token);\r\n    }\r\n    async register(params: {\r\n        nick:string, \r\n        user:string, \r\n        pwd:string,\r\n        country:number, \r\n        mobile:number, \r\n        email:string,\r\n        verify:string,\r\n    }): Promise<any>\r\n    {\r\n        return await this.post('register', params);\r\n    }\r\n\r\n    async setVerify(account:string, type:'mobile'|'email') {\r\n        return await this.post('set-verify', {account:account, type:type});\r\n    }\r\n\r\n    async checkVerify(account:string, verify:string) {\r\n        return await this.post('check-verify', {account:account, verify:verify});\r\n    }\r\n\r\n    async isExists(account:string) {\r\n        return await this.get('is-exists', {account:account});\r\n    }\r\n\r\n    async resetPassword(account:string, password:string, verify:string, type:'mobile'|'email') {\r\n        return await this.post('reset-password', {account:account, password, verify, type});\r\n    }\r\n    \r\n    async userSetProp(prop:string, value:any) {\r\n        await this.post('tie/user-set-prop', {prop:prop, value:value});\r\n    }\r\n}\r\n\r\nconst userApi = new UserApi('tv/user/', undefined);\r\n\r\nexport default userApi;\r\n","\r\nconst zero = '00000000000000';\r\nexport function left0(num:number, fix:number) {\r\n    if (num === undefined) return '';\r\n    let r = num.toString();\r\n    let len = fix - r.length;\r\n    if (len <= 0) return r;\r\n    return zero.substr(0, len) + r;\r\n}\r\n","import * as React from 'react';\r\nimport _ from 'lodash';\r\nimport {User} from '../user';\r\nimport {nav} from './nav';\r\nimport {Page} from './page';\r\nimport { isDevelopment } from '../net';\r\n\r\nexport abstract class Controller {\r\n    readonly res: any;\r\n    readonly x: any;\r\n    icon: string|JSX.Element;\r\n    label:string;\r\n    readonly isDev:boolean = isDevelopment;\r\n    get user():User {return nav.user}\r\n    get isLogined():boolean {\r\n        let {user} = nav;\r\n        if (user === undefined) return false;\r\n        return user.id > 0;\r\n    }\r\n    constructor(res:any) {\r\n        this.res = res || {};\r\n        this.x = this.res.x || {};\r\n    }\r\n\r\n    private receiveHandlerId:number;\r\n    private disposer:()=>void;\r\n\r\n    private dispose() {\r\n        // message listener的清理\r\n        nav.unregisterReceiveHandler(this.receiveHandlerId);\r\n        this.onDispose();\r\n    }\r\n\r\n    protected onDispose() {\r\n    }\r\n\r\n    protected async openVPage<C extends Controller>(vp: new (controller: C)=>VPage<C>, param?:any):Promise<void> {\r\n        await (new vp((this as any) as C)).open(param);\r\n    }\r\n\r\n    protected renderView<C extends Controller>(view: new (controller: C)=>View<C>, param?:any) {\r\n        return (new view((this as any) as C)).render(param);\r\n    }\r\n\r\n    async event(type:string, value:any) {\r\n        await this.onEvent(type, value);\r\n    }\r\n\r\n    protected async onEvent(type:string, value:any) {\r\n    }\r\n\r\n    protected msg(text:string) {\r\n        alert(text);\r\n    }\r\n    protected errorPage(header:string, err:any) {\r\n        this.openPage(<Page header=\"App error!\">\r\n            <pre>\r\n                {typeof err === 'string'? err : err.message}\r\n            </pre>\r\n        </Page>);\r\n    }\r\n\r\n    protected onMessage(message:any):Promise<void> {\r\n        return;\r\n    }\r\n\r\n    private onMessageReceive = async (message:any):Promise<void> => {\r\n        await this.onMessage(message);\r\n    }\r\n\r\n    protected async beforeStart():Promise<boolean> {\r\n        /*\r\n        console.log('this.receiveHandlerId = nav.registerReceiveHandler(this.onMessageReceive);');\r\n        this.receiveHandlerId = nav.registerReceiveHandler(this.onMessageReceive);\r\n        console.log('return true');\r\n        */\r\n        return true;\r\n    }\r\n    protected registerReceiveHandler() {\r\n        this.receiveHandlerId = nav.registerReceiveHandler(this.onMessageReceive);\r\n    }\r\n\r\n    protected abstract internalStart(param?:any):Promise<void>;\r\n    async start(param?:any):Promise<void> {\r\n        this.disposer = this.dispose.bind(this);\r\n        this.registerReceiveHandler();\r\n        let ret = await this.beforeStart();\r\n        if (ret === false) return;\r\n        await this.internalStart(param);\r\n    }\r\n\r\n    get isCalling():boolean {return this._resolve_$ !== undefined}\r\n\r\n    private _resolve_$:((value:any) => void)[];\r\n    async call(param?:any):Promise<any> {\r\n        if (this._resolve_$ === undefined) this._resolve_$ = [];\r\n        return new Promise<any> (async (resolve, reject) => {\r\n            this._resolve_$.push(resolve);\r\n            await this.start(param);\r\n        });\r\n    }\r\n\r\n    async vCall<C extends Controller>(vp: new (controller: C)=>VPage<C>, param?:any):Promise<any> {\r\n        if (this._resolve_$ === undefined) this._resolve_$ = [];\r\n        return new Promise<any> (async (resolve, reject) => {\r\n            this._resolve_$.push(resolve);\r\n            await (new vp(this as any)).open(param);\r\n        });\r\n    }\r\n\r\n    returnCall(value:any) {\r\n        if (this._resolve_$ === undefined) return;\r\n        let resolve = this._resolve_$.pop();\r\n        if (resolve === undefined) {\r\n            alert('the Controller call already returned, or not called');\r\n            return;\r\n        }\r\n        resolve(value);\r\n    }\r\n\r\n    openPage(page:JSX.Element) {\r\n        nav.push(page, this.disposer);\r\n        this.disposer = undefined;\r\n    }\r\n\r\n    replacePage(page:JSX.Element) {\r\n        nav.replace(page, this.disposer);\r\n        this.disposer = undefined;\r\n    }\r\n\r\n    backPage() {\r\n        nav.back();\r\n    }\r\n\r\n    closePage(level?:number) {\r\n        nav.pop(level);\r\n    }\r\n\r\n    ceasePage(level?:number) {\r\n        nav.ceaseTop(level);\r\n    }\r\n\r\n    removeCeased() {\r\n        nav.removeCeased();\r\n    }\r\n\r\n    regConfirmClose(confirmClose: ()=>Promise<boolean>) {\r\n        nav.regConfirmClose(confirmClose);\r\n    }\r\n}\r\n\r\n\r\nexport abstract class View<C extends Controller> {\r\n    protected controller: C;\r\n    protected readonly res: any;\r\n    protected readonly x: any;\r\n\r\n    constructor(controller: C) {\r\n        this.controller = controller;\r\n        this.res = controller.res;\r\n        this.x = controller.x;\r\n    }\r\n\r\n    protected get isDev() {return isDevelopment}\r\n\r\n    abstract render(param?:any): JSX.Element;\r\n\r\n    protected renderVm(vm: new (controller: C)=>View<C>, param?:any) {\r\n        return (new vm(this.controller)).render(param);\r\n    }\r\n\r\n    protected async openVPage(vp: new (controller: C)=>VPage<C>, param?:any):Promise<void> {\r\n        await (new vp(this.controller)).open(param);\r\n    }\r\n\r\n    protected async event(type:string, value?:any) {\r\n        /*\r\n        if (this._resolve_$_ !== undefined) {\r\n            await this._resolve_$_({type:type, value:value});\r\n            return;\r\n        }*/\r\n        await this.controller.event(type, value);\r\n    }\r\n\r\n    protected returnCall(value:any) {\r\n        this.controller.returnCall(value);\r\n    }\r\n\r\n    protected openPage(view: React.StatelessComponent<any>, param?:any) {\r\n        this.controller.openPage(React.createElement(view, param));\r\n    }\r\n\r\n    protected replacePage(view: React.StatelessComponent<any>, param?:any) {\r\n        this.controller.replacePage(React.createElement(view, param));\r\n    }\r\n\r\n    protected openPageElement(page: JSX.Element) {\r\n        this.controller.openPage(page);\r\n    }\r\n\r\n    protected replacePageElement(page: JSX.Element) {\r\n        this.controller.replacePage(page);\r\n    }\r\n\r\n    protected backPage() {\r\n        this.controller.backPage();\r\n    }\r\n\r\n    protected closePage(level?:number) {\r\n        this.controller.closePage(level);\r\n    }\r\n\r\n    protected ceasePage(level?:number) {\r\n        this.controller.ceasePage(level);\r\n    }\r\n\r\n    protected removeCeased() {\r\n        this.controller.removeCeased();\r\n    }\r\n\r\n    protected regConfirmClose(confirmClose: ()=>Promise<boolean>) {\r\n        this.controller.regConfirmClose(confirmClose);\r\n    }\r\n}\r\n\r\nexport abstract class VPage<C extends Controller> extends View<C> {\r\n    abstract open(param?:any):Promise<void>;\r\n\r\n    render(param?:any):JSX.Element {return null;}\r\n}\r\n\r\nexport type TypeVPage<C extends Controller> = new (controller: C)=>VPage<C>;\r\n\r\n","export * from './schema';\r\nexport * from './uiSchema';\r\n","import {observable, IObservableArray, computed} from 'mobx';\r\nimport {uid} from './uid';\r\n\r\nexport abstract class PageItems<T> {\r\n    constructor(itemObservable:boolean = false) {\r\n        this._items = observable.array<T>([], {deep:itemObservable});\r\n    }\r\n    private isFirst: boolean = true;\r\n    @observable loading: boolean = false;\r\n    @observable private beforeLoad: boolean = true;\r\n    @observable protected loaded: boolean = false;\r\n    protected _items:IObservableArray<T>;\r\n    @observable allLoaded: boolean = false;\r\n    @computed get items():IObservableArray<T> {\r\n        if (this.beforeLoad === true) return null;\r\n        if (this.loaded === false) return undefined;\r\n        return this._items;\r\n    }\r\n\r\n    @observable topDiv:string;\r\n    @observable bottomDiv:string;\r\n    scrollToTop() {\r\n        this.topDiv = '$$'+uid();\r\n    }\r\n    scrollToBottom() {\r\n        this.bottomDiv = '$$'+uid();\r\n    }\r\n\r\n    protected param: any;\r\n    protected firstSize = 100;\r\n    protected pageStart = undefined;\r\n    protected pageSize = 30;\r\n    protected appendPosition:'head'|'tail' = 'tail';\r\n\r\n    protected abstract async load(param:any, pageStart:any, pageSize:number):Promise<T[]>;\r\n    protected abstract setPageStart(item:T);\r\n\r\n    reset() {\r\n        this.isFirst = true;\r\n        this.beforeLoad = true;\r\n        this.loaded = false;\r\n        this.param = undefined;\r\n        this.allLoaded = false;\r\n        this._items.clear();\r\n        this.setPageStart(undefined);\r\n    }\r\n\r\n    append(item:T) {\r\n        if (this.appendPosition === 'tail')\r\n            this._items.unshift(item);\r\n        else\r\n            this._items.push(item);\r\n    }\r\n\r\n    async first(param:any):Promise<void> {\r\n        this.reset();\r\n        this.beforeLoad = false;\r\n        this.param = param;\r\n        await this.more();        \r\n    }\r\n\r\n    async more():Promise<void> {\r\n        if (this.allLoaded === true) return;\r\n        if (this.loading === true) return;\r\n        this.loading = true;\r\n        let pageSize = this.pageSize + 1;\r\n        if (this.isFirst === true) {\r\n            if (this.firstSize > this.pageSize) pageSize = this.firstSize+1;\r\n        }\r\n        let ret = await this.load(\r\n                this.param, \r\n                this.pageStart,\r\n                pageSize);\r\n        this.loading = false;\r\n        this.loaded = true;\r\n        let len = ret.length;\r\n        if (this.isFirst===true && len>this.firstSize ||\r\n            this.isFirst===false && len>this.pageSize)\r\n        {\r\n            this.allLoaded = false;\r\n            --len;\r\n            ret.splice(len, 1);\r\n        }\r\n        else {\r\n            this.allLoaded = true;\r\n        }\r\n        if (len === 0) {\r\n            this._items.clear();\r\n            return;\r\n        }\r\n        this.setPageStart(ret[len-1]);\r\n        if (this.appendPosition === 'tail')\r\n            this._items.push(...ret);\r\n        else\r\n            this._items.unshift(...ret.reverse());\r\n        this.isFirst = false;\r\n    }\r\n}\r\n","import {observable, computed} from 'mobx';\r\n\r\nexport interface Id {\r\n    id: number;\r\n}\r\n\r\nexport abstract class CacheIds<T extends Id> {\r\n    constructor(maxCount:number = 100) {\r\n        this.maxCount = maxCount;\r\n    }\r\n    private maxCount:number;\r\n    private arr:T[] = [];\r\n    @observable dict = new Map<number, T>();\r\n\r\n    loadIds(ids:number[]) {\r\n        let arr:number[] = [];\r\n        for (let id of ids) {\r\n            if (id === null) continue;\r\n            let item = this.dict.get(id);\r\n            if (item === undefined) {\r\n                arr.push(id);\r\n                item = {id:id} as T;\r\n                this.dict.set(id, item);\r\n            }\r\n        }                \r\n        this.loadId(arr);\r\n    }\r\n\r\n    get(id:number):T {\r\n        if (id === undefined || id === null) return null;\r\n        let item = this.dict.get(id);\r\n        if (item === undefined) {\r\n            this.dict.set(id, {id:id} as T);\r\n            this.loadId([id]);\r\n            item = this.dict.get(id);\r\n        }\r\n        return item;\r\n    }\r\n    private setItem(id:number, item:T) {\r\n        if (item === undefined) {\r\n            this.dict.set(id, null);\r\n            this.arr.push({id: id} as T);\r\n        }\r\n        else {\r\n            this.dict.set(id, item);\r\n            this.arr.push(item);\r\n        }\r\n        if (this.arr.length > this.maxCount) {\r\n            item = this.arr.shift();\r\n            this.dict.delete(item.id);\r\n        }\r\n    }\r\n    private async loadId(ids:number[]) {\r\n        let items = await this._loadIds(ids);\r\n        if (items === undefined) {\r\n            for (let id of ids) {\r\n                if (id === null) continue;\r\n                let item = await this._loadId(id);\r\n                this.setItem(id, item);\r\n            }\r\n        }\r\n        else {\r\n            for (let id of ids) {\r\n                let item = items.find(v => v.id === id);\r\n                this.setItem(id, item);\r\n            }\r\n        }\r\n    }\r\n\r\n    protected abstract async _loadIds(ids:number[]):Promise<T[]>;\r\n    protected abstract async _loadId(id:number):Promise<T>;\r\n}\r\n","import * as React from 'react';\r\nimport {observer} from 'mobx-react';\r\nimport {FormView, FormProps} from './formView';\r\n\r\nexport function tonvaDebug() {\r\n    let a = 0;\r\n}\r\n\r\nexport interface TonvaFormProps extends FormProps {\r\n    className?: string;\r\n    initValues?: any;\r\n}\r\n\r\n@observer \r\nexport class TonvaForm extends React.Component<TonvaFormProps, {}> {\r\n    formView: FormView;\r\n    constructor(props:TonvaFormProps) {\r\n        super(props);\r\n        this.formView = new FormView(this.props);\r\n    }\r\n    componentWillMount() {\r\n        this.formView.setInitValues(this.props.initValues);\r\n    }\r\n    debug() {\r\n        let s = null;\r\n    }\r\n    render() {\r\n        let {className, children, initValues} = this.props;\r\n        return <div className={className}>\r\n            {\r\n                children === undefined? \r\n                    this.formView.render() : \r\n                    <form onSubmit={this.formView.onSubmit}>{children}</form>\r\n            }\r\n        </div>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport classNames from 'classnames';\r\n\r\nexport interface Action {\r\n    icon?: string;\r\n    caption?: string;\r\n    action?: () => void;\r\n}\r\n\r\nexport interface DropdownActionsProps {\r\n    icon?: string;\r\n    actions: Action[];\r\n    isRight?: boolean;\r\n}\r\n\r\nexport interface DropdownActionsState {\r\n    dropdownOpen: boolean;\r\n}\r\n\r\nexport class DropdownActions extends React.Component<DropdownActionsProps, DropdownActionsState> {\r\n    private menu: HTMLDivElement;\r\n    private button: HTMLElement;\r\n    constructor(props:DropdownActionsProps) {\r\n        super(props);\r\n        this.state = {\r\n            dropdownOpen: false\r\n        };\r\n    }\r\n\r\n    componentWillMount() {\r\n        document.addEventListener('click', this.handleDocumentClick);\r\n        document.addEventListener('touchstart', this.handleDocumentClick);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        document.removeEventListener('click', this.handleDocumentClick);\r\n        document.removeEventListener('touchstart', this.handleDocumentClick);\r\n    }\r\n\r\n    private handleDocumentClick = (evt:any) => {\r\n        if (this.state.dropdownOpen === false) return;\r\n        if (this.button && this.button.contains(evt.target)) return;\r\n        if (!this.menu) return;\r\n        //if (!this.menu.contains(evt.target)) \r\n        this.toggle();\r\n    }\r\n\r\n    private toggle = () => {\r\n        this.setState({\r\n            dropdownOpen: !this.state.dropdownOpen\r\n        });\r\n    }\r\n\r\n    render() {\r\n        let {icon, actions, isRight} = this.props;\r\n        if (isRight === undefined) isRight = true;\r\n        let hasIcon = actions.some(v => v.icon!==undefined);\r\n        let {dropdownOpen} = this.state;\r\n        //isOpen={this.state.dropdownOpen} toggle={this.toggle}\r\n        return <div className=\"dropdown\">\r\n            <button ref={v=>this.button=v} className=\"cursor-pointer dropdown-toggle btn btn-sm\"\r\n                data-toggle=\"dropdown\"\r\n                aria-expanded={dropdownOpen}\r\n                onClick={this.toggle}>\r\n                <i className={classNames('fa', 'fa-'+(icon||'ellipsis-v'))} />\r\n            </button>\r\n            <div ref={v => this.menu=v} className={classNames({\"dropdown-menu\":true, \"dropdown-menu-right\":isRight, \"show\":dropdownOpen})}>\r\n                {\r\n                    actions.map((v,index) => {\r\n                        let {icon, caption, action} = v;\r\n                        if (icon === undefined && caption === undefined) \r\n                            return <div className=\"dropdown-divider\" />;\r\n                        let i:any;\r\n                        if (hasIcon === true) {\r\n                            if (icon !== undefined) icon = 'fa-' + icon;\r\n                            i = <><i className={classNames('fa', icon, 'fa-fw')} aria-hidden={true}></i>&nbsp; </>;\r\n                        }\r\n                        if (action === undefined) \r\n                            return <h6 className=\"dropdown-header\">{i} {caption}</h6>;\r\n                        return <a className=\"dropdown-item\" key={index} href=\"#\" onClick={(evt:React.MouseEvent<HTMLAnchorElement>)=>{ evt.preventDefault();action()}}>{i} {caption}</a>\r\n                    })\r\n                }\r\n            </div>\r\n        </div>\r\n    }\r\n}\r\n\r\n/*\r\nexport class DropdownActions extends React.Component<DropdownActionsProps, DropdownActionsState> {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            dropdownOpen: false\r\n        };\r\n    }\r\n    private toggle = () => {\r\n        this.setState({\r\n            dropdownOpen: !this.state.dropdownOpen\r\n        });\r\n    }\r\n    render() {\r\n        let {icon, actions, isRight} = this.props;\r\n        if (isRight === undefined) isRight = true;\r\n        let hasIcon = actions.some(v => v.icon!==undefined);\r\n        return <UncontrolledButtonDropdown isOpen={this.state.dropdownOpen} toggle={this.toggle}>\r\n            <DropdownToggle caret={true} size=\"sm\" className=\"cursor-pointer\">\r\n                <i className={classNames('fa', 'fa-'+(icon||'ellipsis-v'))} />\r\n            </DropdownToggle>\r\n            <DropdownMenu right={isRight}>\r\n                {actions.map((v,index) => {\r\n                    let {icon, caption, action} = v;\r\n                    if (icon === undefined && caption === undefined) \r\n                        return <div className=\"dropdown-divider\" />;\r\n                    let i;\r\n                    if (hasIcon === true) {\r\n                        if (icon !== undefined) icon = 'fa-' + icon;\r\n                        i = <><i className={classNames('fa', icon, 'fa-fw')} aria-hidden={true}></i>&nbsp; </>;\r\n                    }\r\n                    if (action === undefined) \r\n                        return <h6 className=\"dropdown-header\">{i} {caption}</h6>;\r\n                    return <DropdownItem key={index} onClick={action}>{i} {caption}</DropdownItem>\r\n                })}\r\n            </DropdownMenu>\r\n        </UncontrolledButtonDropdown>\r\n    }\r\n}\r\n*/","import * as React from 'react';\r\n\r\nexport interface EasyDateProps {\r\n    date: Date | string;\r\n}\r\n\r\nexport class EasyDate extends React.Component<EasyDateProps> {\r\n    render() {\r\n        let {date} = this.props;\r\n        if (!date) return null;\r\n        let d = (typeof date === 'string')? new Date(Date.parse(date)) : date;\r\n        let now = new Date();\r\n        let tick = now.getTime() - d.getTime();\r\n        let nDate=now.getDate();\r\n        let _date=d.getDate(), hour=d.getHours(), minute=d.getMinutes(), month=d.getMonth()+1;\r\n        let hm = hour + ((minute<10?':0':':') + minute);\r\n        if (tick < -24*3600*1000) return d.getFullYear()+'年'+month+'月'+_date+'日 ' + hm;\r\n        if (tick < 24*3600*1000) {\r\n            return _date!==nDate? \r\n                (tick < 0? '明天 ' : '昨天 ') + hm \r\n                : hm;\r\n        }\r\n        if (tick < 365*24*3600*1000) {\r\n            return month+'月'+_date+'日 ';\r\n        }\r\n        return d.getFullYear()+'年'+month+'月'+_date+'日';\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport classNames from 'classnames';\r\nimport { Image } from 'tonva-tools';\r\n\r\nexport interface MediaProps {\r\n    icon: string;\r\n    main: string|JSX.Element;\r\n    discription?: string | JSX.Element;\r\n    px?: number;\r\n    py?: number;\r\n}\r\n\r\nexport class Media extends React.Component<MediaProps> {\r\n    render() {\r\n        let {icon, main, discription, px, py} = this.props;\r\n        let disp:any;\r\n        if (typeof discription === 'string')\r\n            disp = <div>{discription}</div>;\r\n        else\r\n            disp = discription;\r\n        let cn = classNames(\r\n            'media', \r\n            px===undefined? 'px-0':'px-'+px, \r\n            py===undefined? 'py-2':'py-'+py);\r\n        return <div className={cn}>\r\n            <Image className=\"mr-3 w-4c h-4c\" src={icon} />\r\n            <div className=\"media-body\">\r\n                <h5 className=\"mt-0\">{main}</h5>\r\n                {disp}\r\n            </div>\r\n        </div>\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport classNames from 'classnames';\r\nimport { observable } from 'mobx';\r\n\r\nexport interface SearchBoxProps {\r\n    className?: string;\r\n    label?: string;\r\n    initKey?: string;\r\n    placeholder?: string;\r\n    buttonText?: string;\r\n    maxLength?: number;\r\n    size?: 'sm' | 'md' | 'lg';\r\n    inputClassName?: string;\r\n    onSearch: (key:string)=>Promise<void>;\r\n    onFocus?: ()=>void;\r\n    allowEmptySearch?: boolean;\r\n}\r\n\r\n/*\r\nexport interface SearchBoxState {\r\n    disabled: boolean;\r\n}*/\r\n\r\nexport class SearchBox extends React.Component<SearchBoxProps> { //}, SearchBoxState> {\r\n    private input: HTMLInputElement;\r\n    private key: string = null;\r\n    @observable private disabled: boolean;\r\n\r\n    private onChange = (evt: React.ChangeEvent<any>) => {\r\n        this.key = evt.target.value;\r\n        if (this.key !== undefined) {\r\n            this.key = this.key.trim();\r\n            if (this.key === '') this.key = undefined;\r\n        }\r\n        if (this.props.allowEmptySearch !== true) {\r\n            this.disabled = !this.key;\r\n        }\r\n    }\r\n    private onSubmit = async (evt: React.FormEvent<any>) => {\r\n        evt.preventDefault();\r\n        if (this.key === null) this.key = this.props.initKey || '';\r\n        if (this.props.allowEmptySearch !== true) {\r\n            if (!this.key) return;\r\n            if (this.input) this.input.disabled = true;\r\n        }\r\n        await this.props.onSearch(this.key);\r\n        if (this.input) this.input.disabled = false;\r\n    }\r\n    clear() {\r\n        if (this.input) this.input.value = '';\r\n    }\r\n    render() {\r\n        let {className, inputClassName, onFocus,\r\n            label, placeholder, buttonText, maxLength, size} = this.props;\r\n        let inputSize:string;\r\n        switch (size) {\r\n            default:\r\n            case 'sm': inputSize = 'input-group-sm'; break;\r\n            case 'md': inputSize = 'input-group-md'; break;\r\n            case 'lg': inputSize = 'input-group-lg'; break;\r\n        }\r\n        let lab:any;\r\n        if (label !== undefined) lab = <label className=\"input-group-addon\">{label}</label>;\r\n        return <form className={className} onSubmit={this.onSubmit} >\r\n            <div className={classNames(\"input-group\", inputSize)}>\r\n                {lab}\r\n                <input ref={v=>this.input=v} onChange={this.onChange}\r\n                    type=\"text\"\r\n                    name=\"key\"\r\n                    onFocus={onFocus}\r\n                    className={classNames('form-control', inputClassName || 'border-primary')}\r\n                    placeholder={placeholder}\r\n                    defaultValue={this.props.initKey}\r\n                    maxLength={maxLength} />\r\n                <div className=\"input-group-append\">\r\n                    <button className=\"btn btn-primary\"\r\n                        type=\"submit\"\r\n                        disabled={this.disabled}>\r\n                        <i className='fa fa-search' />\r\n                        <i className=\"fa\"/>\r\n                        {buttonText}\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </form>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport _ from 'lodash';\r\nimport className from 'classnames';\r\nimport {FormProps, FormRow, SubmitResult, FormView, TonvaForm} from '../form';\r\n\r\nexport interface Step {\r\n    formRows: FormRow[];\r\n    next: undefined | string | ((values:any) => string);    // 返回下一步的step名称或者直接就是名称\r\n    ex?: any;                                   // 每一步额外的参数\r\n}\r\n\r\nexport interface MultiStepProps {\r\n    className?: string;\r\n    header?: (step:Step, num:number) => JSX.Element; //name: step name, num: 第几步，1开始\r\n    footer?: (step:Step, num:number) => JSX.Element; //name: step name, num: 第几步，1开始\r\n    steps: {[name:string]: Step};\r\n    first: string;         // 第一步的名字\r\n    onSubmit: (values:any) => Promise<SubmitResult|undefined>;\r\n    submitButton?: string|JSX.Element;\r\n}\r\n\r\nexport interface StepView {\r\n    stepName: string;\r\n    step: Step;\r\n    props: FormProps;\r\n    //view: JSX.Element;\r\n}\r\nexport interface MultiStepState {\r\n    //num: number;\r\n    //step: Step;\r\n    //formView: FormView;\r\n    topView: StepView;\r\n    stepViews: StepView[];\r\n}\r\n\r\nexport class MultiStep extends React.Component<MultiStepProps, MultiStepState> {\r\n    private values: any = {};\r\n    private stepViews: StepView[] = [];\r\n    private topView: StepView;\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            topView: undefined,\r\n            stepViews: [],\r\n        }\r\n        this.onPrev = this.onPrev.bind(this);\r\n        this.onNext = this.onNext.bind(this);\r\n    }\r\n    \r\n    private setStep(stepName: string) {\r\n        let step = this.props.steps[stepName];\r\n        if (step === undefined) return; //throw new Error('Unknown step name: ' + stepName);\r\n        if (this.topView !== undefined) this.stepViews.push(this.topView);\r\n        let otherButton, onOther;\r\n        if (this.stepViews.length > 0) {\r\n            otherButton = <ButtonConten prefix=\"undo\" text=\"上一步\" />;\r\n            onOther = this.onPrev;\r\n        }\r\n        let {header, footer} = this.props;\r\n        let btnContent = step.next === undefined?\r\n            {prefix: 'cloud-upload', text: this.props.submitButton || '提交'} :\r\n            {suffix: 'arrow-right', text: '下一步'}\r\n        let formProps = {\r\n            formRows: step.formRows,\r\n            submitButton: <ButtonConten {...btnContent} />,\r\n            onSubmit: this.onNext,\r\n            otherButton: otherButton,\r\n            onOther: onOther,\r\n        };\r\n        let num = this.stepViews.length + 1;\r\n        this.topView = {\r\n            stepName: stepName,\r\n            step: step,\r\n            props: formProps,\r\n        };\r\n        this.setState({\r\n            topView: this.topView,\r\n            stepViews: this.stepViews\r\n        });\r\n    }\r\n    componentWillMount() {\r\n        this.setStep(this.props.first);\r\n    }\r\n    private onPrev(values:any) {\r\n        _.assign(this.values, values);\r\n        this.topView = this.stepViews.pop();\r\n        this.setState({\r\n            topView: this.topView,\r\n            stepViews: this.stepViews\r\n        });\r\n    }\r\n    private onNext(values:any): Promise<SubmitResult|undefined> {\r\n        _.assign(this.values, values);\r\n        //let {num, step} = this.state;\r\n        let {next} = this.topView.step;\r\n        if (next === undefined) {\r\n            return this.props.onSubmit(this.values)\r\n        }\r\n        let nextStepName:string;\r\n        if (typeof next === 'string') {\r\n            nextStepName = next;\r\n        }\r\n        else {\r\n            nextStepName = next(this.values);\r\n        }\r\n        this.setStep(nextStepName);\r\n    }\r\n    render() {\r\n        let {className, header, footer} = this.props;\r\n        let {topView, stepViews} = this.state;\r\n        let {stepName, step} = topView;\r\n        let hidden = {visibility: 'hidden'};\r\n        let num = stepViews.length + 1;\r\n        return <div className={className}>\r\n            <div>\r\n                {header && header(step, num)}\r\n                <TonvaForm key={stepName} initValues={this.values} {...topView.props} />\r\n                {footer && footer(step, num)}\r\n            </div>\r\n        </div>;\r\n    }\r\n}\r\n\r\nconst ButtonConten = (props:{prefix?:string, text?:string|JSX.Element, suffix?:string}) => {\r\n    let {prefix, text, suffix} = props;\r\n    let pIcon, sIcon;\r\n    if (prefix !== undefined) pIcon = <i className={className('fa', 'fa-' + prefix)} />;\r\n    if (suffix !== undefined) sIcon = <i className={className('fa', 'fa-' + suffix)} />;\r\n    return <React.Fragment>{pIcon} {props.text} {sIcon}</React.Fragment>;\r\n}\r\n    \r\n","import _ from 'lodash';\r\nimport { Context } from '../context';\r\nimport { FormRes } from '../formRes';\r\n\r\nexport abstract class Rule {\r\n    abstract check(defy:string[], value:any):void;\r\n}\r\n\r\nexport type ContextRule = (context:Context)=>{[target:string]:string[]|string} | string[] | string;\r\nexport type FieldRule = (value:any) => string[] | string;\r\n\r\nexport class RuleCustom extends Rule {\r\n    private func: FieldRule;\r\n    constructor(func: FieldRule) {\r\n        super();\r\n        this.func = func;\r\n    }\r\n    check(defy:string[], value:any) {\r\n        let ret = this.func(value);\r\n        if (ret === undefined) return;\r\n        switch (typeof ret) {\r\n            case 'undefined': return;\r\n            case 'string': defy.push(ret as string); return;\r\n            default: defy.push(...ret); return;\r\n        }        \r\n    }\r\n}\r\n\r\nexport abstract class RulePredefined extends Rule {\r\n    protected res: FormRes;\r\n    constructor(res: FormRes) {\r\n        super();\r\n        this.res = res;\r\n    }\r\n}\r\n\r\nexport class RuleRequired extends RulePredefined {\r\n    check(defy:string[], value:any) {\r\n        switch (typeof value) {\r\n            default:\r\n            case 'boolean': return;\r\n            case 'object':\r\n                if (value !== null) return;\r\n                break;\r\n            case 'string':\r\n                if ((value as string).trim().length > 0) return;\r\n                break;\r\n            case 'number':\r\n                if ((value as number) !== NaN) return;\r\n                break;\r\n            case 'undefined':\r\n                break;\r\n        }\r\n        defy.push(this.res.required);\r\n    }\r\n}\r\n\r\nexport class RuleNum extends RulePredefined {\r\n    private minMsg: _.TemplateExecutor;\r\n    private maxMsg: _.TemplateExecutor;\r\n    protected min: number;\r\n    protected max: number\r\n    constructor(res: FormRes, min?: number, max?: number) {\r\n        super(res);\r\n        this.minMsg = _.template(res.min);\r\n        this.maxMsg = _.template(res.max);\r\n        this.min = min;\r\n        this.max = max;\r\n    }\r\n    check(defy:string[], value:any) {\r\n        if (value === undefined || value === null) return;\r\n        let n = Number(value);\r\n        if (n === NaN) {\r\n            defy.push(this.res.number);\r\n        }\r\n        else {\r\n            this.checkMore(defy, n);\r\n        }\r\n    }\r\n\r\n    protected checkMore(defy:string[], value: number) {\r\n        if (this.min !== undefined && Number(value) < this.min) {\r\n            defy.push(this.minMsg({min:this.min}));\r\n        }\r\n        if (this.max !== undefined && Number(value) > this.max) {\r\n            defy.push(this.maxMsg({max:this.max}));\r\n        }\r\n    }\r\n}\r\n\r\nexport class RuleInt extends RuleNum {\r\n    protected checkMore(defy:string[], n: number) {\r\n        super.checkMore(defy, n);\r\n        if (Number.isInteger(n) === false) {\r\n            defy.push(this.res.integer);\r\n        }\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport classNames from 'classnames';\r\nimport { UiItem, ChangingHandler, ChangedHandler } from '../../schema';\r\nimport { FieldProps } from '../field';\r\nimport { Context } from '../context';\r\nimport { ItemSchema } from '../../schema';\r\nimport { Rule, RuleRequired, RuleCustom, FieldRule } from '../rules';\r\nimport { computed, observable, reaction } from 'mobx';\r\nimport { observer } from 'mobx-react';\r\n\r\nexport abstract class Widget {\r\n    protected name: string;\r\n    protected context: Context;\r\n    protected fieldProps:FieldProps;\r\n    protected children: React.ReactNode;\r\n    protected itemSchema: ItemSchema;\r\n    protected ui: UiItem;\r\n    protected defaultValue: any;\r\n    protected value: any;\r\n    protected rules: Rule[];\r\n    @observable protected errors: string[] = [];\r\n    @observable protected contextErrors: string[] = [];\r\n    @computed protected get hasError():boolean {return (this.errors.length + this.contextErrors.length)>0}\r\n    protected readOnly:boolean;\r\n    protected disabled:boolean;\r\n    @observable visible:boolean;\r\n\r\n    constructor(context:Context, itemSchema:ItemSchema, fieldProps:FieldProps, children: React.ReactNode) {\r\n        this.context = context;\r\n        let {name} = itemSchema;\r\n        this.name = name;\r\n        this.itemSchema = itemSchema;\r\n        this.fieldProps = fieldProps;\r\n        this.children = children;\r\n        this.ui = context.getUiItem(name);\r\n        if (this.ui === undefined) {\r\n            this.readOnly = false;\r\n            this.disabled = false;\r\n            this.visible = true;\r\n        }\r\n        else {\r\n            let {readOnly, disabled, visible} = this.ui;\r\n            this.readOnly = (readOnly === true);\r\n            this.disabled = (disabled === true);\r\n            this.visible = !(visible === false);            \r\n        }\r\n        this.value = this.defaultValue =  context.getValue(name); //defaultValue;\r\n        this.init();\r\n    }\r\n\r\n    protected init() {\r\n        this.rules = [];\r\n        if (this.itemSchema.required === true) {\r\n            this.rules.push(new RuleRequired(this.context.form.res));\r\n        }\r\n        this.buildRules();\r\n        if (this.ui === undefined) return;\r\n        let {rules} = this.ui;\r\n        if (rules === undefined) return;\r\n        if (Array.isArray(rules) === false) {\r\n            this.rules.push(new RuleCustom(rules as FieldRule));\r\n            return;\r\n        }\r\n        for (let rule of rules as FieldRule[]) {\r\n            this.rules.push(new RuleCustom(rule));\r\n        }\r\n    }\r\n\r\n    protected buildRules() {\r\n    }\r\n\r\n    checkRules() {\r\n        let defy:string[] = [];\r\n        for (let r of this.rules) r.check(defy, this.value);\r\n        if (defy.length === 0) {\r\n            this.context.removeErrorWidget(this);\r\n        }\r\n        else {\r\n            this.context.addErrorWidget(this);\r\n            this.errors.push(...defy);\r\n        }\r\n    }\r\n\r\n    @computed get isOk() {\r\n        return this.errors.length ===0;\r\n    }\r\n\r\n    setError(err:string | string[]) {\r\n        if (err === undefined) return;\r\n        if (typeof err === 'string') this.errors.push(err);\r\n        else this.errors.push(...err);\r\n    }\r\n\r\n    setContextError(err:string | string[]) {\r\n        if (err === undefined) return;\r\n        if (typeof err === 'string') this.contextErrors.push(err);\r\n        else this.contextErrors.push(...err);\r\n    }\r\n\r\n    clearError() {\r\n        this.errors.splice(0);\r\n    }\r\n\r\n    clearContextError() {\r\n        this.contextErrors.splice(0);\r\n    }\r\n\r\n    protected parse(value:any):any {return value}\r\n\r\n    protected setElementValue(value:any) {}\r\n    protected setDataValue(value:any) {\r\n        if (this.isChanging === true) return;\r\n        this.context.initData[this.name] = this.value = this.parse(value);\r\n    }\r\n\r\n    setValue(value:any) {\r\n        if (this.isChanging === true) return;\r\n        //this.setDataValue(value);\r\n        //this.setElementValue(value);\r\n        this.changeValue(value, false);\r\n    }\r\n\r\n    getValue() {\r\n        return this.context.getValue(this.name);\r\n    }\r\n\r\n    getReadOnly():boolean {return this.readOnly}\r\n    getDisabled():boolean {return this.disabled}\r\n    getVisible():boolean {return this.visible}\r\n    setReadOnly(value:boolean) {this.readOnly = value}\r\n    setDisabled(value:boolean) {this.disabled = value}\r\n    setVisible(value:boolean) {this.visible = value}\r\n\r\n    private isChanging: boolean;\r\n    protected onInputChange = (evt: React.ChangeEvent<any>) => {\r\n        this.changeValue(evt.target.value, true);\r\n    }\r\n\r\n    protected changeValue(newValue: any, fromElement: boolean) {\r\n        let prev = this.value;\r\n        let onChanging: ChangingHandler;\r\n        let onChanged: ChangedHandler;\r\n        if (this.ui !== undefined) {\r\n            onChanging = this.ui.onChanging;\r\n            onChanged = this.ui.onChanged;\r\n        }\r\n        let allowChange = true;\r\n        if (onChanging !== undefined) {\r\n            this.isChanging = true;\r\n            allowChange = onChanging(this.context, this.value, prev);\r\n            this.isChanging = false;\r\n        }\r\n        if (allowChange === true) {\r\n            this.setDataValue(newValue);\r\n            if (fromElement !== true) this.setElementValue(newValue);\r\n            if (onChanged !== undefined) {\r\n                this.isChanging = true;\r\n                onChanged(this.context, this.value, prev);\r\n                this.isChanging = false;\r\n            }\r\n        }\r\n    }\r\n\r\n    protected get className():string {\r\n        let fieldClass:string;\r\n        if (this.context.inNode === false) fieldClass = 'form-control';\r\n        return classNames(fieldClass, this.context.form.FieldClass, this.ui && this.ui.className);\r\n    }\r\n\r\n    protected abstract render():JSX.Element;\r\n\r\n    container = observer(():JSX.Element => {\r\n        if (this.visible === false) return null;\r\n        let {form, inNode} = this.context;\r\n        if (inNode === true) return this.render();\r\n        let label:any = this.label;\r\n        if (this.itemSchema.required === true && form.props.requiredFlag !== false) {\r\n            if (label !== null) label = <>{label}&nbsp;<span className=\"text-danger\">*</span></>;\r\n        }\r\n        return form.FieldContainer(label, this.render());\r\n    })\r\n\r\n    protected get label():string {\r\n        let label:any;\r\n        if (this.ui === undefined) {\r\n            label = this.name;\r\n        }\r\n        else {\r\n            let uiLabel = this.ui.label;\r\n            if (uiLabel === null) label = null;\r\n            else label = uiLabel || this.name;\r\n        }\r\n        return label;\r\n    }\r\n\r\n    protected renderTemplet():JSX.Element | undefined {\r\n        if (this.children !== undefined) {\r\n            return <>{this.children}</>;\r\n        }\r\n        if (this.ui === undefined) return undefined;\r\n        let {Templet} = this.ui;\r\n        if (typeof Templet === 'function') return Templet(this.value);\r\n        return Templet;\r\n    }\r\n\r\n    protected renderErrors() {\r\n        let errorList:string[] = [...this.errors, ...this.contextErrors];\r\n        if (errorList.length === 0) return null;\r\n        let {inNode} = this.context;\r\n        let tag = inNode === true? 'span' : 'div';\r\n        return errorList.map(err => React.createElement(tag, \r\n            {\r\n                key: err, \r\n                className: 'text-danger d-inline-block my-2 ml-3'\r\n            },\r\n            <><i className=\"fa fa-exclamation-circle\" /> &nbsp;{err}</>\r\n        ));\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport classNames from 'classnames';\r\nimport { Widget } from './widget';\r\nimport { UiTextItem, StringSchema } from '../../schema';\r\n\r\nexport class TextWidget extends Widget {\r\n    protected inputType = 'text';\r\n    protected ui: UiTextItem;\r\n    protected input: HTMLInputElement;\r\n\r\n    protected setElementValue(value:any) {\r\n        if (this.input === null) return;\r\n        this.input.value = value;\r\n    }\r\n    protected get placeholder() {return (this.ui && this.ui.placeholder) || this.name}\r\n    protected onKeyDown = async (evt:React.KeyboardEvent<HTMLInputElement>) => {\r\n        this.internalOnKeyDown(evt);\r\n        if (evt.keyCode !== 13) return;\r\n        let {onEnter} = this.context.form.props;\r\n        if (onEnter === undefined) return;\r\n\r\n        this.changeValue(evt.currentTarget.value, true);\r\n        this.checkRules();\r\n        this.context.checkContextRules();\r\n\r\n        let ret = await onEnter(this.name, this.context);\r\n        if (ret !== undefined) {\r\n            this.context.setError(this.name, ret);\r\n        }\r\n    }\r\n\r\n    protected internalOnKeyDown(evt:React.KeyboardEvent<HTMLInputElement>) {\r\n    }\r\n\r\n    protected onBlur(evt: React.FocusEvent<any>) {\r\n        this.onInputChange(evt);\r\n        this.checkRules();\r\n        this.context.checkContextRules();\r\n    }\r\n    protected onFocus(evt: React.FocusEvent<any>) {\r\n        this.clearError();\r\n        this.context.removeErrorWidget(this);\r\n        this.context.removeErrors();\r\n    }\r\n    protected onChange(evt: React.ChangeEvent<any>) {\r\n    }\r\n\r\n    setReadOnly(value:boolean) {\r\n        if (this.input === null) return;\r\n        this.input.readOnly = this.readOnly = value;\r\n    }\r\n    setDisabled(value:boolean) {\r\n        if (this.input === null) return;\r\n        this.input.disabled = this.disabled = value;\r\n    }\r\n\r\n    render() {\r\n        let renderTemplet = this.renderTemplet();\r\n        if (renderTemplet !== undefined) return renderTemplet;\r\n        let cn = {\r\n            //'form-control': true,\r\n        };\r\n        if (this.hasError === true) {\r\n            cn['is-invalid'] = true;\r\n        }\r\n        else {\r\n            cn['required-item'] = this.itemSchema.required === true;\r\n        }\r\n        return <><input ref={input=>this.input = input}\r\n            className={classNames(this.className, cn)}\r\n            type={this.inputType}\r\n            defaultValue={this.value}\r\n            onChange={(evt: React.ChangeEvent<any>) => this.onChange(evt)}\r\n            placeholder={this.placeholder}\r\n            readOnly={this.readOnly}\r\n            disabled={this.disabled}\r\n            onKeyDown = {this.onKeyDown}\r\n            onFocus = {(evt: React.FocusEvent<any>) => this.onFocus(evt)}\r\n            onBlur={(evt: React.FocusEvent<any>) => this.onBlur(evt)}\r\n            maxLength={(this.itemSchema as StringSchema).maxLength} />\r\n            {this.renderErrors()}\r\n        </>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { TextWidget } from './textWidget';\r\nimport { RuleNum, RuleInt } from '../rules';\r\nimport { NumBaseSchema } from '../../schema';\r\n\r\nexport class NumberWidget extends TextWidget {\r\n    protected inputType = 'number';\r\n    protected itemSchema: NumBaseSchema;\r\n\r\n    protected buildRules() {\r\n        super.buildRules();\r\n        let res = this.context.form.res;\r\n        let {min, max} = this.itemSchema;\r\n        this.rules.push(\r\n            this.itemSchema.type === 'integer'?\r\n                new RuleNum(res, min, max) :\r\n                new RuleInt(res, min, max)\r\n        );\r\n        /*\r\n        if (this.itemSchema.type === 'integer') {\r\n            this.rules.push(new RuleInt);\r\n        }\r\n        let {min, max} = this.itemSchema;\r\n        if (min !== undefined) this.rules.push(new RuleMin(min));\r\n        if (max !== undefined) this.rules.push(new RuleMax(max));\r\n        */\r\n    }\r\n\r\n    protected parse(value:any):any {\r\n        if (value === undefined || value === null) return;\r\n        return Number(value);\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { NumberWidget } from './numberWidget';\r\n\r\nexport class UpdownWidget extends NumberWidget {\r\n    protected inputType = 'number';\r\n\r\n    protected isValidKey(key:number):boolean {\r\n        return key===46 || key===8 || key===37 || key===39\r\n            || key>=48 && key<=57\r\n            || key>=96 && key<=105\r\n            || key===109 || key===189;\r\n    }\r\n    \r\n    protected internalOnKeyDown(evt:React.KeyboardEvent<HTMLInputElement>) {\r\n        let key = evt.keyCode;\r\n        event.returnValue = this.isValidKey(key);\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { TextWidget } from './textWidget';\r\n\r\nexport class DateWidget extends TextWidget {\r\n    protected inputType = 'date';\r\n}\r\n\r\nexport class DateTimeWidget extends TextWidget {\r\n    protected inputType = 'datetime';\r\n}\r\n\r\nexport class TimeWidget extends TextWidget {\r\n    protected inputType = 'time';\r\n}\r\n\r\nexport class MonthWidget extends TextWidget {\r\n    protected inputType = 'month';\r\n}\r\n","import * as React from 'react';\r\nimport classNames from 'classnames';\r\nimport { Widget } from './widget';\r\nimport { UiCheckItem } from '../../schema';\r\n\r\nexport class CheckBoxWidget extends Widget {\r\n    protected input: HTMLInputElement;\r\n    protected ui: UiCheckItem;\r\n    protected trueValue: any;\r\n    protected falseValue: any;\r\n\r\n    protected init() {\r\n        super.init();\r\n        if (this.ui !== undefined) {\r\n            let {trueValue, falseValue} = this.ui;\r\n            if (trueValue === undefined) this.trueValue = true;\r\n            else this.trueValue = trueValue;\r\n            if (falseValue === undefined) this.falseValue = false;\r\n            else this.falseValue = falseValue;\r\n        }\r\n        else {\r\n            this.trueValue = true;\r\n            this.falseValue = false;\r\n        }\r\n    }\r\n    protected setElementValue(value:any) {\r\n        this.input.checked = value === this.trueValue;\r\n    }\r\n    setReadOnly(value:boolean) {this.input.readOnly = this.readOnly = value}\r\n    setDisabled(value:boolean) {this.input.disabled = this.disabled = value}\r\n\r\n    protected onInputChange = (evt: React.ChangeEvent<HTMLInputElement>) => {\r\n        this.setDataValue(evt.target.checked === true? this.trueValue : this.falseValue);\r\n    }\r\n\r\n    protected onClick = () => {\r\n        this.context.removeErrors();\r\n    }\r\n\r\n    render() {\r\n        let cn = classNames(this.className, 'form-check-inline p-0');\r\n        let input = <input\r\n            ref={(input)=>this.input = input}\r\n            className={'align-self-center'}\r\n            type=\"checkbox\"\r\n            defaultChecked={this.defaultValue} \r\n            onChange={this.onInputChange}\r\n            onClick={this.onClick} />;\r\n        if (this.context.inNode === true) {\r\n            return <label className={cn}>\r\n                {input} {(this.ui&&this.ui.label) || this.name}\r\n            </label>\r\n        }\r\n        else {\r\n            return <div className={cn}>\r\n                <label className=\"w-100 h-100 mb-0 d-flex justify-content-center\">{input}</label>\r\n            </div>;\r\n        }\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport classNames from 'classnames';\r\nimport { observable } from 'mobx';\r\nimport { Widget } from './widget';\r\nimport { UiSelect } from '../../schema';\r\n\r\nexport class SelectWidget extends Widget {\r\n    protected select: HTMLSelectElement;\r\n    protected ui: UiSelect;\r\n    @observable protected readOnly: boolean;\r\n\r\n    protected setElementValue(value:any) {this.select.value = value}\r\n    protected onInputChange = (evt:React.ChangeEvent<HTMLSelectElement>) => {\r\n        this.setDataValue(evt.target.value);\r\n    }\r\n\r\n    setReadOnly(value:boolean) {this.select.disabled = this.readOnly = !value}\r\n    setDisabled(value:boolean) {this.select.disabled = this.disabled = value}\r\n\r\n    render() {\r\n        if (this.readOnly === true) {\r\n            let option = this.ui.list.find(v => v.value === this.value);\r\n            let title = (option === undefined)? '(???)' : option.title;\r\n            return <span className=\"form-control w-min-6c\">{title}</span>;\r\n        }\r\n        return <select\r\n            ref={(select)=>this.select = select}\r\n            className={classNames(this.className, 'form-control')}\r\n            defaultValue={this.defaultValue} \r\n            onChange={this.onInputChange}>\r\n            {this.ui.list.map((v,index) => {\r\n                let {title, value} = v;\r\n                let cn:string;\r\n                //if (value === undefined || value === null) cn = 'text-light small';\r\n                //else cn = 'text-danger';\r\n                return <option className={cn} key={index} value={value}>{title || value}</option>\r\n            })}\r\n        </select>\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport classNames from 'classnames';\r\nimport { Widget } from './widget';\r\nimport { UiIdItem, TempletType } from '../../schema';\r\nimport { observable } from 'mobx';\r\n\r\nexport class IdWidget extends Widget {\r\n    protected ui: UiIdItem;\r\n    @observable protected value:number;\r\n    setReadOnly(value:boolean) {this.readOnly = value}\r\n    setDisabled(value:boolean) {this.disabled = value}    \r\n\r\n    protected onClick = async () => {\r\n        let pickId = this.ui && this.ui.pickId;\r\n        if (pickId === undefined) {\r\n            alert('no pickId defined!');\r\n            return;\r\n        }\r\n        let id = await pickId(this.context, this.name, this.value);        \r\n        this.setDataValue(id);\r\n        this.clearError();\r\n        this.clearContextError();\r\n        this.checkRules();\r\n    }\r\n\r\n    render() {\r\n        let placeholder:string|JSX.Element, Templet: TempletType;\r\n        if (this.ui !== undefined) {\r\n            placeholder = this.ui.placeholder;\r\n            Templet = this.ui.Templet;\r\n        }\r\n        let cn = {\r\n            'form-control': true,\r\n            'required-item': this.itemSchema.required === true,\r\n            'cursor-pointer': true,\r\n            'is-invalid': this.hasError,\r\n        };\r\n        let content;\r\n        if (this.value === undefined || this.value === null) {\r\n            content = placeholder || 'placeholder';\r\n            cn['text-muted'] = true;\r\n        }\r\n        else if (Templet === undefined) {\r\n            content = <>{this.value}</>;\r\n        }\r\n        else if (typeof Templet === 'function') {\r\n            content = Templet(this.value);\r\n        }\r\n        else {\r\n            content = Templet;\r\n        }\r\n        return <>\r\n            <div className={classNames(cn)} onClick={this.onClick}>{content}</div>\r\n            {this.renderErrors()}\r\n        </>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { DataType } from '../../schema';\r\nimport { UiType } from '../../schema';\r\n\r\nexport const Unknown = (dataType:DataType, uiType:UiType, dataTypes:DataType[]) => {\r\n    return <span className=\"text-danger\">!!data type {dataType} only support {(dataTypes || []).join(', ')}, can't use ui {uiType}!!</span>;\r\n};\r\n","import * as React from 'react';\r\nimport { UiButton, TempletType } from '../../schema';\r\nimport { Unknown } from './unknown';\r\nimport { Widget } from './widget';\r\nimport { observer } from 'mobx-react';\r\n\r\nexport class ButtonWidget extends Widget {\r\n    protected ui: UiButton;\r\n\r\n    protected onClick = async () => {\r\n        this.clearError();\r\n        this.clearContextError();\r\n        let {name, type} = this.itemSchema;\r\n        if (type === 'submit') {\r\n            this.context.checkRules()\r\n            if (this.context.hasError === true) {\r\n                return;\r\n            }\r\n        }\r\n        let {onButtonClick} = this.context.form.props;\r\n        if (onButtonClick === undefined) {\r\n            alert(`button ${name} clicked. you should define form onButtonClick`);\r\n            return;\r\n        }\r\n        let ret = await onButtonClick(name, this.context);\r\n        if (ret === undefined) return;\r\n        this.context.setError(name, ret);\r\n    }\r\n\r\n    private observerRender = observer(() => {\r\n        let {name, type} = this.itemSchema;\r\n        let Templet:TempletType, cn:string, caption:string;\r\n        if (this.ui !== undefined) {\r\n            let {widget:widgetType} = this.ui;\r\n            if (widgetType !== 'button') return Unknown(type, widgetType, ['button']);\r\n            Templet = this.ui.Templet;\r\n            cn = this.ui.className;\r\n            caption = this.ui.label;\r\n        }\r\n        let {form, hasError} = this.context;\r\n        let context = this.context;\r\n        let disabled = type==='submit' && hasError;\r\n        let content:any;\r\n        if (this.children !== undefined) content = this.children;\r\n        else if (typeof Templet === 'function') content = Templet();\r\n        else if (Templet !== undefined) content = Templet;\r\n        else content = caption; \r\n        let button = <button \r\n            className={cn} \r\n            type=\"button\"\r\n            disabled={disabled}\r\n            onClick={this.onClick}>\r\n            {content || name}\r\n        </button>;\r\n        if (context.inNode === true) return <>{button}{this.renderErrors()}</>;\r\n        return <div className={form.ButtonClass}>\r\n            <div>{this.renderErrors()}</div>\r\n            {button}\r\n        </div>;\r\n    });\r\n    \r\n    protected get label():string {return null}\r\n\r\n    render() {\r\n        return <this.observerRender />\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { Form } from './form';\r\nimport { UiSchema, UiArr, UiItem } from '../schema';\r\nimport { ArrSchema, ItemSchema } from '../schema';\r\nimport { Widget as Widget } from './widgets/widget';\r\n//import { ArrRow } from './arrRow';\r\nimport { observable, computed } from 'mobx';\r\nimport { ContextRule } from './rules';\r\nimport { observer } from 'mobx-react';\r\n\r\nexport abstract class Context {\r\n    private subContexts:{[name:string]:{[rowKey:string]:Context}};\r\n    readonly form: Form;\r\n    readonly uiSchema: UiSchema;\r\n    readonly initData: any;\r\n    readonly inNode: boolean;           // true: 在</> 流中定义Field\r\n    readonly widgets: {[name:string]: Widget} = {};\r\n    readonly rules: ContextRule[];\r\n    readonly isRow: boolean;\r\n    @observable errors: string[] = [];\r\n    @observable errorWidgets:Widget[] = [];\r\n\r\n    constructor(form: Form, uiSchema: UiSchema, data: any, inNode: boolean, isRow: boolean) {\r\n        this.form = form;\r\n        this.uiSchema = uiSchema;\r\n        this.initData = data;\r\n        this.inNode = inNode;\r\n        this.isRow = isRow;\r\n        if (uiSchema !== undefined) {\r\n            let {rules} = uiSchema;\r\n            if (rules !== undefined) {\r\n                this.rules = [];\r\n                if (Array.isArray(rules) === false)\r\n                    this.rules.push(rules as ContextRule);\r\n                else\r\n                    this.rules.push(...rules as ContextRule[]);\r\n            }\r\n        }\r\n    }\r\n\r\n    getArrRowContexts(arrName: string) {\r\n        if (this.subContexts === undefined) this.subContexts = {};\r\n        let arrRowContexts = this.subContexts[name];\r\n        if (arrRowContexts === undefined) this.subContexts[name] = arrRowContexts = {};\r\n        return arrRowContexts;\r\n    }\r\n\r\n    abstract get data():any;\r\n    abstract getItemSchema(itemName:string):ItemSchema;\r\n    abstract getUiItem(itemName:string):UiItem;\r\n    get arrName():string {return undefined}\r\n    getValue(itemName:string):any {return this.initData[itemName]}\r\n    setValue(itemName:string, value:any) {\r\n        this.initData[itemName] = value;\r\n        let widget = this.widgets[itemName];\r\n        if (widget !== undefined) widget.setValue(value);\r\n    }\r\n    getDisabled(itemName:string):boolean {\r\n        let widget = this.widgets[itemName];\r\n        if (widget !== undefined) return widget.getDisabled();\r\n        return undefined;\r\n    }\r\n    setDisabled(itemName:string, value:boolean) {\r\n        let widget = this.widgets[itemName];\r\n        if (widget !== undefined) widget.setDisabled(value);\r\n    }\r\n    getReadOnly(itemName:string):boolean {\r\n        let widget = this.widgets[itemName];\r\n        if (widget !== undefined) widget.getReadOnly();\r\n        return undefined;\r\n    }\r\n    setReadOnly(itemName:string, value:boolean) {\r\n        let widget = this.widgets[itemName];\r\n        if (widget !== undefined) widget.setReadOnly(value);\r\n    }\r\n    getVisible(itemName:string):boolean {\r\n        let widget = this.widgets[itemName];\r\n        if (widget !== undefined) widget.getVisible();\r\n        return undefined;\r\n    }\r\n    setVisible(itemName:string, value:boolean) {\r\n        let widget = this.widgets[itemName];\r\n        if (widget !== undefined) widget.setVisible(value);\r\n    }\r\n\r\n    checkFieldRules() {\r\n        for (let i in this.widgets) {\r\n            this.widgets[i].checkRules();\r\n        }\r\n        if (this.subContexts === undefined) return;\r\n        for (let i in this.subContexts) {\r\n            let arrRowContexts = this.subContexts[i];\r\n            for (let j in arrRowContexts) {\r\n                arrRowContexts[j].checkFieldRules();\r\n            }\r\n        }\r\n    }\r\n\r\n    checkContextRules() {\r\n        if (this.rules === undefined) return;\r\n        this.clearContextErrors();\r\n        for (let rule of this.rules) {\r\n            let ret = rule(this);\r\n            if (ret === undefined) continue;\r\n            if (Array.isArray(ret) === true) {\r\n                this.errors.push(...ret as string[]);\r\n            }\r\n            else if (typeof ret === 'string') {\r\n                this.errors.push(ret as string);\r\n            }\r\n            else {\r\n                for (let i in ret as object) this.setError(i, ret[i]);\r\n            }\r\n        }\r\n        if (this.subContexts === undefined) return;\r\n        for (let i in this.subContexts) {\r\n            let arrRowContexts = this.subContexts[i];\r\n            for (let j in arrRowContexts) {\r\n                let rowContext = arrRowContexts[j];\r\n                rowContext.removeErrors();\r\n                rowContext.checkContextRules();\r\n            }\r\n        }\r\n    }\r\n\r\n    setError(itemName:string, error:string) {\r\n        let widget = this.widgets[itemName];\r\n        if (widget === undefined) return;\r\n        widget.setContextError(error);\r\n        this.addErrorWidget(widget);\r\n    }\r\n\r\n    clearContextErrors() {\r\n        for (let i in this.widgets) this.widgets[i].clearContextError();\r\n    }\r\n\r\n    checkRules() {\r\n        this.checkFieldRules();\r\n        this.checkContextRules();\r\n    }\r\n\r\n    addErrorWidget(widget:Widget) {\r\n        let pos = this.errorWidgets.findIndex(v => v === widget);\r\n        if (pos < 0) this.errorWidgets.push(widget);\r\n    }\r\n    removeErrorWidget(widget:Widget) {\r\n        let pos = this.errorWidgets.findIndex(v => v === widget);\r\n        if (pos >= 0) this.errorWidgets.splice(pos, 1);\r\n    }\r\n\r\n    protected checkHasError():boolean {\r\n        let ret = (this.errorWidgets.length + this.errors.length) > 0;\r\n        if (ret === true) return true;\r\n        if (this.subContexts === undefined) return false;\r\n        for (let i in this.subContexts) {\r\n            let arrRowContexts = this.subContexts[i];\r\n            for (let j in arrRowContexts) {\r\n                if (arrRowContexts[j].hasError === true) return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    @computed get hasError():boolean {\r\n        return this.checkHasError();\r\n    };\r\n\r\n    removeErrors() {\r\n        this.errors.splice(0);\r\n        this.errorWidgets.splice(0);\r\n        for (let i in this.widgets) {\r\n            let widget = this.widgets[i];\r\n            if (widget === undefined) continue;\r\n            widget.clearContextError();\r\n        }\r\n    }\r\n\r\n    renderErrors = observer((): JSX.Element => {\r\n        let {errors} = this;\r\n        if (errors.length === 0) return null;\r\n        return <>\r\n            {errors.map(err => <span key={err} className=\"text-danger inline-block my-1 ml-3\">\r\n                <i className=\"fa fa-exclamation-circle\" /> &nbsp;{err}\r\n            </span>)}\r\n        </>\r\n    });\r\n}\r\n\r\nlet rowKeySeed:number = 1;\r\nexport class RowContext extends Context {\r\n    readonly parentContext: Context;\r\n    readonly arrSchema: ArrSchema;\r\n    readonly uiSchema: UiArr;\r\n    //readonly row: ArrRow;\r\n    readonly rowKey: number;\r\n    readonly data: any;\r\n    constructor(parentContext:Context, arrSchema: ArrSchema, data: any, inNode: boolean) {\r\n        let uiArr:UiArr;\r\n        let {uiSchema} = parentContext;\r\n        if (uiSchema !== undefined) {\r\n            let {items} = uiSchema;\r\n            if (items !== undefined) uiArr = items[arrSchema.name] as UiArr;\r\n        }\r\n        super(parentContext.form, uiArr, data, inNode, true);\r\n        this.parentContext = parentContext;\r\n        this.arrSchema = arrSchema;\r\n        this.rowKey = rowKeySeed++;\r\n        this.data = data;\r\n    }\r\n    getItemSchema(itemName:string):ItemSchema {return this.arrSchema.itemSchemas[itemName]}\r\n    getUiItem(itemName:string):UiItem {\r\n        if (this.uiSchema === undefined) return undefined;\r\n        let {items} = this.uiSchema;\r\n        if (items === undefined) return undefined;\r\n        return items[itemName]\r\n    }\r\n    get arrName():string {return this.arrSchema.name}\r\n    //get data() {return this.row.data;}\r\n    removeErrors() {\r\n        super.removeErrors();\r\n        this.parentContext.removeErrors();\r\n    }\r\n\r\n    get parentData():any {return this.parentContext.data;}\r\n}\r\n\r\nexport class FormContext extends Context {\r\n    constructor(form:Form, inNode:boolean) {\r\n        super(form, form.uiSchema, form.data, inNode, false);\r\n    }\r\n    get data():any {return this.form.data}\r\n    getItemSchema(itemName:string):ItemSchema {return this.form.itemSchemas[itemName]}\r\n    getUiItem(itemName:string):UiItem {\r\n        let {uiSchema} = this.form;\r\n        if (uiSchema === undefined) return undefined;\r\n        let {items} = uiSchema;\r\n        if (items === undefined) return undefined;\r\n        return items[itemName]\r\n    }\r\n}\r\n\r\nexport const ContextContainer = React.createContext<Context>({} as any);\r\n","import * as React from 'react';\r\nimport {observer} from 'mobx-react';\r\nimport classNames from 'classnames';\r\n//import { ArrRow } from '../arrRow';\r\nimport { Context, RowContext, ContextContainer } from '../context';\r\nimport { ArrSchema } from '../../schema';\r\nimport { UiArr, TempletType } from '../../schema';\r\nimport { Unknown } from './unknown';\r\nimport { factory } from './factory';\r\n\r\nexport const ArrComponent = observer((\r\n    {parentContext, arrSchema, children}:{parentContext: Context, arrSchema: ArrSchema, children: React.ReactNode}) => \r\n{\r\n    let {name, arr} = arrSchema;\r\n    let data = parentContext.initData[name] as any[];\r\n    let {form} = parentContext;\r\n    let arrRowContexts = parentContext.getArrRowContexts(name);\r\n    let ui = parentContext.getUiItem(name) as UiArr;\r\n    let arrLabel = name;\r\n    let Templet:TempletType;\r\n    let selectable:boolean, deletable:boolean, restorable:boolean;\r\n    let {ArrContainer, RowContainer, RowSeperator, uiSchema} = form;\r\n    if (uiSchema !== undefined) {\r\n        let {selectable:formSelectable, deletable:formDeletable, restorable:formRestorable} = uiSchema;\r\n        if (selectable !== true) selectable = formSelectable;\r\n        if (deletable !== true) deletable = formDeletable;\r\n        if (restorable !== true) restorable = formRestorable;\r\n    }\r\n    if (ui !== undefined) {\r\n        let {widget:widgetType, label, \r\n            selectable:arrSelectable, deletable:arrDeletable, restorable:arrRestorable,\r\n            ArrContainer:ac, RowContainer:rc, RowSeperator:rs\r\n        } = ui;\r\n        if (arrSelectable !== undefined) selectable = arrSelectable;\r\n        if (arrDeletable !== undefined) deletable = arrDeletable;\r\n        if (arrRestorable !== undefined) restorable = arrRestorable;\r\n        if (ac !== undefined) ArrContainer = ac;\r\n        if (rc !== undefined) RowContainer = rc;\r\n        if (rs !== undefined) RowSeperator = rs;\r\n        Templet = ui.Templet;\r\n        if (widgetType !== 'arr') return Unknown(arrSchema.type, widgetType, ['arr']);\r\n        arrLabel = label || arrLabel;\r\n    }\r\n    let first = true;\r\n    return ArrContainer(arrLabel, <>\r\n        {data.map((row:any, index) => {\r\n            let rowContext: RowContext;\r\n            let rowContent: JSX.Element;\r\n            let sep = undefined;\r\n            if (first === false) sep = RowSeperator;\r\n            else first = false;\r\n            if (children !== undefined) {\r\n                rowContext = new RowContext(parentContext, arrSchema, row, true);\r\n                rowContent = <>{children}</>;\r\n            }\r\n            else {\r\n                let typeofTemplet = typeof Templet;\r\n                if (typeofTemplet === 'function') {\r\n                    rowContext = new RowContext(parentContext, arrSchema, row, true);\r\n                    rowContent = React.createElement(observer(Templet as React.StatelessComponent), row);\r\n                }\r\n                else if (typeofTemplet === 'object') {\r\n                    rowContext = new RowContext(parentContext, arrSchema, row, true);\r\n                    rowContent = Templet as JSX.Element;\r\n                }\r\n                else {\r\n                    rowContext = new RowContext(parentContext, arrSchema, row, false);\r\n                    rowContent = <>{\r\n                        arr.map((v, index) => {\r\n                            return <React.Fragment key={v.name}>\r\n                                {factory(rowContext, v, undefined)}\r\n                            </React.Fragment>\r\n                        })}\r\n                    </>;\r\n                }\r\n            }\r\n            let {rowKey} = rowContext;\r\n            arrRowContexts[rowKey] = rowContext;\r\n\r\n            let selectCheck:JSX.Element, deleteIcon:JSX.Element;\r\n            if (selectable === true) {\r\n                let onClick = (evt: React.MouseEvent<HTMLInputElement>)=>{\r\n                    let {checked} = (evt.target as HTMLInputElement);\r\n                    row.$isSelected = checked;\r\n                    let {$source} = row;\r\n                    if ($source !== undefined) $source.$isSelected = checked;\r\n                    rowContext.removeErrors();\r\n                }\r\n                selectCheck = <div className=\"form-row-checkbox\">\r\n                    <input type=\"checkbox\" onClick={onClick} defaultChecked={row.$isSelected} />\r\n                </div>;\r\n            }\r\n            let isDeleted = !(row.$isDeleted===undefined || row.$isDeleted===false);\r\n            if (deletable === true) {\r\n                let icon = isDeleted? 'fa-undo' : 'fa-trash';\r\n                let onDelClick = () => {\r\n                    if (restorable === true) {\r\n                        row.$isDeleted = !isDeleted;\r\n                        let {$source} = row;\r\n                        if ($source !== undefined) $source.$isDeleted = !isDeleted;\r\n                    }\r\n                    else {\r\n                        let p = data.indexOf(row);\r\n                        if (p>=0) data.splice(p, 1);\r\n                    }\r\n                    rowContext.removeErrors();\r\n                }\r\n                deleteIcon = <div className=\"form-row-edit text-info\" onClick={onDelClick}>\r\n                    <i className={classNames('fa', icon, 'fa-fw')} />\r\n                </div>;\r\n            }\r\n            let editContainer = selectable===true || deletable===true?\r\n                (content:any) => <fieldset disabled={isDeleted}><div className={classNames('d-flex', {'deleted':isDeleted, 'row-selected':row.$isSelected})}>\r\n                    {selectCheck}<div className=\"flex-grow-1\">{content}</div>{deleteIcon}\r\n                </div></fieldset>\r\n                :\r\n                (content:any) => content;\r\n\r\n            return <ContextContainer.Provider key={rowKey} value={rowContext}>\r\n                {sep}\r\n                {RowContainer(editContainer(<><rowContext.renderErrors />{rowContent}</>))}\r\n            </ContextContainer.Provider>;\r\n        })}\r\n    </>);\r\n});\r\n","import * as React from 'react';\r\nimport classNames from 'classnames';\r\nimport { Widget } from './widget';\r\nimport { UiImageItem } from '../../schema';\r\nimport { Image } from '../../image';\r\nimport { ImageItemEdit } from '../../edit/imageItemEdit';\r\nimport { observer } from 'mobx-react';\r\nimport { observable } from 'mobx';\r\n\r\nexport class ImageWidget extends Widget {\r\n    protected input: HTMLInputElement;\r\n    protected ui: UiImageItem;\r\n    @observable private imageSrc: string;\r\n\r\n    protected init() {\r\n        super.init();\r\n        this.imageSrc = this.value;\r\n    }\r\n\r\n    protected onClick = async () => {\r\n        let edit = new ImageItemEdit(this.itemSchema, this.ui, this.ui.label, this.value);\r\n        let ret = await edit.start();\r\n        if (ret !== null) {\r\n            this.setValue(ret);\r\n            this.imageSrc = ret;\r\n        }\r\n        await edit.end();\r\n    }\r\n\r\n    render() {\r\n        return <this.observerRender />;\r\n    }\r\n\r\n    private observerRender = observer(() => {\r\n        let cn = [\r\n            'bg-white p-1 d-flex justify-content-center',\r\n        ];\r\n        let onClick: any;\r\n        if (!this.readOnly && !this.disabled) {\r\n            cn.push('cursor-pointer');\r\n            onClick = this.onClick;\r\n        }\r\n        return <div className={classNames(cn)} onClick={onClick}>\r\n            <Image src={this.imageSrc} className=\"w-4c h-4c\"/>\r\n        </div>;\r\n    });\r\n}\r\n","import * as React from 'react';\r\nimport {observer} from 'mobx-react';\r\nimport { Schema, ArrSchema, DataType, ButtonSchema, ItemSchema } from '../../schema';\r\nimport { UiItem, UiArr, UiType, UiButton, TempletType, TypeWidget, UiCustom } from '../../schema';\r\nimport { TextWidget } from './textWidget';\r\nimport { TextAreaWidget } from './textareaWidget';\r\nimport { PasswordWidget, UrlWidget, EmailWidget } from './passwordWidget';\r\nimport { UpdownWidget } from './updownWidget';\r\nimport { NumberWidget } from './numberWidget';\r\nimport { DateWidget, DateTimeWidget, TimeWidget, MonthWidget } from './dateWidget';\r\nimport { CheckBoxWidget } from './checkBoxWidget';\r\nimport { FieldProps } from '../field';\r\nimport { Context, RowContext, FormContext, ContextContainer } from '../context';\r\nimport { SelectWidget } from './selectWidget';\r\nimport { RadioWidget } from './radioWidget';\r\nimport { RangeWidget } from './rangeWidget';\r\nimport { IdWidget } from './idWidget';\r\nimport { ButtonWidget } from './buttonWidget';\r\nimport { ArrComponent } from './arrComponent';\r\nimport { ImageWidget } from './imageWidget';\r\n\r\nconst widgetsFactory: {[type: string]: {widget?: TypeWidget, dataTypes?: DataType[]}} = {\r\n    id: {\r\n        dataTypes: ['id'],\r\n        widget: IdWidget,\r\n    },\r\n    text: {\r\n        dataTypes: ['integer', 'number', 'string'],\r\n        widget: TextWidget\r\n    },\r\n    textarea: {\r\n        dataTypes: ['string'],\r\n        widget: TextAreaWidget\r\n    },\r\n    password: {\r\n        dataTypes: ['string'],\r\n        widget: PasswordWidget\r\n    },\r\n    date: {\r\n        dataTypes: ['date'],\r\n        widget: DateWidget\r\n    },\r\n    datetime: {\r\n        dataTypes: ['date'],\r\n        widget: DateTimeWidget\r\n    },\r\n    time: {\r\n        dataTypes: ['date'],\r\n        widget: TimeWidget\r\n    },\r\n    month: {\r\n        dataTypes: ['date'],\r\n        widget: MonthWidget\r\n    },\r\n    select: {\r\n        dataTypes: ['integer', 'number', 'string', 'date', 'boolean'],\r\n        widget: SelectWidget\r\n    },\r\n    url: {\r\n        dataTypes: ['string'],\r\n        widget: UrlWidget\r\n    },\r\n    email: {\r\n        dataTypes: ['string'],\r\n        widget: EmailWidget\r\n    },\r\n    number: {\r\n        dataTypes: ['integer', 'number'],\r\n        widget: NumberWidget\r\n    },\r\n    updown: {\r\n        dataTypes: ['integer', 'number'],\r\n        widget: UpdownWidget\r\n    },\r\n    color: {\r\n\r\n    },\r\n    checkbox: {\r\n        dataTypes: ['boolean', 'integer', 'number'],\r\n        widget: CheckBoxWidget\r\n    },\r\n    image: {\r\n        dataTypes: ['string'],\r\n        widget: ImageWidget,\r\n    },\r\n    checkboxes: {\r\n\r\n    },\r\n    radio: {\r\n        dataTypes: ['integer', 'number', 'string', 'date', 'boolean'],\r\n        widget: RadioWidget\r\n    },\r\n    range: {\r\n        dataTypes: ['integer'],\r\n        widget: RangeWidget,\r\n    },\r\n    button: {\r\n        dataTypes: ['button', 'submit'],\r\n        widget: ButtonWidget,\r\n    }\r\n}\r\n\r\nexport function factory(context: Context, itemSchema: ItemSchema, children:React.ReactNode, fieldProps?: FieldProps):JSX.Element {\r\n    if (context === undefined) {\r\n        debugger;\r\n        return null;\r\n    }\r\n    if (itemSchema === undefined) return undefined;\r\n    let {name, type} = itemSchema;\r\n    switch (type) {\r\n    case 'arr':\r\n        let arrSchema = context.getItemSchema(name) as ArrSchema;\r\n        return <ArrComponent parentContext={context} arrSchema={arrSchema} children={children} />;\r\n    default:\r\n        break;\r\n    }\r\n\r\n    let typeWidget: TypeWidget;\r\n    let ui = context.getUiItem(name);\r\n    function getTypeWidget(t:DataType): TypeWidget {\r\n        switch(t) {\r\n        default: return TextWidget; \r\n        case 'id': return IdWidget;\r\n        case 'integer': return UpdownWidget;\r\n        case 'number': return NumberWidget; \r\n        case 'string': return TextWidget; \r\n        case 'date': return DateWidget; \r\n        case 'boolean': return CheckBoxWidget; \r\n        case 'button':\r\n        case 'submit': return ButtonWidget;\r\n        }\r\n    }\r\n    if (ui === undefined) { \r\n        typeWidget = getTypeWidget(type);\r\n    }\r\n    else {\r\n        let {widget:widgetType} = ui;\r\n        switch (widgetType) {\r\n        default:\r\n            if (widgetType !== undefined) {\r\n                let widgetFactory = widgetsFactory[widgetType];\r\n                typeWidget = widgetFactory.widget;\r\n            }\r\n            if (typeWidget === undefined) typeWidget = getTypeWidget(type);\r\n            break;\r\n        case 'custom':\r\n            typeWidget = (ui as UiCustom).WidgetClass;\r\n            break;\r\n        case 'group':\r\n            return <span>impletment group</span>;\r\n        }\r\n        //label = uiLabel || name;\r\n    }\r\n    \r\n    let {isRow, widgets} = context;\r\n    let widget = new typeWidget(context, itemSchema, fieldProps, children);\r\n    widgets[name] = widget;\r\n\r\n    return <widget.container />;\r\n    /*\r\n    if (isRow === false) {\r\n        let WidgetElement = observer(() => widget.container());\r\n        return <WidgetElement />;\r\n    }\r\n    else {\r\n        let widgetElement = widget.container();\r\n        return widgetElement;\r\n    }\r\n    */\r\n}\r\n\r\n","import * as React from 'react';\r\nimport classNames from 'classnames';\r\nimport { Widget } from './widget';\r\nimport { UiTextAreaItem } from '../../schema';\r\nimport { StringSchema } from '../../schema';\r\n\r\nexport class TextAreaWidget extends Widget {\r\n    protected itemSchema: StringSchema;\r\n    protected input: HTMLTextAreaElement;\r\n    protected ui: UiTextAreaItem;\r\n\r\n    protected setElementValue(value:any) {this.input.value = value}\r\n    protected onInputChange = (evt: React.ChangeEvent<HTMLTextAreaElement>) => {\r\n        this.setValue(evt.currentTarget.value);\r\n    }\r\n\r\n    setReadOnly(value:boolean) {this.input.readOnly = this.readOnly = value}\r\n    setDisabled(value:boolean) {this.input.disabled = this.disabled = value}\r\n\r\n    render() {\r\n        let renderTemplet = this.renderTemplet();\r\n        if (renderTemplet !== undefined) return renderTemplet;\r\n        let cn = {};\r\n        if (this.hasError === true) {\r\n            cn['is-invalid'] = true;\r\n        }\r\n        else {\r\n            cn['required-item'] = this.itemSchema.required === true;\r\n        }\r\n        return <textarea ref={(input) => this.input=input} \r\n            className={classNames(this.className, cn)}\r\n            rows={this.ui && this.ui.rows}\r\n            maxLength={this.itemSchema.maxLength}\r\n            defaultValue={this.defaultValue} onChange={this.onInputChange} />\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { TextWidget } from './textWidget';\r\n\r\nexport class PasswordWidget extends TextWidget {\r\n    protected inputType = 'password';\r\n}\r\n\r\nexport class UrlWidget extends TextWidget {\r\n    protected inputType = 'url';\r\n}\r\n\r\nexport class EmailWidget extends TextWidget {\r\n    protected inputType = 'email';\r\n}\r\n","import * as React from 'react';\r\nimport classNames from 'classnames';\r\nimport { TextWidget } from './textWidget';\r\nimport { Widget } from './widget';\r\nimport { UiRadio } from '../../schema';\r\nimport { RowContext } from '../context';\r\n\r\n\r\n//const radioStyle:React.CSSProperties = {width:'2em', height:'1.2em'};\r\nexport class RadioWidget extends Widget {\r\n    protected inputs: {[index:number]: HTMLInputElement} = {};\r\n    protected ui: UiRadio;\r\n\r\n    protected setElementValue(value:any) {\r\n        for (let i in this.inputs) {\r\n            let input = this.inputs[i];\r\n            input.checked = value === input.value;\r\n        }\r\n    }\r\n    setReadOnly(value:boolean) {\r\n        this.readOnly = value;\r\n        for (let i in this.inputs) this.inputs[i].readOnly = value;\r\n    }\r\n    setDisabled(value:boolean) {\r\n        this.disabled = value;\r\n        for (let i in this.inputs) this.inputs[i].disabled = value\r\n    }\r\n\r\n    render() {\r\n        let {defaultValue, list} = this.ui;\r\n        let {isRow, inNode} = this.context;\r\n        let rowKey:number;\r\n        if (isRow === true) {\r\n            rowKey = (this.context as RowContext).rowKey;\r\n        }\r\n        let cn = classNames(this.className, 'form-radio-inline');\r\n        return <span className={cn}>\r\n                {list.map((v,index) => {\r\n                    let {value, title} = v;\r\n                    let name = this.name;\r\n                    if (rowKey !== undefined) name += '-' + rowKey;\r\n                    return <label key={index} className=\"form-radio-inline\">\r\n                        <input ref={input=>this.inputs[index]=input} type=\"radio\" name={name}\r\n                            value={value} defaultChecked={(this.defaultValue || defaultValue)===value} />\r\n                        {title || value}\r\n                    </label>;\r\n                    //</span>\r\n                })}\r\n            </span>;\r\n    }\r\n}\r\n/*\r\n<div className=\"form-control d-flex border-0\"><input\r\nref={(input)=>this.input = input}\r\nclassName={classNames(this.className, 'align-self-center')}\r\ntype=\"checkbox\"\r\nstyle={{maxHeight:\"1.2em\"}}\r\ndefaultValue={this.defaultValue} \r\nonChange={this.onChange} />\r\n</div>\r\n*/","import * as React from 'react';\r\nimport classNames from 'classnames';\r\nimport { UiRange } from '../../schema';\r\nimport { Widget } from './widget';\r\n\r\nexport class RangeWidget extends Widget {\r\n    protected inputType = 'range';\r\n    protected input: HTMLInputElement;\r\n    protected ui: UiRange;\r\n\r\n    setReadOnly(value:boolean) {this.input.readOnly = this.readOnly = value}\r\n    setDisabled(value:boolean) {this.input.disabled = this.disabled = value}\r\n\r\n    render() {\r\n        let {min, max, step} = this.ui;\r\n        return <><input ref={input=>this.input = input}\r\n            className={classNames(this.className, 'form-control', 'w-min-6c')}\r\n            type={this.inputType}\r\n            defaultValue={this.defaultValue} \r\n            onChange={this.onInputChange}\r\n            max={max}\r\n            min={min}\r\n            step={step}\r\n            />\r\n        </>;\r\n    }\r\n}\r\n","import _ from 'lodash';\r\nimport { KeyValueRes, Res } from '../res';\r\n\r\nexport interface FormRes extends KeyValueRes {\r\n    required: string;\r\n    number: string;\r\n    integer: string;\r\n    min: string;\r\n    max: string;\r\n}\r\n\r\nexport const formRes:Res<FormRes> = {\r\n    _: {\r\n        required: 'required',\r\n        number: 'not valid number',\r\n        integer: 'not valid integer',\r\n        min: 'min value is ${min}',\r\n        max: 'max value is ${max}',\r\n    },\r\n    zh: {\r\n        _: {\r\n            required: '必须填',\r\n            number: '需要数字',\r\n            integer: '需要整数',\r\n            min: '不能小于${min}',\r\n            max: '不能大于${max}',\r\n        }\r\n    },\r\n}\r\n","import * as React from 'react';\r\nimport {observable, IReactionDisposer, autorun, isObservable} from 'mobx';\r\nimport classNames from 'classnames';\r\nimport { Schema, ItemSchema, ArrSchema } from '../schema';\r\nimport { UiSchema, TempletType } from '../schema';\r\nimport { factory } from './widgets';\r\nimport 'font-awesome/css/font-awesome.min.css';\r\nimport { ContextContainer, FormContext, Context, RowContext } from './context';\r\nimport { FormRes, formRes } from './formRes';\r\nimport { resLang } from '../res';\r\n\r\nexport type FormButtonClick = (name:string, context: Context) => Promise<any>;\r\nexport type InputEnter = (name:string, context: Context) => Promise<any>;\r\n\r\nexport interface FormProps {\r\n    className?: string;\r\n    schema: Schema;\r\n    uiSchema?: UiSchema;\r\n    formData?: any;\r\n    onButtonClick?: FormButtonClick;\r\n    onEnter?: InputEnter;\r\n    fieldLabelSize?: number;            // col-sm-2 for label\r\n    requiredFlag?: boolean;             // default=true\r\n    beforeShow?: (formContext:FormContext) => void;\r\n    res?: FormRes;\r\n\r\n    Container?: (content:JSX.Element) => JSX.Element;\r\n    FieldContainer?: (label:string|JSX.Element, content:JSX.Element) => JSX.Element;\r\n    FieldClass?: string;\r\n    ButtonClass?: string;\r\n}\r\n\r\nexport class Form extends React.Component<FormProps> {\r\n    readonly schema: Schema;\r\n    readonly itemSchemas: {[name:string]: ItemSchema};\r\n    readonly uiSchema: UiSchema;\r\n    readonly res?: FormRes;\r\n    protected formContext: FormContext;\r\n    //private content: any;\r\n    //private formData: any;\r\n    private disposer: IReactionDisposer;\r\n    //@observable \r\n    readonly data:any;\r\n\r\n    readonly Container: (content:JSX.Element) => JSX.Element;\r\n    readonly FieldContainer: (label:any, content:JSX.Element) => JSX.Element;\r\n    readonly FieldClass: string;\r\n    readonly ButtonClass: string;\r\n    //readonly ArrContainer: (label:any, content:JSX.Element) => JSX.Element;\r\n    //readonly RowContainer: (content:JSX.Element) => JSX.Element;\r\n    //readonly RowSeperator: JSX.Element;\r\n\r\n    constructor(props:FormProps) {\r\n        super(props);\r\n        let {schema, uiSchema, formData, \r\n            Container, FieldContainer, FieldClass, \r\n            ButtonClass, res,\r\n        } = props;\r\n        this.Container = Container || this.DefaultContainer;\r\n        this.FieldContainer = FieldContainer || this.DefaultFieldContainer;\r\n        this.FieldClass = FieldClass!==undefined && FieldClass!==''&&FieldClass!==null? FieldClass : this.DefaultFieldClass;\r\n        this.res = res || this.DefaultRes;\r\n        this.ButtonClass = ButtonClass || this.DefaultButtonClass;\r\n\r\n        this.schema = schema;\r\n        this.itemSchemas = {};\r\n        for (let itemSchema of this.schema) {\r\n            this.itemSchemas[itemSchema.name] = itemSchema;\r\n        }\r\n        this.uiSchema = uiSchema;\r\n\r\n        //this.formData = formData;\r\n        this.disposer = autorun(this.watch);\r\n        this.data = {};\r\n        // this.initRender();\r\n    }\r\n\r\n    private renderContent():any {\r\n        this.initData(this.props.formData);\r\n        let {children} = this.props;\r\n        if (children !== undefined) {\r\n            this.formContext = new FormContext(this, true);\r\n            return <>{children}</>;\r\n        }\r\n\r\n        let Templet: TempletType;\r\n        if (this.uiSchema !== undefined) {\r\n            Templet = this.uiSchema.Templet;\r\n        }\r\n        if (Templet !== undefined) {\r\n            this.formContext = new FormContext(this, true);\r\n            return typeof(Templet) === 'function'? Templet(this.data) : Templet;\r\n        }\r\n\r\n        this.formContext = new FormContext(this, false);\r\n        return <>{this.schema.map((v, index) => {\r\n            return <React.Fragment key={index}>{factory(this.formContext, v, children)}</React.Fragment>\r\n        })}</>;\r\n    }\r\n\r\n    private initData(formData: any) {\r\n        if (formData === undefined) formData = {};\r\n        for (let itemSchema of this.schema) {\r\n            this.initDataItem(itemSchema, this.data, formData);\r\n        }\r\n    }\r\n\r\n    private initDataItem(itemSchema: ItemSchema, data:any, formData: any):any {\r\n        let {name, type} = itemSchema;\r\n        if (type === 'button') return;\r\n        if (type !== 'arr') {\r\n            data[name] = formData[name];\r\n            return;\r\n        }\r\n\r\n        let arrItem:ArrSchema = itemSchema as ArrSchema;\r\n        let {arr:arrItems} = arrItem;\r\n        if (arrItems === undefined) return;\r\n        let arrDict = arrItem.itemSchemas = {};\r\n        for (let item of arrItems) {\r\n            arrDict[item.name] = item;\r\n        }\r\n        let val:any[] = formData[name];\r\n        if (val === undefined) val = [];\r\n        else if (Array.isArray(val) === false) val = [val];\r\n        let arr:any[] = [];\r\n        for (let row of val) {\r\n            let {$isSelected, $isDeleted} = row;\r\n            let r = {\r\n                $source: row,\r\n                $isSelected: $isSelected,\r\n                $isDeleted: $isDeleted,\r\n            };\r\n            for (let item of arrItems) {\r\n                this.initDataItem(item, r, row);\r\n                /*\r\n                let {name:nm} = item;\r\n                let v = row[nm];\r\n                if (v === undefined) v = null;\r\n                r[nm] = v;\r\n                */\r\n            }\r\n            arr.push(r);\r\n        }\r\n        //data[name] = observable(arr);\r\n        data[name] = arr;\r\n        return;\r\n    }\r\n\r\n    private watch = () => {\r\n        let {formData} = this.props;\r\n        if (formData === undefined) return;\r\n        //this.initData(formData);\r\n        this.calcSelectOrDelete();\r\n    }\r\n    private calcSelectOrDelete() {\r\n        for (let itemSchema of this.schema) {\r\n            this.arrItemOperated(itemSchema);\r\n        }\r\n    }\r\n\r\n    private arrItemOperated(itemSchema: ItemSchema) {\r\n        let {name, type} = itemSchema;\r\n        if (type !== 'arr') return;\r\n        if (this.data === undefined) return;\r\n        let formArrVal = this.data[name];\r\n        if (formArrVal === undefined) return;\r\n        let {arr: arrItems} = itemSchema as ArrSchema;\r\n        for (let row of formArrVal) {\r\n            let {$source} = row;\r\n            if ($source === undefined) continue;\r\n            let {$isSelected, $isDeleted} = $source;\r\n            row.$isSelected = $isSelected;\r\n            row.$isDeleted = $isDeleted;\r\n            //console.log($isSelected, $isDeleted);\r\n            for (let item of arrItems) {\r\n                this.arrItemOperated(item);\r\n            }\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        let {beforeShow} = this.props;\r\n        if (beforeShow !== undefined) beforeShow(this.formContext);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        if (this.disposer !== undefined) this.disposer();\r\n    }\r\n\r\n    render() {\r\n        let content = this.renderContent();\r\n        return <ContextContainer.Provider value={this.formContext}>\r\n            <this.formContext.renderErrors />\r\n            {this.Container(content)}\r\n        </ContextContainer.Provider>;\r\n    }\r\n\r\n    async buttonClick(buttonName:string) {\r\n        this.formContext.checkRules()\r\n        if (this.formContext.hasError === true) return;\r\n\r\n        let {onButtonClick} = this.formContext.form.props;\r\n        if (onButtonClick === undefined) {\r\n            alert(`you should define form onButtonClick`);\r\n            return;\r\n        }\r\n        let ret = await onButtonClick(buttonName, this.formContext);\r\n        if (ret === undefined) return;\r\n        this.formContext.setError(buttonName, ret);\r\n    }\r\n\r\n    protected DefaultContainer = (content:JSX.Element): JSX.Element => {\r\n        return <form className={classNames(this.props.className)}>\r\n            {content}\r\n        </form>;\r\n    }\r\n    protected DefaultFieldContainer = (label:string|JSX.Element, content:JSX.Element): JSX.Element => {\r\n        let {fieldLabelSize} = this.props;\r\n\r\n        if (fieldLabelSize > 0) {\r\n            let labelView:any;\r\n            if (label === null) {\r\n                fieldLabelSize = 0;\r\n            }\r\n            else {\r\n                labelView = <label className={classNames('col-sm-' + fieldLabelSize, 'col-form-label')}>{label}</label>\r\n            }\r\n            let fieldCol = 'col-sm-' + (12 - fieldLabelSize);\r\n            return <div className=\"form-group row\">\r\n                {labelView}\r\n                <div className={fieldCol}>{content}</div>\r\n            </div>;\r\n        }\r\n        return <div className=\"form-group\">\r\n            {label===null? null:<label className=\"col-form-label\">{label}</label>}\r\n            {content}\r\n        </div>;\r\n    }\r\n    protected DefaultFieldClass:string = undefined;\r\n    protected DefaultButtonClass = 'text-center py-2';\r\n    protected DefaultRes:FormRes = resLang<FormRes>(formRes);\r\n\r\n    ArrContainer = (label:any, content:JSX.Element): JSX.Element => {\r\n        return <div>\r\n            <div className={classNames('small text-muted text-center bg-light py-1 px-3 mt-4 mb-1')}>{label}</div>\r\n            {content}\r\n        </div>;\r\n    }\r\n    RowContainer = (content:JSX.Element): JSX.Element => {\r\n        //return <div className=\"row\">{content}</div>;\r\n        let cn = classNames({\r\n            'py-3': true\r\n        });\r\n        return <div className={cn}>{content}</div>\r\n    }\r\n    RowSeperator = <div className=\"border border-gray border-top\" />;\r\n}\r\n","import * as React from 'react';\r\nimport { factory } from './widgets';\r\nimport { ContextContainer, Context } from './context';\r\n\r\nexport interface FieldProps {\r\n    name: string;\r\n}\r\n\r\nexport class Field extends React.Component<FieldProps> {\r\n    static contextType = ContextContainer;\r\n    render() {\r\n        let {name, children } = this.props;\r\n        let context:Context = this.context;\r\n        if (context === undefined) return <span className=\"text-danger\">!only in Form!</span>;\r\n        let itemSchema = context.getItemSchema(name);\r\n        let content = factory(context, itemSchema, children, this.props);\r\n        if (content === undefined) {\r\n            return <span className=\"text-danger\">!!{name} is not defined!!</span>;\r\n        }\r\n        return content;\r\n    }\r\n}\r\n","export {Form} from './form';\r\nexport {Field} from './field';\r\nexport {Context, RowContext} from './context';\r\n","import CN from './zh/CN';\r\n\r\nconst res = {\r\n    zh: {\r\n        CN: CN\r\n    }\r\n};\r\n\r\nexport default res;\r\n","import React from 'react';\r\nimport _ from 'lodash';\r\n\r\nexport default {\r\n    x: {\r\n        none: '[无]',\r\n        no: '编号',\r\n        team: '部门',\r\n        staff: '员工',\r\n        noStaff: '无员工',\r\n        post: '职位',\r\n        noPost: '无职位',\r\n        product: '产品',\r\n        pack: '包装',\r\n        a: 'aaa',\r\n        b: {\r\n            s: 'sss',\r\n            d: ()=><span className=\"text-success\">ddd</span>,\r\n        },\r\n        c: ()=><span className=\"text-danger\">ccc</span>,\r\n    },\r\n    usq: '百灵威订单',\r\n    tuid: '基础档案',\r\n    sheet: '单据',\r\n    map: '对照表',\r\n    tuidPlaceHolder: '点击选择',\r\n    none: '无内容',\r\n    submit: '提交',\r\n    arrNew: '新增',\r\n    arrEdit: '保存',\r\n    entity: {\r\n        product: {\r\n            label: '产品',\r\n            fields: {\r\n                discription: '描述',\r\n                packType: '基本包装类型',\r\n            },\r\n            arrs: {\r\n                pack: {\r\n                    label: '包装规格',\r\n                    fields: {\r\n                        ratio: '换算率',\r\n                        name: {label: '名称', placeHolder: '如果空，则显示换算率+基本包装类型'},\r\n                    },\r\n                }\r\n            }\r\n        },\r\n        packType: {\r\n            label: '包装类型',\r\n            fields: {\r\n                name: '名称',\r\n                discription: {label:'描述', placeHolder:'包装说明，不用于实际产品中'},\r\n            }\r\n        },\r\n        customer: {\r\n            label: '客户',\r\n            fields: {\r\n                discription: '描述',\r\n            }\r\n        },\r\n        order: {\r\n            x: {\r\n                //top: 'xxx-xxx-订单顶部说明'\r\n                top: ()=><>\r\n                    <h6>订单步骤</h6>\r\n                    <div>第一步：选定客户</div>\r\n                    <div>\r\n                        第二步：颜色变化\r\n                        <span className=\"text-success\">说明</span>\r\n                        <span className=\"text-danger\">文字</span>，解释做单的过程\r\n                    </div>\r\n                </>,\r\n                title: _.template('订单 ${customer} 金额${amount}元'),\r\n                detail: '订单-详情',\r\n            },\r\n            label: '订单',\r\n            arrNew: '新增',\r\n            arrEdit: '保存',\r\n            title: _.template('订单 客户${customer} 金额${amount}元'),\r\n            //arrTitleNewButton: <small>XXX新增</small>,\r\n            fields: {\r\n                customer: '客户',\r\n                fromUnit: '发送部门',\r\n                type: '类型',\r\n                date: '日期',\r\n                subject: '主题',\r\n                discription: '描述',\r\n                content: '内容'\r\n            },\r\n            arrs: {\r\n                products: {\r\n                    label: '产品明细',\r\n                    fields: {\r\n                        product: {label: '产品', placeHolder: '点击选择产品'},\r\n                        pack: {label: '包装规格', placeHolder: '点击选择包装规格'},\r\n                        price: {label: '单价', suffix: '元'},\r\n                        quantity: {label: '数量'},\r\n                        amount: {label: '金额', suffix: '元'},\r\n                    }\r\n                }\r\n            },\r\n            states: {\r\n                $: {\r\n                    label: '新开单',\r\n                    actions: {\r\n                        submit: {\r\n                            label: '新单提交',\r\n                        }\r\n                    }\r\n                },\r\n                deliver: {\r\n                    label: '发货',\r\n                    actions: {\r\n                        finish: {\r\n                            label: '完成发货',\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        },\r\n        price: {\r\n            label: '产品价格表',\r\n            x: {\r\n                none: '[无包装]',\r\n            }\r\n        },\r\n        getMessage: {\r\n            label: '获取Message',\r\n            submit: '获取消息',\r\n            fields: {\r\n                msg: '消息'\r\n            }\r\n        },\r\n        newMessage: {\r\n            label: '新建消息',\r\n            fields: {\r\n                type: '类型',\r\n                subject: '主题',\r\n            },\r\n            arrs: {\r\n                to: {\r\n                    label: '发送',\r\n                    newSubmit: '新增to',\r\n                    editSumbit: '保存to',\r\n                },\r\n                cc: {\r\n                    label: '抄送',\r\n                    newSubmit: '新增cc',\r\n                    editSumbit: '保存cc',\r\n                }\r\n            }\r\n        },\r\n        sectionTeam: {\r\n            label: '大部设置',\r\n        },\r\n        teamPerson: {\r\n            label: '部门员工职位',\r\n            fields: {\r\n            },\r\n            confirmDelete: _.template('真的要删除${label}吗'),\r\n        },\r\n        teamOrganization: {\r\n            label: '部门机构对照表',\r\n        },\r\n        teamPosts: {\r\n            label: '部门职位',\r\n        },\r\n        person: {\r\n            label: '员工',\r\n            fields: {\r\n                name: '姓名',\r\n                nick: '别名',\r\n                given: '名字',\r\n                sur: '姓',\r\n                gender: '性别',\r\n                user: '用户',\r\n            }\r\n        },\r\n        organization: {\r\n            label: '组织结构',\r\n            arrs: {\r\n                post: {\r\n                    label: '职位',\r\n                }\r\n            }\r\n        },\r\n        user: {\r\n            label: '用户'\r\n        }\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport { LMR, Muted } from 'tonva-react-form';\r\nimport { tv, TuidUI, FieldTuidUI } from 'tonva-react-uq';\r\n\r\nconst customer:TuidUI = {\r\n    content: (values) => {\r\n        let {id, discription} = values;\r\n        return <>{discription || 'id ' + id + ' ...'}</>;\r\n    },\r\n    rowContent: (row):JSX.Element => {\r\n        let {discription} = row;\r\n        let right = <Muted>{}</Muted>;\r\n        return <LMR className=\"px-3 py-2\" left={discription} right={right}/>\r\n    },\r\n};\r\n\r\nconst productPackRowContent = observer((values) => {\r\n    let {id, ratio, name, $owner} = values;\r\n    let content, rText = String(ratio);\r\n    if ($owner !== undefined) {\r\n        let packType = $owner.valueFromFieldName('packType');\r\n        if (packType !== undefined) {\r\n            let packName = packType.valueFromFieldName? packType.valueFromFieldName('name') : packType['name'];\r\n            if (packName) {\r\n                if (name) content = name + ' = ' + (rText + packName);\r\n                else content = (rText + packName);\r\n            }\r\n        }\r\n    }\r\n    if (content === undefined) content = (name? name + ' ' + rText : rText) + ' err: no $owner in values';\r\n    return <div className=\"px-3 py-2\">{content}</div>;\r\n});\r\n\r\nconst product:TuidUI = {\r\n    content: (values) => {\r\n        let {id, discription} = values;\r\n        return <>{discription || 'id ' + id + ' ...'}</>;\r\n    },\r\n    rowContent: observer((row):JSX.Element => {\r\n        let {discription, packType} = row;\r\n        let right;\r\n        if (packType && packType.content) {\r\n            right = <Muted>{tv(packType)}</Muted>;\r\n        }\r\n        return <LMR className=\"px-3 py-2\" left={discription} right={right}/>\r\n    }),\r\n    divs: {\r\n        pack: {\r\n            content: observer((values) => {\r\n                let {id, ratio, name, $owner} = values;\r\n                if ($owner === undefined)\r\n                    return <>{name || ratio || 'id' + id + ' ...'}</>;\r\n                let packType = $owner.valueFromFieldName('packType');\r\n                return <>{name || (ratio + (packType && packType.name)) || 'id' + id + ' ...'}</>;\r\n            }),\r\n            rowContent: productPackRowContent,\r\n        }\r\n    },\r\n    form: {\r\n        items: {\r\n            packType: {\r\n                autoList: true,\r\n            } as FieldTuidUI,\r\n            pack: {\r\n                rowContent: productPackRowContent,\r\n            }\r\n        }\r\n    }\r\n};\r\n\r\nconst packType:TuidUI = {\r\n    content: (values) => {\r\n        let {id, name, discription} = values;\r\n        return <>{discription || name || 'id ' + id + ' ...'}</>;\r\n    },\r\n    rowContent: (row):JSX.Element => {\r\n        let {name, discription} = row;\r\n        let right = <Muted>{discription}</Muted>;\r\n        return <LMR className=\"px-3 py-2\" left={name} right={right}/>\r\n    },\r\n};\r\n\r\nexport default {\r\n    customer: customer,\r\n    product: product,\r\n    packType: packType,\r\n}\r\n","import * as React from 'react';\r\nimport { SheetUI, tv } from 'tonva-react-uq';\r\nimport { VSheetNew } from './vNew';\r\nimport { observer } from 'mobx-react';\r\n\r\nconst orderUI:SheetUI = {\r\n    sheetNew: VSheetNew,\r\n    sheetTitle: (valuesWithBox:any, x:any):string => {\r\n        let title = x.title;\r\n        let {customer, amount} = valuesWithBox;\r\n        let p = {customer: customer.obj.discription, amount: amount||99};\r\n        return title(p);\r\n    },\r\n    form: {\r\n        items: {\r\n            customer: {editable: false},\r\n            sumAmount: ():number => {\r\n                return 1;\r\n            },\r\n            products: {\r\n                rowContent: observer((values:any) => {\r\n                    let { product, pack, price, quantity} = values;\r\n                    return <div className=\"row px-3 py-2\">\r\n                        <div className=\"col-8\">\r\n                            <div className=\"text-primary\">{tv(product)}</div>\r\n                            <div className=\"small\">{tv(pack)}</div>\r\n                        </div>\r\n                        <div className='col-2 text-right'>\r\n                            <span className=\"text-danger h5 mb-0\">{price.toFixed(2)}</span> <small>元</small>\r\n                        </div>\r\n                        <div className='col-2'>{quantity}</div>\r\n                    </div>;\r\n                }),\r\n                items: {\r\n                    product: {editable:false},\r\n                    pack: {editable:false},\r\n                    price: {editable:false},\r\n                    amount: function(this:any):number {\r\n                        return (this.quantity === undefined || this.quantity === null? 0 : this.quantity) * \r\n                            (this.price === undefined || this.price === null? 0 : this.price);\r\n                    }\r\n                },\r\n            }\r\n        },\r\n    }\r\n};\r\n\r\nexport default orderUI;\r\n","import * as React from 'react';\r\nimport { SheetUI } from 'tonva-react-uq';\r\nimport orderUI from './order';\r\n\r\nexport default {\r\n    order: orderUI,\r\n}\r\n","import * as React from 'react';\r\nimport { Page } from 'tonva-tools';\r\nimport { FA, List } from 'tonva-react-form';\r\nimport { tv, Sheet, VForm, VEntity, SheetUI, TuidMain, CSheet, CTuidSelect, Map } from 'tonva-react-uq';\r\n\r\ninterface PackRow {\r\n    pack: number;\r\n    price: number;\r\n    quantity: number;\r\n    amount:number;\r\n}\r\n\r\ninterface ProductRow {\r\n    product: number;\r\n    packRows: PackRow[];\r\n}\r\n\r\nexport class VSheetNew extends VEntity<Sheet, SheetUI, CSheet> {\r\n    private customer: any;\r\n    private product: any;\r\n    private vForm: VForm;\r\n    private cCustomerSelect: CTuidSelect;\r\n    private cProductSelect: CTuidSelect;\r\n    private mapPrice: Map;\r\n\r\n    async open(param?:any) {\r\n        //this.controller.vSheetNew = this;\r\n        let cUq = this.controller.cUq;\r\n        this.mapPrice = cUq.map('price');\r\n        let customer = cUq.tuid('customer');\r\n        this.cCustomerSelect = cUq.cTuidSelect(customer);\r\n        let product = cUq.tuid('product');\r\n        this.cProductSelect = cUq.cTuidSelect(product);\r\n\r\n        this.vForm = this.createForm(this.onSubmit, param);\r\n        let productsBand = this.vForm.getBand('products');\r\n        productsBand.setAddRow(this.addRow);\r\n        this.openPage(this.step1SelectCustomer);\r\n    }\r\n\r\n    private onSubmit = async ():Promise<void> => {\r\n        let values = this.vForm.getValues();\r\n        let valuesWithBox = this.vForm.values;\r\n        //let ret = \r\n        await this.controller.onSave(values, valuesWithBox);\r\n        /*\r\n        this.ceasePage();\r\n        //this.openPage(this.finishedPage);\r\n        await this.controller.showSaved(ret);\r\n        */\r\n    }\r\n    /*\r\n    protected view = () => <Page header={this.label}>\r\n        {this.vForm.render()}\r\n    </Page>;\r\n    */\r\n    private addRow = async() => {\r\n        await this.selectProduct();\r\n    }\r\n\r\n    private step1Next = async () => {\r\n        this.ceasePage();\r\n        this.customer = await this.cCustomerSelect.call('');\r\n        this.openPage(this.orderPage);\r\n        this.openPage(this.customerPage);\r\n    }\r\n\r\n    private conformOrder = async () => {\r\n        this.ceasePage();\r\n        let {entity} = this.cCustomerSelect;\r\n        entity.useId(this.customer.id);\r\n        this.vForm.setValue('customer', entity.boxId(this.customer.id));\r\n        await this.selectProduct();\r\n    }\r\n\r\n    private async getPrices(productId:number):Promise<any[]> {\r\n        let ret = await this.mapPrice.table({product: productId});\r\n        return ret;\r\n    }\r\n\r\n    addProductRows = async ({product, packRows}: ProductRow) => {\r\n        let {entity} = this.cProductSelect;\r\n        entity.useId(product);\r\n        let packEntity = (entity as TuidMain).divs['pack'];\r\n        let vArr = this.vForm.vArrs['products'];\r\n        let {list} = vArr;\r\n        for (let packRow of packRows) {\r\n            let {pack, price, quantity, amount} = packRow;\r\n            //packEntity.useId(pack);\r\n            list.push({\r\n                product: entity.boxId(product),\r\n                pack: pack, //packEntity.createID(pack),\r\n                price: price,\r\n                quantity: quantity,\r\n                amount: amount,\r\n            });\r\n        }\r\n        this.product = undefined;\r\n        await this.selectProduct();\r\n    }\r\n\r\n    private selectProduct = async () => {\r\n        this.product = await this.cProductSelect.call();\r\n        this.priceRows = await this.getPrices(this.product.id);\r\n        //this.openVPage(VProductPage, {product:this.product, priceRows: prices});\r\n        this.openPage(this.productPage);\r\n    }\r\n\r\n    private stopOrder = () => {\r\n        this.closePage();\r\n    }\r\n    /*\r\n    private onSubmit = async () => {\r\n        let values = this.form.getValues();\r\n        let valuesWithBox = this.form.values;\r\n        //let ret = await this.saveSheet(values, this.form.values);\r\n        await this.controller.onSave(values, valuesWithBox)\r\n        //alert('[' + this.label + '] 已保存: ' + jsonStringify(ret));\r\n        this.ceasePage();\r\n        //this.openPage(<this.finishedPage />);\r\n        //await this.showSaved(ret);\r\n    }\r\n    */\r\n\r\n    private step1SelectCustomer = () => {\r\n        return <Page header=\"新建订单\">\r\n            <div className=\"p-3 d-flex align-items-center flex-column\">\r\n                {(this.x.top as (()=>string|JSX.Element))()}\r\n            </div>\r\n            <div className=\"p-3 d-flex justify-content-center\">\r\n                <button className=\"w-25 btn btn-primary\" onClick={this.step1Next}>开始</button>\r\n            </div>\r\n        </Page>;\r\n    }\r\n\r\n    private customerPage = () => {\r\n        return <Page header=\"确认客户\">\r\n            <div className=\"p-3\">\r\n                客户详情，信用，收货地址，收款信息，等等\r\n            </div>\r\n            {this.cCustomerSelect.createForm(undefined, this.customer).render()}\r\n            <div className=\"p-3 d-flex justify-content-center\">\r\n                <button className=\"w-25 btn btn-primary\" onClick={this.conformOrder}>确认开单</button>\r\n                <button className=\"mx-3 btn btn-outline-secondary\" onClick={this.stopOrder}>拒绝</button>\r\n            </div>\r\n        </Page>;\r\n    }\r\n\r\n    private orderPage = ():JSX.Element => {\r\n        return <Page header={this.x.detail}>\r\n            {this.vForm.render()}\r\n        </Page>;\r\n    };\r\n\r\n    //======================= select Product =================================\r\n    private priceRows: any[];\r\n    private inputs:{[packId:number]: HTMLInputElement} = {};\r\n\r\n    private addProduct = async () => {\r\n        this.ceasePage();\r\n        let packRows:PackRow[] = [];\r\n        for (let priceRow of this.priceRows) {\r\n            let {pack, retail} = priceRow;\r\n            let quantity = Number.parseFloat(this.inputs[pack.id].value);\r\n            if (Number.isNaN(quantity)) continue;\r\n            let packRow:PackRow = {\r\n                pack: pack,\r\n                quantity: quantity,\r\n                price: retail,\r\n                amount: retail*quantity,\r\n            };\r\n            packRows.push(packRow);\r\n        }\r\n        await this.addProductRows({\r\n            product: this.product.id,\r\n            packRows: packRows\r\n        });\r\n    }\r\n    private refQuantity = (input:HTMLInputElement, packId:number) => {\r\n        this.inputs[packId] = input;\r\n    }\r\n    private renderPack = (packRow:any, index:number) => {\r\n        let {pack, retail} = packRow;\r\n        return <div className=\"px-3 py-1 d-flex\">\r\n            <div className=\"row py-1 align-items-center flex-fill\">\r\n                <div className=\"col-sm-6\">{tv(pack)}</div>\r\n                <div className=\"col-sm-6\">\r\n                    <div className=\"row align-items-center\">\r\n                        <div className=\"col-6 text-sm-right\"><span className=\"text-danger\">{retail}</span> 元</div>\r\n                        <div className=\"col-6\">\r\n                            <input className=\"text-center form-control form-control-sm\" \r\n                                ref={(input:HTMLInputElement)=>this.refQuantity(input, pack.id)} \r\n                                type=\"number\" min={0} />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>;\r\n    }\r\n    private productPage = () => {\r\n        let {discription} = this.product\r\n        return <Page header=\"选定产品\">\r\n            <div className=\"p-3 text-primary bg-white my-3\">\r\n                {discription}\r\n            </div>\r\n            <List items={this.priceRows} item={{render:this.renderPack}} />\r\n            <div className=\"p-3 d-flex justify-content-center\">\r\n                <button className=\"w-25 btn btn-primary\" onClick={this.addProduct}>加入订单</button>\r\n            </div>\r\n        </Page>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { MapUI, tv } from \"tonva-react-uq\";\r\nimport { Muted } from 'tonva-react-form';\r\n\r\nconst priceUI:MapUI = {\r\n    //CMap: CMapTeamPerson,\r\n    //label: '部门员工对照表',\r\n    //main: VMapTeamPerson,\r\n    keys: [\r\n        {\r\n            content: ({discription, id}:any, x:any) => <><Muted>{x.product}</Muted> &nbsp; {discription}</>,\r\n            none: (x:any)=>x.none,\r\n        },\r\n        {\r\n            content: (values:any, x:any) => {\r\n                let {name, id, discription, $owner} = values;\r\n                return <><Muted>{x.pack}</Muted> &nbsp; </>;\r\n            },\r\n            valuesContent: (values:any, x:any) => {\r\n                let {pack, retail} = values;\r\n                return <div className=\"px-0 py-1\"><div className=\"d-inline-block w-25\">{tv(pack)}</div> {retail} 元</div>;\r\n            },\r\n            none: (x:any)=>x.noPost,\r\n        },\r\n    ]\r\n}\r\n\r\nexport default {\r\n    price: priceUI,\r\n};\r\n\r\nexport class A extends React.Component {\r\n    render() {\r\n        return <div>dd</div>;\r\n    }\r\n}","//import * as React from 'react';\r\n//import Loadable from 'react-loadable';\r\nimport { UqUI } from 'tonva-react-uq';\r\nimport res from './res';\r\nimport tuid from './tuid';\r\nimport sheet from './sheet';\r\nimport map from './map';\r\n\r\n/*\r\nfunction Loading() {\r\n    return <div>Loading...</div>;\r\n}\r\n\r\nconst m = Loadable({\r\n    loader: () => import('./map'), \r\n    loading: Loading,\r\n    render(loaded, props) {\r\n        return <loaded.A />\r\n    }\r\n});\r\n*/\r\nconst uqUI:UqUI = {\r\n    //CTuidMain: MyCTuid,\r\n    tuid: tuid,\r\n    sheet: sheet,\r\n    map: map,\r\n    //query: query,\r\n    res: res,\r\n}\r\n\r\nexport const aa_bbJkOrder:UqUI = {\r\n    tuid: {\r\n        customer: tuid.customer,\r\n        product: tuid.product,\r\n        //packType: tuid.packType,\r\n    }\r\n}\r\n\r\nconst uqUIs = uqUI;\r\n/*\r\n{\r\n    $: uqUI,\r\n    \"aa-bb\": aa_BB_UsqUI,\r\n}\r\n*/\r\nexport default uqUIs;\r\n","import * as React from 'react';\r\nimport {observer} from 'mobx-react';\r\nimport classNames from 'classnames';\r\nimport '../css/va-badge.css';\r\n\r\nexport interface BadgeProps {\r\n    className?: string;\r\n    badge?: string|number;\r\n    size?: 'xs' | 'sm' | 'lg';\r\n    color?: 'secondary'|'success'|'danger'|'primary'|'info'|'warning';\r\n    badgeAlign?: 'left'|'center'|'right';\r\n    badgeVertical?: 'top'|'middle'|'bottom';\r\n}\r\n\r\n@observer\r\nexport class Badge extends React.Component<BadgeProps> {\r\n    render() {\r\n        let {className, badge, size, color, badgeAlign, badgeVertical, children} = this.props;\r\n        let cn = classNames(\r\n            className,\r\n            'va-badge',\r\n            size && 'va-badge-'+size,\r\n            'va-badge-' + (color||'secondary'),\r\n            badgeAlign && 'va-badg-'+badgeAlign,\r\n            badgeVertical && 'va-badg-'+badgeVertical,\r\n        );\r\n        let b;\r\n        if (badge) b = <b>{badge}</b>;\r\n        return <div className={cn}>\r\n            {children}\r\n            {b}\r\n        </div>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {observer} from 'mobx-react';\r\nimport * as classNames from 'classnames';\r\nimport '../css/va-lmr.css';\r\n\r\nexport interface LMRProps {\r\n    className?: string | string[];\r\n    left?: string|JSX.Element;\r\n    right?: string|JSX.Element;\r\n    onClick?: ()=>void;\r\n}\r\n\r\n@observer\r\nexport class LMR extends React.Component<LMRProps> {\r\n    render() {\r\n        let {className, left, children, right, onClick} = this.props;\r\n        let l, r;\r\n        if (left !== undefined) l = <header>{left}</header>;\r\n        if (right !== undefined) r = <footer>{right}</footer>;\r\n        let cursor;\r\n        if (onClick !== undefined) cursor = 'cursor-pointer';\r\n        return <div className={classNames('va-lmr', className, cursor)} onClick={onClick}>\r\n            {l}\r\n            <div>{children}</div>\r\n            {r}\r\n        </div>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport * as classNames from 'classnames';\r\n\r\nexport interface FAProps {\r\n    name: string;\r\n    className?: string;\r\n    size?: 'lg'|'2x'|'3x'|'4x'|'5x';\r\n    spin?: boolean;\r\n    fixWidth?: boolean;\r\n    border?: boolean;\r\n    pull?: 'left'|'right';\r\n    pulse?: boolean;\r\n    rotate?: 90|180|270;\r\n    flip?: 'horizontal'|'vertical';\r\n    inverse?: boolean;\r\n}\r\n\r\nexport class FA extends React.Component<FAProps> {\r\n    render() {\r\n        let {name, className, size, spin, fixWidth, border, pull, pulse, rotate, flip, inverse} = this.props;\r\n        let cn = classNames(className, 'fa',\r\n            name && ('fa-' + name),\r\n            size && 'fa-'+size,\r\n            fixWidth && 'fa-fw',\r\n            border && 'fa-border',\r\n            pull && 'fa-pull-' + pull,\r\n            spin && 'fa-spin',\r\n            pulse && 'fa-pulse',\r\n            rotate && 'fa-rotate-' + rotate,\r\n            flip && 'fa-flip-' + flip,\r\n            inverse && 'fa-inverse',\r\n        );\r\n        return <i className={cn} />\r\n    }\r\n}\r\n\r\nexport interface StackedFAProps {\r\n    className?: string;\r\n    size?: 'lg',\r\n}\r\nexport class StackedFA extends React.Component<StackedFAProps> {\r\n    render() {\r\n        let {className, size, children} = this.props;\r\n        let cn = classNames(\r\n            'fa-stack',\r\n            className,\r\n            size && 'fa-' + size);\r\n        return <span className={cn}>\r\n            {children}\r\n        </span>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport * as classNames from 'classnames';\r\n\r\nexport const Muted = (props:any) => \r\n<small className={classNames('text-muted', props.className)} style={props.style}>\r\n    {props.children}\r\n</small>;\r\n","export * from './Badge';\r\nexport * from './LMR';\r\nexport * from './FA';\r\nexport * from './IconText';\r\nexport * from './Muted';\r\n","import * as React from 'react';\r\nimport { IObservableArray, computed } from 'mobx';\r\nimport { PageItems } from 'tonva-tools';\r\nimport {List} from './index';\r\n\r\nexport abstract class ListBase {\r\n    protected list: List;\r\n    constructor(list: List) {\r\n        this.list = list;\r\n    }\r\n    get isPaged():boolean {\r\n        let items = this.list.props.items;\r\n        return (items !== null && items !== undefined && Array.isArray(items) === false);\r\n    }\r\n    get items():any[]|IObservableArray<any> {\r\n        let items = this.list.props.items;\r\n        if (items === null) return null;\r\n        if (items === undefined) return undefined;\r\n        if (Array.isArray(items) === true)\r\n            return items as IObservableArray<any>;\r\n        else\r\n            return (items as PageItems<any>).items;\r\n    }\r\n    @computed get loading():boolean {\r\n        let items = this.list.props.items;\r\n        if (items === null) return false;\r\n        if (items === undefined) return true;\r\n        let pageItems = items as PageItems<any>;\r\n        if (pageItems.items === undefined) return false;\r\n        return pageItems.loading;\r\n    }\r\n    get selectedItems():any[] { return; }\r\n    updateProps(nextProps:any) {}\r\n    abstract render(item:any, index:number):JSX.Element;\r\n    protected renderContent(item:any, index:number) {\r\n        let {render} = this.list.props.item;\r\n        if (render === undefined) return <div className=\"px-3 py-2\">{JSON.stringify(item)}</div>;\r\n        return render(item, index);\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport * as classNames from 'classnames';\r\nimport {ListBase} from './base';\r\n\r\nexport class Clickable extends ListBase {\r\n    render(item:any, index:number):JSX.Element {\r\n        let {className, key, onClick} = this.list.props.item;\r\n        return <li key={key===undefined?index:key(item)} className={classNames('va-row-clickable', className)} onClick={()=>onClick(item)}>\r\n            {this.renderContent(item, index)}\r\n        </li>\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport * as classNames from 'classnames';\r\nimport {ListBase} from './base';\r\nimport { uid } from '../uid';\r\n\r\nexport class Static extends ListBase {\r\n    render(item:any, index:number):JSX.Element {\r\n        let {className, key, render} = this.list.props.item;\r\n        if (typeof item === 'string') {\r\n            let cn = classNames('va-list-gap', 'px-3', 'pt-1');\r\n            return <li key={uid()} className={cn}>{item}</li>;\r\n        }\r\n        return <li key={key===undefined?index:key(item)} className={classNames(className)}>\r\n            {this.renderContent(item, index)}\r\n        </li>\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {observable, computed, IObservableArray} from 'mobx';\r\nimport * as classNames from 'classnames';\r\nimport {ListBase} from './base';\r\nimport {uid} from '../uid';\r\nimport { PageItems } from 'tonva-tools';\r\n\r\nexport interface SelectableItem {\r\n    selected: boolean;\r\n    item: any;\r\n    labelId: string;\r\n}\r\n\r\nexport class Selectable extends ListBase {\r\n    private _items: SelectableItem[];\r\n    private _selectedItems: any[];\r\n    private input: HTMLInputElement;\r\n    private buildItems() {\r\n        console.log('buildItems in selectable.tsx');\r\n        let {items, selectedItems, compare} = this.list.props;\r\n        let itemsArray:any[] | IObservableArray<any>;\r\n        if (items === undefined) {\r\n            return this._items = undefined;\r\n        }\r\n        if (items === null) {\r\n            return this._items = null;\r\n        }\r\n        if (Array.isArray(items) === true) {\r\n            itemsArray = items as any;\r\n        }\r\n        else {\r\n            itemsArray = (items as PageItems<any>).items;\r\n        }\r\n        //let items = this.items;\r\n        this._selectedItems = selectedItems;\r\n        if (selectedItems === undefined) {\r\n            return this._items = itemsArray.map(v => {\r\n                return {\r\n                    selected:false, \r\n                    item:v, \r\n                    labelId:uid()\r\n                };\r\n            });\r\n        }\r\n        if (compare === undefined) {\r\n            return this._items = itemsArray.map(v => {\r\n                return {\r\n                    selected:selectedItems.find(si => si === v) !== undefined, \r\n                    item:v, \r\n                    labelId:uid()\r\n                };\r\n            });\r\n        }\r\n        return this._items = itemsArray.map(v => {\r\n            return {\r\n                selected:selectedItems.find(si => compare(v, si)) !== undefined, \r\n                item:v, \r\n                labelId:uid()\r\n            };\r\n        });\r\n    }\r\n    @computed get items() {\r\n        //if (this._items === undefined) \r\n        this.buildItems();\r\n        return this._items;\r\n    }\r\n    updateProps(nextProps:any) {\r\n        if (nextProps.selectedItems === this._selectedItems) return;\r\n        this.buildItems();\r\n    }\r\n    private onSelect(item:SelectableItem, selected:boolean) {\r\n        item.selected = selected;\r\n        let anySelected = this._items.some(v => v.selected);\r\n        this.list.props.item.onSelect(item.item, selected, anySelected);\r\n    }\r\n    \r\n    get selectedItems():any[] {\r\n        return this._items.filter(v => v.selected === true).map(v => v.item);\r\n    }\r\n    /*\r\n    set selectedItems(value: any[]) {\r\n        if (value === undefined) return;\r\n        if (this._items === undefined) return;\r\n        let sLen = this._items.length;\r\n        let list = value.slice();\r\n        for (let n=0; n<sLen; n++) {\r\n            let sItem = this._items[n];\r\n            let len = list.length;\r\n            if (len === 0) break;\r\n            let item = sItem.item;\r\n            for (let i=0; i<len; i++) {\r\n                let v = list[i];\r\n                if (item === v) {\r\n                    sItem.selected = true;\r\n                    value.splice(i, 1);\r\n                    break;\r\n                }\r\n            }\r\n        };\r\n    }\r\n    */\r\n    //w-100 mb-0 pl-3\r\n    //m-0 w-100\r\n    render(item:SelectableItem, index:number):JSX.Element {\r\n        let {className, key, render, onSelect} = this.list.props.item;\r\n        let {labelId, selected} = item;\r\n        return <li key={key===undefined?index:key(item)} className={classNames(className)}>\r\n            <div className=\"d-flex align-items-center px-3\">\r\n                <input ref={input=>{\r\n                        if (!input) return;\r\n                        this.input = input; input.checked = selected;\r\n                    }}\r\n                    className=\"\" type=\"checkbox\" value=\"\" id={labelId}\r\n                    defaultChecked={selected}\r\n                    onChange={(e)=>{\r\n                        this.onSelect(item, e.target.checked)} \r\n                    }/>\r\n                <label className=\"\" style={{flex:1, marginBottom:0}} htmlFor={labelId}>\r\n                    {this.renderContent(item.item, index)}\r\n                </label>\r\n            </div>\r\n        </li>\r\n    }\r\n}\r\n/*\r\n<label>\r\n<label className=\"custom-control custom-checkbox\">\r\n    <input type='checkbox' className=\"custom-control-input\"\r\n        //checked={selected}\r\n        onChange={(e)=>this.onSelect(item, e.target.checked)} />\r\n    <span className=\"custom-control-indicator\" />\r\n</label>\r\n{this.renderContent(item.item, index)}\r\n</label>\r\n*/\r\n","import * as React from 'react';\r\nimport classNames from 'classnames';\r\nimport {observer} from 'mobx-react';\r\nimport {PageItems} from 'tonva-tools';\r\nimport {ListBase} from './base';\r\nimport {Clickable} from './clickable';\r\nimport {Static} from './static';\r\nimport {Selectable} from './selectable';\r\nimport \"../css/va-list.css\";\r\nimport { IObservableArray } from 'mobx';\r\n\r\ntype StaticRow = string|JSX.Element|(()=>string|JSX.Element);\r\n\r\nexport interface ListProps {\r\n    className?: string|string[];\r\n    items: any[] | IObservableArray<any> | PageItems<any>;\r\n    item: {\r\n        className?: string|string[];\r\n        render?: (item:any, index:number) => JSX.Element;\r\n        onSelect?: (item:any, isSelected:boolean, anySelected:boolean)=>void;\r\n        onClick?: (item:any)=>void;\r\n        key?: (item:any)=>string;\r\n    };\r\n    compare?:(item:any, selectItem)=>boolean;\r\n    selectedItems?:any[];\r\n    header?: StaticRow;\r\n    footer?: StaticRow;\r\n    before?: StaticRow;\r\n    loading?: StaticRow;\r\n    none?: StaticRow;\r\n}\r\n\r\n@observer\r\nexport class List extends React.Component<ListProps> {\r\n    private listBase: ListBase;\r\n    constructor(props:ListProps) {\r\n        super(props);\r\n        let {item} = this.props;\r\n        let {onClick, onSelect} = item;\r\n        if (onSelect !== undefined)\r\n            this.listBase = new Selectable(this);\r\n        else if (onClick !== undefined)\r\n            this.listBase = new Clickable(this);\r\n        else\r\n            this.listBase = new Static(this);\r\n    }\r\n    _$scroll = (direct: 'top'|'bottom') => {\r\n        console.log('############### items scroll to ' + direct);\r\n    }\r\n    componentWillUpdate(nextProps:ListProps, nextState, nextContext) {\r\n        this.listBase.updateProps(nextProps);\r\n    }\r\n    get selectedItems():any[] {\r\n        return this.listBase.selectedItems;\r\n    }\r\n    render() {\r\n        let {className, header, footer, before, loading, none, item, selectedItems} = this.props;\r\n        if (before === undefined) before = 'before';\r\n        if (loading === undefined) loading = 'loading';\r\n        if (none === undefined) none = 'none';        \r\n        //this.listBase.selectedItems = selectedItems;\r\n        let {isPaged, items, loading:isLoading} = this.listBase;\r\n        function staticRow(row:StaticRow, type:string) {\r\n            if (!row) return;\r\n            switch (typeof row) {\r\n                default:\r\n                case 'string': return <li className={\"va-list-\"+type}>{row}</li>;\r\n                case 'function': return <li className={\"va-list-\"+type}>{(row as ()=>string|JSX.Element)()}</li>;\r\n                case 'object': return <li>{row}</li>\r\n            } \r\n        }\r\n        let content:any;\r\n        if (items === null)\r\n            content = staticRow(before, 'before');\r\n        else if (items === undefined)\r\n            content = staticRow(loading, 'loading');\r\n        else if (items.length === 0)\r\n            content = staticRow(none, 'none');\r\n        else {\r\n            content = items.map((item, index) => {\r\n                return this.listBase.render(item, index);\r\n            });\r\n        }\r\n        return <ul className={classNames('va-list', className)}>\r\n            {staticRow(header, 'header')}\r\n            {content}\r\n            {staticRow(footer, 'footer')}\r\n        </ul>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {observer} from 'mobx-react';\r\nimport * as className from 'classnames';\r\nimport {ListView} from '../listView';\r\nimport {PropGridProps} from './PropGrid';\r\nimport {LabeledProp, StringProp, NumberProp, ListProp, ComponentProp} from './propView';\r\n\r\nexport abstract class PropRow {\r\n    setValues(values: any) {}\r\n    abstract render(key:string): any;\r\n}\r\n\r\nexport class PropBorder extends PropRow {\r\n    render(key:string): JSX.Element {\r\n        return <div key={'_b_' + key} className=\"\">\r\n            <div className=\"col-sm-12\">\r\n                <div style={{borderTop: '1px solid #f0f0f0'}} />\r\n            </div>\r\n        </div>;\r\n    }\r\n}\r\n\r\nexport class PropGap extends PropRow {\r\n    private param: string;\r\n    constructor(param?: string) {\r\n        super();\r\n        this.param = param;\r\n    }\r\n    render(key:string): JSX.Element {\r\n        let w: string;\r\n        switch (this.param) {\r\n            default: w = 'py-2'; break;\r\n            case '=': w = 'py-1'; break;\r\n            case '-': w = 'pb-1'; break;\r\n        }\r\n        let cn = className(w);\r\n        return <div key={'_g_' + key} className={cn} style={{backgroundColor: '#f0f0f0'}} />;\r\n    }\r\n}\r\n\r\nconst valueAlignStart = 'justify-content-start';\r\nconst valueAlignCenter = 'justify-content-center';\r\nconst valueAlignEnd = 'justify-content-end';\r\nexport abstract class LabeledPropRow extends PropRow {\r\n    protected gridProps: PropGridProps;\r\n    protected prop: LabeledProp;\r\n    protected content: any;\r\n    //protected values: any;\r\n    constructor(gridProps:PropGridProps, prop: LabeledProp) {\r\n        super();\r\n        this.gridProps = gridProps;\r\n        this.prop = prop;\r\n        //this.values = values;\r\n    }\r\n    render(key:string):any {\r\n        let {onClick, bk} = this.prop;\r\n        let cn = className({\r\n            \"cursor-pointer\": onClick !== undefined,\r\n            \"bg-white\": bk === undefined, \r\n            \"row\": true\r\n        });\r\n        return <div key={key} className={cn} onClick={onClick}>\r\n            {this.renderLabel()}\r\n            {this.renderProp()}\r\n        </div>;\r\n    }\r\n    protected renderLabel():any {\r\n        let {label} = this.prop;\r\n        if (label === undefined) return null;\r\n        return <label className=\"col-sm-2 col-form-label\">\r\n            {label}\r\n        </label>;\r\n    }\r\n    protected renderProp():any {\r\n        let {label, full} = this.prop as any;\r\n        let align, vAlign;\r\n        switch (this.gridProps.alignValue) {\r\n            case 'left': align = valueAlignStart; break;\r\n            case 'center': align = valueAlignCenter; break;\r\n            case 'right': align = valueAlignEnd; break;\r\n        }\r\n        switch (this.prop.vAlign) {\r\n            case 'top': vAlign = 'align-items-start'; break;\r\n            default:\r\n            case 'center': vAlign = 'align-items-center'; break;\r\n            case 'bottom': vAlign = 'align-items-end'; break;\r\n            case 'stretch': vAlign = 'align-items-stretch'; break;\r\n        }\r\n        let col:string;\r\n        if (full !== true)\r\n            col = label===undefined? 'col-sm-12':'col-sm-10';\r\n        else\r\n            col = 'w-100';\r\n        let cn = className(align, vAlign, col, 'd-flex');\r\n        return <div className={cn}>\r\n            {this.renderPropBody()}\r\n        </div>;\r\n    }\r\n    protected renderPropBody():any {\r\n        return <div className=\"form-control-plaintext\">\r\n            {this.renderPropContent()}\r\n        </div>;\r\n    }\r\n    protected renderPropContent():any {\r\n        return this.content;\r\n    }\r\n}\r\n\r\nexport class StringPropRow extends LabeledPropRow {\r\n    protected prop: StringProp;\r\n    setValues(values:any) {\r\n        if (values === undefined) this.content = undefined;\r\n        else this.content = values[this.prop.name];\r\n    }\r\n}\r\n\r\nexport class NumberPropRow extends LabeledPropRow {\r\n    protected prop: NumberProp;\r\n    setValues(values:any) {\r\n        if (values === undefined) this.content = undefined;\r\n        else this.content = values[this.prop.name];\r\n    }\r\n}\r\n\r\nexport class ListPropRow extends LabeledPropRow {\r\n    protected prop: ListProp;\r\n    setValues(values:any) {\r\n        if (values === undefined) this.content = undefined;\r\n        else {\r\n            let list = this.prop.list;\r\n            if (typeof list === 'string') this.content = values[list];\r\n            else this.content = undefined;\r\n        }\r\n    }\r\n    protected renderPropBody() {\r\n        let {list, row} = this.prop;\r\n        let items:any[] = typeof list === 'string'? this.content : list;\r\n        if (items === undefined) return <div/>;\r\n        // new row(item)\r\n        return <div className=\"w-100\">\r\n            {\r\n                items.map((item, index) => <React.Fragment key={index}>\r\n                    {index===0? null: <div style={{width:'100%', borderBottom:'1px solid #f0f0f0'}} />}\r\n                    {React.createElement(row, item)}\r\n                </React.Fragment>)\r\n            }\r\n        </div>;\r\n    }\r\n}\r\n\r\nexport class ComponentPropRow extends LabeledPropRow {\r\n    protected prop: ComponentProp;\r\n    protected renderPropBody() {\r\n        let {component} = this.prop;\r\n        return component;\r\n    }\r\n}\r\n\r\nexport class PropContainer extends PropRow {\r\n    render(key:string): JSX.Element {\r\n        return <div className=\"bg-white\">\r\n            <label className=\"col-sm-2 col-form-label\">\r\n                AAABBBCCC\r\n            </label>\r\n            <div className=\"col-sm-10\">\r\n                <div className=\"form-control-plaintext\">\r\n                    dsfasfa sdf asdf a\r\n                </div>\r\n            </div>\r\n        </div>;\r\n    }\r\n}\r\n","import {ListViewProps} from '../listView';\r\nimport {PropGridProps} from './PropGrid';\r\nimport {PropRow, PropBorder, PropGap, PropContainer,\r\n    StringPropRow, NumberPropRow, ListPropRow, ComponentPropRow} from './row';\r\n\r\nexport interface Format {\r\n\r\n}\r\n\r\nexport interface PropBase {\r\n    onClick?: ()=>void;\r\n}\r\n\r\nexport interface LabeledProp extends PropBase {\r\n    label?: string;\r\n    bk?: string;\r\n    vAlign?: 'top'|'bottom'|'center'|'stretch';\r\n}\r\n\r\nexport interface StringProp extends LabeledProp {\r\n    type: 'string';\r\n    name: string;\r\n}\r\n\r\nexport interface NumberProp extends LabeledProp {\r\n    type: 'number';\r\n    name: string;\r\n}\r\n\r\nexport interface FormatProp extends LabeledProp {\r\n    type: 'format';\r\n    format: Format;\r\n}\r\n\r\nexport interface ListProp extends LabeledProp {\r\n    type: 'list';\r\n    list: string | any[];  // string 表示名字，否则就是值\r\n    row: new (props:any) => React.Component;\r\n}\r\n\r\nexport interface ComponentProp extends LabeledProp {\r\n    type: 'component';\r\n    full?: boolean;\r\n    component: any; //JSX.Element;\r\n}\r\n\r\nexport type Prop = StringProp | NumberProp | FormatProp | ListProp | ComponentProp | string;\r\n\r\nexport class PropView {\r\n    private gridProps:PropGridProps\r\n    private props: Prop[];\r\n    //private values:any;\r\n    private rows: PropRow[];\r\n\r\n    constructor(gridProps:PropGridProps, props:Prop[]) {\r\n        this.gridProps = gridProps;\r\n        this.props = props;\r\n        //this.values = values;\r\n        this.buildRows();\r\n    }\r\n\r\n    private buildRows() {\r\n        this.rows = [];\r\n        let isGap:boolean = true;\r\n        for (let prop of this.props) {\r\n            if (typeof prop === 'string') {\r\n                this.rows.push(new PropGap(prop));\r\n                isGap = true;\r\n            }\r\n            else {\r\n                if (!isGap) this.rows.push(new PropBorder());\r\n                let row;\r\n                switch (prop.type) {\r\n                    default: continue;\r\n                    case 'string': row = new StringPropRow(this.gridProps, prop); break;\r\n                    case 'number': row = new NumberPropRow(this.gridProps, prop); break;\r\n                    case 'list': row = new ListPropRow(this.gridProps, prop); break;\r\n                    case 'component': row = new ComponentPropRow(this.gridProps, prop); break;\r\n                }\r\n                this.rows.push(row);\r\n                isGap = false;\r\n            }\r\n        }\r\n    }\r\n\r\n    setValues(values: any) {\r\n        for (let r of this.rows) r.setValues(values);\r\n    }\r\n\r\n    render() {\r\n        return this.rows.map((row, index) => row.render(String(index)));\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport * as classNames from 'classnames';\r\nimport {observer} from 'mobx-react';\r\nimport {Prop, PropView} from './propView';\r\nimport {PropContainer, PropBorder, PropGap} from './row';\r\n\r\nexport interface PropGridProps {\r\n    className?: string;\r\n    rows: Prop[];\r\n    values: any;\r\n    alignValue?: 'left'|'center'|'right';\r\n}\r\n\r\n@observer\r\nexport class PropGrid extends React.Component<PropGridProps> {\r\n/*\r\n    private propView: PropView;\r\n    constructor(props:PropGridProps) {\r\n        super(props);\r\n    }\r\n*/\r\n/*\r\n    componentWillMount() {\r\n        this.propView = new PropView(this.props.rows);\r\n        this.propView.setValues(this.props.values);\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps: Readonly<PropGridProps>, nextContext: any) {\r\n        this.propView = new PropView(this.props.rows);\r\n        this.propView.setValues(nextProps.values);\r\n        this.forceUpdate();\r\n    }\r\n*/\r\n    render() {\r\n        let {className, rows, values} = this.props;\r\n        let propView = new PropView(this.props, rows);\r\n        propView.setValues(values);\r\n        let cn = classNames('container-fluid', className);\r\n        return <div className={cn}>\r\n            {propView.render()}\r\n        </div>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport * as classNames from 'classnames';\r\nimport {IObservableValue, IComputedValue} from 'mobx';\r\nimport {observer} from 'mobx-react';\r\nimport '../css/va-row.css';\r\n\r\nexport interface ListItem {\r\n    key?: string|number;\r\n    date?: Date;\r\n    icon?: string | JSX.Element;\r\n    main?: string;\r\n    vice?: string;\r\n    middle?: string | JSX.Element;\r\n    midSize?: number;\r\n    right?: string | JSX.Element;\r\n    onClick?: () => void;\r\n    unread?: number|IComputedValue<number>;         // <0 表示red dot\r\n}\r\n\r\nexport interface ListRowProps extends ListItem {\r\n    //onClick: () => void;\r\n}\r\n\r\nexport interface ListRowState {\r\n    pressed: boolean;\r\n}\r\n\r\n@observer\r\nexport class ListRow extends React.Component<ListRowProps, ListRowState> {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            pressed: false,\r\n        }\r\n    }\r\n    render() {\r\n        let {date, main, vice, middle, midSize, icon, unread, right, onClick} = this.props;\r\n        let header, isIcon:boolean, noteNum;\r\n        if (unread !== undefined) {\r\n            let uv:number;\r\n            if (typeof unread === 'number') uv = unread;\r\n            else uv = unread.get();\r\n                if (uv > 0)\r\n                noteNum = <b>{uv}</b>;\r\n            else if (uv < 0)\r\n                noteNum = <b className='dot' />;\r\n        }\r\n        switch (typeof icon) {\r\n            case 'object':\r\n                header = <header>{icon}{noteNum}</header>; \r\n                isIcon= false;\r\n                break;\r\n            case 'string': \r\n                header = <header className='icon'><img src={icon as string} />{noteNum}</header>;\r\n                isIcon= true; \r\n                break;\r\n        }\r\n        let mid;\r\n        if (middle !== undefined) {\r\n            switch (typeof middle) {\r\n                case 'string':\r\n                    mid = <div style={{flex:midSize}}>{middle}</div>;\r\n                    break;\r\n                default:\r\n                    mid = middle;\r\n                    break;\r\n            }\r\n        }\r\n        let footer;\r\n        if (right !== undefined) {\r\n            if (typeof right === 'string')\r\n                footer = <footer><small className=\"text-muted\">{right}</small></footer>;\r\n            else\r\n                footer = <footer>{right}</footer>;\r\n        }\r\n        let viceSpan;\r\n        if (vice !== undefined) viceSpan = <span>{vice}</span>;\r\n        let cn = classNames('va-row', {icon:isIcon, pressed: this.state.pressed}, {\"va-action\": onClick !== undefined});\r\n        return (\r\n        <li className={cn} onClick={onClick}>\r\n            {header}\r\n            <div>\r\n                <div>{main}</div>\r\n                {viceSpan}\r\n            </div>\r\n            {mid}\r\n            {footer}\r\n        </li>\r\n        );\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport * as classNames from 'classnames';\r\nimport {observer} from 'mobx-react';\r\nimport {ListItem, ListRow} from './listRow';\r\n\r\nexport interface ListViewProps {\r\n    className?: string;\r\n    items?: any[];\r\n    renderRow?: (item:any, index:number, ex?:any) => JSX.Element;\r\n    ex?: any;\r\n    header?: string|JSX.Element;\r\n    beforeLoad?: string|JSX.Element;\r\n    none?: string|JSX.Element;\r\n    footer?: string|JSX.Element;\r\n    itemClick?: (item:any)=>void;\r\n    converter?: (item:any)=>ListItem;\r\n}\r\n\r\n@observer\r\nexport class ListView extends React.Component<ListViewProps, null> {\r\n    render() {\r\n        let {header, items, beforeLoad, none, renderRow, className, footer, itemClick, converter} = this.props;\r\n        let cn = classNames(className, 'va-list');\r\n        let content, elHeader;\r\n        if (items === undefined)\r\n            content = beforeLoad === null? null : <li className='empty'>\r\n                {beforeLoad || '...'}\r\n            </li>;\r\n        else if (items.length === 0) {\r\n            content = (\r\n            <li className='empty'>\r\n                {\r\n                    none || '[none]'\r\n                }\r\n            </li>);\r\n        }\r\n        else if (renderRow !== undefined) {\r\n            content = items.map((item, index) => renderRow(item, index, this.props.ex));\r\n        }\r\n        else {\r\n            content = items.map((item, index) => {\r\n                let onClick = item.onClick;\r\n                if (onClick === undefined && itemClick !== undefined) \r\n                    onClick = ()=>itemClick(item);\r\n                let listItem:ListItem;\r\n                if (converter !== undefined) {\r\n                    listItem = converter(item);\r\n                    if (listItem === undefined) return null;\r\n                }\r\n                else {\r\n                    listItem = {\r\n                        ...item\r\n                    }\r\n                }\r\n                if (listItem.key === undefined) listItem.key = listItem.main;\r\n                return <ListRow onClick={onClick} {...listItem} />;\r\n            });\r\n        }\r\n        if (header !== undefined) {\r\n            if (typeof header === 'string') {\r\n                elHeader = <div className='va-list-header'>{header}</div>;\r\n            }\r\n            else {\r\n                elHeader = header;\r\n            }\r\n        }\r\n\r\n        return (\r\n        <div className={cn}>\r\n            {elHeader}\r\n            <ul>\r\n                {content}\r\n            </ul>\r\n            {footer}\r\n        </div>\r\n        )\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { Schema, UiSchema, ItemSchema, UiItem, UiTextItem } from '../schema';\r\nimport { nav } from '../nav';\r\nimport { Page } from '../page';\r\nimport { observer } from 'mobx-react';\r\nimport { observable } from 'mobx';\r\nimport { ItemEdit } from './itemEdit';\r\n\r\nexport class StringItemEdit extends ItemEdit {\r\n    protected uiItem: UiTextItem;\r\n    protected async internalStart():Promise<any> {\r\n        return new Promise<any>((resolve, reject) => {\r\n            let element = React.createElement(this.page, {resolve:resolve, reject:reject});\r\n            nav.push(element,reject);\r\n        });\r\n    }\r\n\r\n    private onChange = (evt: React.ChangeEvent<HTMLInputElement>) => {\r\n        this.newValue = evt.target.value;\r\n        let preValue = this.value;\r\n        this.isChanged = (this.newValue != preValue);\r\n    }\r\n\r\n    private page = observer((props:{resolve:(value:any)=>void, reject: (resean?:any)=>void}):JSX.Element => {\r\n        let {resolve, reject} = props;\r\n        let right = <button\r\n            className=\"btn btn-sm btn-success\"\r\n            disabled={!this.isChanged}\r\n            onClick={()=>resolve(this.newValue)}>保存</button>;\r\n        return <Page header={'更改' + this.label} right={right}>\r\n            <div className=\"m-3\">\r\n                <input type=\"text\" \r\n                    onChange={this.onChange}\r\n                    className=\"form-control\" \r\n                    defaultValue={this.value} />\r\n                {\r\n                    this.uiItem && <div className=\"small muted m-2\">{this.uiItem.placeholder}</div>\r\n                }\r\n            </div>\r\n        </Page>;\r\n    })\r\n}\r\n","import * as React from 'react';\r\nimport classNames from 'classnames';\r\nimport { Schema, UiSchema, ItemSchema, UiItem, UiTextItem } from '../schema';\r\nimport { observer } from 'mobx-react';\r\nimport { ItemEdit } from './itemEdit';\r\nimport { StringItemEdit } from './stringItemEdit';\r\nimport { ImageItemEdit } from './imageItemEdit';\r\nimport { Image } from '../image';\r\n\r\nexport interface EditProps {\r\n    className?: string;\r\n    schema: Schema;\r\n    data: any;\r\n    onItemClick?: (itemSchema: ItemSchema, uiItem: UiItem, value: any) => Promise<void>;\r\n    onItemChanged?: (itemSchema: ItemSchema, newValue:any, preValue:any) => Promise<void>;\r\n    uiSchema?: UiSchema;\r\n    sepClassName?: string;\r\n    topBorderClassName?: string;\r\n    bottomBorderClassName?: string;\r\n    rowContainerClassName?: string;\r\n}\r\n\r\n@observer\r\nexport class Edit extends React.Component<EditProps> {\r\n    private defaultSepClassName = \"border-top edit-sep-light-gray\";\r\n    private defaultRowContainerClassName = \"d-flex px-3 py-2 cursor-pointer bg-white align-items-center\";\r\n    private topBorder:JSX.Element;\r\n    private bottomBorder:JSX.Element;\r\n    private rowContainerClassName?: string;\r\n    private sep:JSX.Element;\r\n    private uiSchema: {[name:string]: UiItem};\r\n\r\n    constructor(props: EditProps) {\r\n        super(props);\r\n        let {topBorderClassName, bottomBorderClassName, sepClassName, rowContainerClassName, uiSchema} = props;\r\n        this.topBorder = <div className={topBorderClassName || this.defaultSepClassName} />;\r\n        this.bottomBorder = <div className={bottomBorderClassName || this.defaultSepClassName} />;\r\n        this.rowContainerClassName = rowContainerClassName || this.defaultRowContainerClassName;\r\n        this.sep = <div className={sepClassName || this.defaultSepClassName} />;\r\n        this.uiSchema = (uiSchema && uiSchema.items) || {};\r\n    }\r\n\r\n    render() {\r\n        let elItems:JSX.Element[] = [];\r\n        let {schema} = this.props;\r\n        let len = schema.length;\r\n\r\n        elItems.push(this.topBorder);\r\n        for (let i=0; i<len; i++) {\r\n            if (i>0) elItems.push(this.sep);\r\n            elItems.push(this.renderRow(schema[i]));\r\n        }\r\n        elItems.push(this.bottomBorder);\r\n\r\n        return <div>\r\n            {elItems.map((v, index) => <React.Fragment key={index}>{v}</React.Fragment>)}\r\n        </div>;\r\n    }\r\n\r\n    private renderRow(itemSchema: ItemSchema):JSX.Element {\r\n        let {name, type} = itemSchema;\r\n        let divValue:any;\r\n        let uiItem = this.uiSchema[name];\r\n        let label:string = (uiItem && uiItem.label) || name;\r\n        let value:any = this.props.data[name];\r\n        switch (type) {\r\n            default:\r\n                divValue = value? <b>{value}</b> : <small className=\"text-muted\">(无)</small>;\r\n                break;\r\n            case 'image':\r\n                divValue = <Image className=\"w-4c h-4c\" src={value} />;\r\n                break;\r\n        }\r\n        return <div className={this.rowContainerClassName} onClick={async ()=>await this.rowClick(itemSchema, uiItem, label, value)}>\r\n            <div className=\"w-6c\">{label}</div>\r\n            <div className=\"flex-fill d-flex justify-content-end\">{divValue}</div>\r\n            <div className=\"w-2c text-right\"><i className=\"fa fa-chevron-right\" /></div>\r\n        </div>;\r\n    }\r\n\r\n    private rowClick = async (itemSchema: ItemSchema, uiItem: UiItem, label:string, value: any) => {\r\n        let {onItemChanged, onItemClick} = this.props;\r\n        let changeValue:any;\r\n        if (onItemClick !== undefined) {\r\n            await onItemClick(itemSchema, uiItem, value);\r\n            return;\r\n        }\r\n        let itemEdit:ItemEdit = createItemEdit(itemSchema, uiItem, label, value);\r\n        try {\r\n            changeValue = await itemEdit.start();\r\n            if (changeValue != value) {\r\n                if (onItemChanged === undefined) {\r\n                    alert(`${itemSchema.name} value changed, new: ${changeValue}, pre: ${value}`);\r\n                }\r\n                else {\r\n                    await onItemChanged(itemSchema, changeValue, value);\r\n                }\r\n            }\r\n            await itemEdit.end();\r\n        }\r\n        catch (err) {\r\n            console.log('no value changed');\r\n        }\r\n    }\r\n}\r\n\r\nfunction createItemEdit(itemSchema: ItemSchema, uiItem:UiItem, label:string, value: any):ItemEdit {\r\n    let itemEdit: new (itemSchema: ItemSchema, uiItem:UiItem, label:string, value: any) => ItemEdit;\r\n    if (uiItem !== undefined) {\r\n        switch (uiItem.widget) {\r\n            case 'text': itemEdit = StringItemEdit; break;\r\n            case 'image': itemEdit = ImageItemEdit; break;\r\n        }\r\n    }\r\n    else {\r\n        switch (itemSchema.type) {\r\n            case 'string': itemEdit = StringItemEdit; break;\r\n            case 'image': itemEdit = ImageItemEdit; break;\r\n        }\r\n    }\r\n    if (itemEdit === undefined) return;\r\n    return new itemEdit(itemSchema, uiItem, label, value);\r\n}\r\n","export * from './edit';\r\n","import * as React from 'react';\r\nimport { observable } from 'mobx';\r\nimport { VPage, Page, Form, ItemSchema, UiSchema, StringSchema, UiTextItem, UiPasswordItem, ButtonSchema, Edit, ImageSchema, nav, UiImageItem } from '../ui';\r\nimport userApi from './userApi';\r\n\r\nexport class EditMeInfo extends React.Component {\r\n    private schema:ItemSchema[] = [\r\n        {name:'nick', type:'string'} as StringSchema,\r\n        {name:'icon', type:'image'} as ImageSchema\r\n    ];\r\n    private uiSchema:UiSchema = {\r\n        items: {\r\n            nick: {widget:'text', label:'别名', placeholder:'好的别名更方便记忆'} as UiTextItem,\r\n            icon: {widget:'image', label:'头像'} as UiImageItem,\r\n        }\r\n    }\r\n    @observable private data:any;\r\n\r\n    constructor(props:any) {\r\n        super(props);\r\n        let {nick, icon} = nav.user;\r\n        this.data = {\r\n            nick: nick,\r\n            icon: icon,\r\n        }\r\n    }\r\n\r\n    private onItemChanged = async (itemSchema:ItemSchema, newValue:any, preValue:any) => {\r\n        let {name} = itemSchema;\r\n        await userApi.userSetProp(name, newValue);\r\n        this.data[name] = newValue;\r\n        nav.user[name] = newValue;\r\n        nav.saveLocalUser();\r\n    }\r\n\r\n    render() {\r\n        return <Page header=\"个人信息\">\r\n            <Edit schema={this.schema} uiSchema={this.uiSchema}\r\n                data={this.data}\r\n                onItemChanged={this.onItemChanged} />\r\n        </Page>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { observable } from 'mobx';\r\nimport { observer } from 'mobx-react';\r\nimport classNames from 'classnames';\r\nimport { IObservableValue } from 'mobx/lib/internal';\r\n\r\nexport type TabCaption = (selected:boolean) => JSX.Element;\r\n\r\nexport interface TabProp {\r\n    name: string;\r\n    caption: TabCaption;\r\n    content: () => JSX.Element;\r\n    notify?: IObservableValue<number>;\r\n}\r\n\r\nexport interface TabsProps {\r\n    tabs: TabProp[];\r\n    size?: 'sm' | 'lg' | 'md';\r\n    tabBack?: string;\r\n    contentBack?: string;\r\n    sep?: string;\r\n    selected?: string;\r\n}\r\n\r\nclass Tab {\r\n    name: string;\r\n    @observable selected: boolean;\r\n    caption: TabCaption;\r\n    contentBuilder: ()=>JSX.Element;\r\n    notify: IObservableValue<number>;\r\n\r\n    private _content: JSX.Element;\r\n    get content(): JSX.Element {\r\n        if (this.selected !== true) return this._content;\r\n        if (this._content !== undefined) return this._content;\r\n        return this._content = this.contentBuilder();\r\n    }\r\n}\r\n\r\nexport const TabCaptionComponent = (label:string, icon:string, color:string) => <div \r\n    className={'d-flex justify-content-center align-items-center flex-column cursor-pointer ' + color}>\r\n    <div><i className={'fa fa-lg fa-' + icon} /></div>\r\n    <small>{label}</small>\r\n</div>;\r\n\r\n@observer export class Tabs extends React.Component<TabsProps> {\r\n    private size: string;\r\n    private tabBack: string;\r\n    private contentBack: string;\r\n    private sep: string;\r\n    @observable private selectedTab: Tab;\r\n    @observable private tabs: Tab[] = [];\r\n\r\n    constructor(props: TabsProps) {\r\n        super(props);\r\n        let {size, tabs, tabBack, contentBack, sep, selected} = this.props;\r\n        switch (size) {\r\n            default:\r\n            case 'md': this.size = '3.2rem'; break;\r\n            case 'sm': this.size = '4rem'; break;\r\n            case 'lg': this.size = '2.5rem'; break;\r\n        }\r\n        this.tabs.push(...tabs.map(v => {\r\n                let tab = new Tab();\r\n                tab.name = v.name;\r\n                tab.selected = false;\r\n                tab.caption = v.caption;\r\n                tab.contentBuilder = v.content;\r\n                tab.notify = v.notify;\r\n                return tab;\r\n            }\r\n        ));\r\n        this.tabBack = tabBack || 'bg-light';\r\n        this.contentBack = contentBack;\r\n        this.sep = sep || 'border-top border-gray';\r\n        if (selected !== undefined) {\r\n            this.selectedTab = this.tabs.find(v => v.name === selected);\r\n        }\r\n        if (this.selectedTab === undefined) this.selectedTab = this.tabs[0];\r\n        this.selectedTab.selected = true;\r\n    }\r\n\r\n    private tabClick = (tab:Tab) => {\r\n        this.selectedTab.selected = false;\r\n        tab.selected = true;\r\n        this.selectedTab = tab;\r\n    }\r\n\r\n    showTab(tabName: string) {\r\n        let tab = this.tabs.find(v => v.name === tabName);\r\n        if (tab === undefined) return;\r\n        if (this.selectedTab !== undefined) this.selectedTab.selected = false;\r\n        tab.selected = true;\r\n        this.selectedTab = tab;\r\n    }\r\n\r\n    render() {\r\n        return <div className=\"tab\">\r\n            <div className={this.contentBack} style={{height: 'calc(100% - ' + this.size + ')'}}>\r\n                {this.tabs.map((v,index) => {\r\n                    let style:React.CSSProperties={\r\n                        display: v.selected===true? undefined : 'none'};\r\n                    return <div key={index} style={style}>{v.content}</div>;\r\n                })}\r\n            </div>\r\n            <div className={classNames(this.tabBack, this.sep)} style={{height: this.size}}>\r\n                {this.tabs.map((v,index) => {\r\n                    let {selected, caption, notify} = v;\r\n                    let notifyCircle:any;\r\n                    if (notify !== undefined) {\r\n                        let num = notify.get();\r\n                        if (num !== undefined) {\r\n                            if (num > 0) notifyCircle = <u>{num>99?'99+':num}</u>;\r\n                            else if (num < 0) notifyCircle = <u className=\"dot\" />;\r\n                        }\r\n                    }\r\n                    return <div key={index} className=\"\" onClick={()=>this.tabClick(v)}>\r\n                        <div className=\"align-self-center\">\r\n                            {notifyCircle}\r\n                            {caption(selected)}\r\n                        </div>\r\n                    </div>\r\n                })}\r\n            </div>\r\n        </div>\r\n    }\r\n};\r\n","import * as React from 'react';\r\nimport {FetchError} from '../fetchError';\r\nimport { refetchApi } from '../net';\r\n\r\nexport interface FetchErrorProps extends FetchError {\r\n    clearError: ()=>void\r\n}\r\n\r\nexport default class FetchErrorView extends React.Component<FetchErrorProps, null> {\r\n    private reApi = async () => {\r\n        this.props.clearError();\r\n        const {channel, url, options, resolve, reject} = this.props;\r\n        await refetchApi(channel, url, options, resolve, reject);\r\n    }\r\n    private close = async () => {\r\n        this.props.clearError();\r\n    }\r\n    render() {\r\n        let {error, url} = this.props;\r\n            //let errMsg = fetchError.errorMsg;\r\n        let errContent;\r\n        if (typeof error === 'object') {\r\n            let err = [];\r\n            for (let i in error) {\r\n                err.push(<li key={i}><label>{i}</label><div>{error[i]}</div></li>);\r\n            }\r\n            errContent = <ul>{err}</ul>;\r\n        }\r\n        else {\r\n            errContent = <div>{error}</div>;\r\n        }\r\n        return <li>\r\n            <article className=\"page-container\">\r\n                <section>\r\n                    <div  className=\"va-error\">\r\n                        <div>网络出现问题</div>\r\n                        <div>点击重新访问</div>\r\n                        <div>url: {url}</div>\r\n                        {errContent}\r\n                        <div className=\"p-3\">\r\n                            <button type='button' onClick={this.reApi}>重新API</button>\r\n                            <button type='button' onClick={this.close}>关闭</button>\r\n                        </div>\r\n                    </div>\r\n                </section>\r\n            </article>\r\n        </li>;\r\n    }\r\n}\r\n","import {User, Guest, Unit} from './user';\r\n\r\nexport interface ClearableData {\r\n    clear(): void;\r\n}\r\n\r\nexport class Data<T> implements ClearableData {\r\n    private name: string;\r\n    private value?: T;\r\n    constructor(name: string) {this.name = name; }\r\n    get(): T {\r\n        if (this.value !== undefined) return this.value;\r\n        let v = localStorage.getItem(this.name);\r\n        return this.value = v === null ? undefined : JSON.parse(v); \r\n    }\r\n    set(value: T) {\r\n        if (!value) { this.clear(); return; }\r\n        this.value = value;\r\n        localStorage.setItem(this.name, JSON.stringify(value));\r\n    }\r\n    clear() {\r\n        this.value = undefined;\r\n        localStorage.removeItem(this.name);\r\n    }\r\n}\r\n\r\nexport class LocalData {\r\n    user = new Data<User>('user');\r\n    guest = new Data<Guest>('guest');\r\n    unit = new Data<Unit>('unit');\r\n    homeTabCur = new Data<number>('homeTabCur');\r\n\r\n    logoutClear() {\r\n        [\r\n            this.user,\r\n            this.unit,\r\n            this.homeTabCur\r\n        ].map(d => d.clear());\r\n    }\r\n}\r\n","module.exports = __webpack_public_path__ + \"static/media/logo.ee7cd8ed.svg\";","import * as React from 'react';\r\nimport { Muted } from 'tonva-react-form';\r\nimport { TuidUI } from 'tonva-react-uq';\r\n\r\nconst organization:TuidUI = {\r\n    divs: {\r\n        post: {\r\n            content: (values) => {\r\n                let {id, title} = values;\r\n                return <>{title}</>\r\n            }\r\n        }\r\n    }\r\n};\r\n\r\nexport default {\r\n    user: {\r\n        content: (values) => {\r\n            let {id, name, nick, assigned} = values;\r\n            if (assigned !== undefined) {\r\n                return <>{assigned} - <Muted>{name}</Muted></>;\r\n            }\r\n            if (nick != undefined) {\r\n                return <>{nick} - <Muted>{name}</Muted></>;\r\n            }\r\n            if (name !== undefined) return name;\r\n            return 'id ' + id + ' ...';\r\n        }\r\n    },\r\n    section: {\r\n        content: (values) => {\r\n            let {id, name} = values;\r\n            return <>{name}</>;\r\n        }\r\n    },\r\n    organization: organization,\r\n}\r\n","import * as React from 'react';\r\nimport { Muted } from 'tonva-react-form';\r\nimport { left0 } from 'tonva-tools';\r\n//import { dictionary as x } from '../../res';\r\nimport { VMapMain, MapUI, Field, CMap }  from 'tonva-react-uq'; \r\n\r\nclass CMapTeamPerson extends CMap {\r\n    async searchOnKey(keyField:Field, param):Promise<number> {\r\n        switch (keyField.name) {\r\n            default: return await super.searchOnKey(keyField, param);\r\n            case 'post': return await this.searchOnPost(param);                \r\n        }\r\n    }\r\n\r\n    private async searchOnPost(param: any):Promise<number> {\r\n        let querySelect = this.cQuerySelect('teamPosts');\r\n        let val = await querySelect.call(param);\r\n        return val['post'].id;\r\n    }\r\n}\r\n\r\nclass VMapTeamPerson extends VMapMain {\r\n}\r\n\r\nconst ui:MapUI = {\r\n    CMap: CMapTeamPerson,\r\n    //label: '部门员工对照表',\r\n    //main: VMapTeamPerson,\r\n    keys: [\r\n        {\r\n            content: ({name, id}:any, x) => <><Muted>{x.team}</Muted> {name}</>,\r\n            none: (x)=>x.noStaff,\r\n        },\r\n        {\r\n            content: ({name, id}:any, x) => <><Muted>{x.staff}</Muted> {name} &nbsp; <Muted>{x.no} {left0(id, 4)}</Muted></>,\r\n            none: (x)=>x.noPost,\r\n        },\r\n        {\r\n            content: ({x, title, id}:any) => <><Muted>{x.post}</Muted> {title}</>,\r\n            none: undefined,\r\n        },\r\n    ]\r\n}\r\n\r\nexport default ui;\r\n","import teamPerson from './teamPerson';\r\n\r\nexport default {\r\n    teamPerson: teamPerson,\r\n};\r\n","import { observer } from \"mobx-react\";\r\nimport React from \"react\";\r\nimport { FA } from \"tonva-react-form\";\r\nimport { Page } from \"tonva-tools\";\r\nimport { CQuery, VQueryMain } from \"tonva-react-uq\";\r\nimport { tv } from 'tonva-react-uq';\r\n\r\nexport class CGetMessage extends CQuery {\r\n    protected get VQueryMain() {return VMain}\r\n}\r\n\r\nexport class VMain extends VQueryMain {\r\n    protected queryResult = observer((result:any) => {\r\n        let ret0 = result.ret[0];\r\n        let rightClose = <button\r\n            className=\"btn btn-outline-success\"\r\n            onClick={this.again}>\r\n            <FA name=\"search\" /> 再查询\r\n        </button>;\r\n        return <Page header={this.label} right={rightClose}>\r\n            重载的CGetMessage <br/>\r\n            {tv(ret0.fromUser)/*ret0.fromUser.content()*/}\r\n            <pre>{JSON.stringify(ret0, undefined, '\\t')}</pre>\r\n        </Page>;\r\n    })\r\n}\r\n","import React from 'react';\r\nimport { QueryUI, tv } from \"tonva-react-uq\";\r\nimport { observer } from 'mobx-react';\r\n\r\nconst ui:QueryUI = {\r\n    row: observer((values:any) => <div className=\"px-3 py-2\">{tv(values.post)/*.content()*/}</div>),\r\n}\r\n\r\nexport default ui;","import getMessage from './getMessage';\r\nimport teamPosts from './teamPosts';\r\n\r\nexport default {\r\n    getMessage: getMessage,\r\n    teamPosts: teamPosts,\r\n};\r\n","import { QueryUI } from \"tonva-react-uq\";\r\nimport { VMain } from \"./cGetMessge\";\r\n\r\nconst ui:QueryUI = {\r\n    main: VMain,\r\n}\r\n\r\nexport default ui;\r\n","import React from 'react';\r\nimport _ from 'lodash';\r\n\r\nexport default {\r\n    x: {\r\n        no: '编号',\r\n        team: '部门',\r\n        staff: '员工',\r\n        noStaff: '无员工',\r\n        post: '职位',\r\n        noPost: '无职位',\r\n        a: 'aaa',\r\n        b: {\r\n            s: 'sss',\r\n            d: ()=><span className=\"text-success\">ddd</span>,\r\n        },\r\n        c: ()=><span className=\"text-danger\">ccc</span>,\r\n    },\r\n    usq: '$UNITX',\r\n    tuid: '基础档案',\r\n    map: '对照表',\r\n    tuidPlaceHolder: '选择',\r\n    submit: '提交',\r\n    arrNew: '新增',\r\n    arrEdit: '保存',\r\n    entity: {\r\n        message: {\r\n            label: '消息-message',\r\n            arrNew: '新增消息',\r\n            arrEdit: '保存消息',\r\n            fields: {\r\n                fromUser: '发送人',\r\n                fromUnit: '发送部门',\r\n                type: '类型',\r\n                date: '日期',\r\n                subject: '主题',\r\n                discription: '描述',\r\n                content: '内容'\r\n            },\r\n        },\r\n        getMessage: {\r\n            label: '获取Message',\r\n            submit: '获取消息',\r\n            fields: {\r\n                msg: '消息'\r\n            }\r\n        },\r\n        newMessage: {\r\n            label: '新建消息',\r\n            fields: {\r\n                type: '类型',\r\n                subject: '主题',\r\n            },\r\n            arrs: {\r\n                to: {\r\n                    label: '发送',\r\n                    newSubmit: '新增to',\r\n                    editSumbit: '保存to',\r\n                },\r\n                cc: {\r\n                    label: '抄送',\r\n                    newSubmit: '新增cc',\r\n                    editSumbit: '保存cc',\r\n                }\r\n            }\r\n        },\r\n        sectionTeam: {\r\n            label: '大部设置',\r\n        },\r\n        teamPerson: {\r\n            label: '部门员工职位',\r\n            fields: {\r\n            },\r\n            confirmDelete: _.template('真的要删除${label}吗'),\r\n        },\r\n        teamOrganization: {\r\n            label: '部门机构对照表',\r\n        },\r\n        teamPosts: {\r\n            label: '部门职位',\r\n        },\r\n        person: {\r\n            label: '员工',\r\n            fields: {\r\n                name: '姓名',\r\n                nick: '别名',\r\n                given: '名字',\r\n                sur: '姓',\r\n                gender: '性别',\r\n                user: '用户',\r\n            }\r\n        },\r\n        organization: {\r\n            label: '组织结构',\r\n            arrs: {\r\n                post: {\r\n                    label: '职位',\r\n                }\r\n            }\r\n        },\r\n        user: {\r\n            label: '用户'\r\n        }\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { VTuidMain } from \"tonva-react-uq\";\r\nimport { Page } from 'tonva-tools';\r\nimport { SearchBox, List, Muted } from 'tonva-react-form';\r\n\r\nexport class MyVTuidMain extends VTuidMain {\r\n    protected get view() {\r\n        let {label, proxyLinks} = this.controller;\r\n        return () => <Page header={label}>\r\n            {proxyLinks === undefined ?\r\n            <>\r\n                <SearchBox className=\"w-100\" onSearch={this.onSearch} placeholder={'搜索'+label} />\r\n                改写的TuidMain\r\n                <div className='my-3'>\r\n                    <button className=\"ml-3 btn btn-primary\" onClick={this.onNew}>新增</button>\r\n                    <button className=\"ml-3 btn btn-primary\" onClick={this.onList}>列表</button>\r\n                </div>\r\n            </> :\r\n            <List className=\"my-2\"\r\n                header={<Muted>{label} 代理下列Tuid</Muted>}\r\n                items={proxyLinks}\r\n                item={{render: this.entityRender, onClick:this.entityClick}} />\r\n            }\r\n        </Page>;\r\n    }\r\n}","import { UqUI } from 'tonva-react-uq';\r\nimport tuid from './tuid';\r\nimport map from './map';\r\nimport query from './query';\r\nimport res from './res';\r\nimport { MyCTuid } from './cTuid';\r\n\r\nconst usqUI:UqUI = {\r\n    CTuidMain: MyCTuid,\r\n    tuid: tuid,\r\n    map: map,\r\n    query: query,\r\n    res: res,\r\n}\r\n\r\nexport default usqUI;","import { CTuidMain, VTuidMain, Field, FieldCall, VForm, TuidMain, FieldTuidUI } from \"tonva-react-uq\";\r\nimport { MyVTuidMain } from \"./vTuidMain\";\r\n\r\nexport class MyCTuid extends CTuidMain {\r\n    protected get VTuidMain():typeof VTuidMain {return MyVTuidMain}\r\n\r\n    protected buildSelect(field:Field, arr:string, fieldTuidUI: FieldTuidUI):FieldCall {\r\n        let {name} = field;\r\n        switch (arr) {\r\n        case undefined:\r\n            switch (name) {\r\n            case 'fromUser':\r\n                return async (form:VForm, field:Field, values:any):Promise<any> => {\r\n                    let {_tuid} = field;\r\n                    let cTuidSelect = this.cUq.cTuidSelect(_tuid);\r\n                    let ret = await cTuidSelect.call();\r\n                    return ret.id;\r\n                };\r\n            }\r\n            break;\r\n        }\r\n        return super.buildSelect(field, arr, fieldTuidUI);\r\n    }\r\n}\r\n","import CN from './zh/CN';\r\n\r\nconst res = {\r\n    zh: {\r\n        CN: CN\r\n    }\r\n};\r\n\r\nexport default res;\r\n","import { UqUI } from 'tonva-react-uq';\r\nimport tuid from './tuid';\r\nimport sheet from './sheet';\r\n//import map from './map';\r\n//import query from './query';\r\n//import res from './res';\r\n//import { MyCTuid } from './cTuid';\r\n\r\nconst usqUI:UqUI = {\r\n    //CTuidMain: MyCTuid,\r\n    tuid: tuid,\r\n    sheet: sheet,\r\n    //map: map,\r\n    //query: query,\r\n    //res: res,\r\n}\r\n\r\nexport default usqUI;\r\n","import * as React from 'react';\r\nimport { TuidUI } from 'tonva-react-uq';\r\n\r\nexport default {\r\n    customer: {\r\n        content: (values) => {\r\n            let {id, name, discription} = values;\r\n            return <>{discription || name || 'id ' + id + ' ...'}</>;\r\n        }\r\n    },\r\n    article: {\r\n        content: (values) => {\r\n            let {id, name, discription, casNO} = values;\r\n            if (casNO !== undefined)\r\n                return <>CAS:{casNO} - {discription || name}</>;\r\n            return <>{discription || name || 'id ' + id + ' ...'}</>;\r\n        }\r\n    },\r\n}\r\n","import * as React from 'react';\r\nimport { SheetUI } from 'tonva-react-uq';\r\n\r\nconst orderUI:SheetUI = {\r\n    form: {\r\n        items: {\r\n            sumAmount: ():number => {\r\n                return 1;\r\n            },\r\n            articles: {\r\n                items: {\r\n                    amount: function(this:any):number {\r\n                        return (this.quantity === undefined || this.quantity === null? 0 : this.quantity) * \r\n                            (this.price === undefined || this.price === null? 0 : this.price);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n};\r\n\r\nexport default {\r\n    order: orderUI,\r\n}\r\n","import { UqUI } from 'tonva-react-uq';\r\n\r\n//import res from './res';\r\n//import tuid from './tuid';\r\n//import sheet from './sheet';\r\n//import map from './map';\r\n//import query from './query';\r\n//import { MyCTuid } from './cTuid';\r\n\r\nconst usqUI:UqUI = {\r\n    //CTuidMain: MyCTuid,\r\n    //tuid: tuid,\r\n    //sheet: sheet,\r\n    //map: map,\r\n    //query: query,\r\n    //res: res,\r\n}\r\n\r\nexport default usqUI;\r\n","import React from 'react';\r\nimport { VPage, Page, meInFrame, nav } from 'tonva-tools';\r\nimport { FA } from 'tonva-react-form';\r\nimport {AppUI, CApp} from 'tonva-react-uq';\r\nimport $unitx from './$unitx';\r\nimport devApp from './devApp';\r\nimport jkOrder, { aa_bbJkOrder } from './jkOrder';\r\nimport cart from './cart';\r\nimport res from './res';\r\nimport { CMyApp } from './CMyApp';\r\n\r\nclass VAppMain extends VPage<CApp> {\r\n    async open(param?:any) {\r\n        this.openPage(this.appPage);\r\n    }\r\n\r\n    protected appPage = () => {\r\n        let {caption, cUqArr: cUsqArr} = this.controller;\r\n        let content;\r\n        if (cUsqArr.length === 0) {\r\n            content = <div className=\"p-3 text-info\">\r\n                <FA name=\"minus-circle\" className=\"text-danger\" size=\"lg\" /> &nbsp; 此APP没有绑定任何的USQ\r\n            </div>;\r\n        }\r\n        else {\r\n            content = cUsqArr.map((v,i) => <div key={i}>{v.render()}</div>);\r\n        }\r\n        return <Page header={caption} logout={async ()=>{meInFrame.unit = undefined}}>\r\n            <div className=\"p-3\">自定义程序界面了。显示这一段，自定义起作用了。可以在这里放置任何内容</div>\r\n            <div className=\"p-3\">hashParam: {nav.hashParam}</div>\r\n            {content}\r\n        </Page>;\r\n    };\r\n}\r\n\r\nlet uqs = {\r\n    \"$$$/$unitx\": $unitx,\r\n    \"DevApp/devappApi\": devApp,\r\n    \"JKDev/jkOrder\": jkOrder,\r\n    \"百灵威系统工程部/cart\": cart,\r\n}\r\n\r\nconst ui:AppUI = {\r\n    CApp: CMyApp,\r\n    res: res,\r\n    main: VAppMain,\r\n    uqs: uqs,\r\n\r\n    roles: {\r\n        'aa-bb': async () => (await import('./roles/aa-bb')).default,\r\n    }\r\n};\r\n\r\n\r\n//convertUIKeyToLowercase(ui);\r\n\r\nexport default ui;\r\n//export { CMyApp } from './CApp';\r\n\r\n","import * as React from 'react';\r\nimport { CApp, ControllerUq } from \"tonva-react-uq\";\r\nimport { VPage, Page } from \"tonva-tools\";\r\n\r\nexport class CMyApp extends CApp {\r\n    /*\r\n    protected async internalStart(param?:any) {\r\n        let cProduct = new CProduct(undefined, undefined);\r\n        await cProduct.start();\r\n    }*/\r\n}\r\n\r\nclass CProduct extends ControllerUq {\r\n    protected async internalStart(param?: any): Promise<void> {\r\n        this.openVPage(VProduct, param);\r\n    }\r\n}\r\n\r\nclass VProduct extends VPage<CProduct> {\r\n    async open(param?:any) {\r\n        this.openPageElement(<Page>\r\n            ddd\r\n        </Page>);\r\n    }\r\n}\r\n","import CN from './zh/CN';\r\n\r\nconst res = {\r\n    zh: {\r\n        CN: CN\r\n    }\r\n};\r\n\r\nexport default res;\r\n","import React from 'react';\r\nimport _ from 'lodash';\r\n\r\nexport default {\r\n    x: {\r\n        no: '编号',\r\n        team: '部门',\r\n    },\r\n    caption: '*百灵威订单*',\r\n}\r\n","import * as React from 'react';\nimport { NavView } from 'tonva-tools';\nimport { startApp } from 'tonva-react-uq';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './App.css';\nimport ui from './ui';\n\nconst tonvaApp = 'JKDev/jkOrder';\n//const tonvaApp = '百灵威系统工程部/cart';\n\nclass App extends React.Component {\n    async onLogined() {\n        await startApp(tonvaApp, ui);\n    }\n    render() {\n        React.createElement(React.Fragment, {}, \n            React.createElement(NavView, {onLogined: this.onLogined}),\n            React.createElement(\"button\", {onClick: this.click}, \"test\"));\n        return <>\n            <NavView onLogined={this.onLogined} />\n        </>;\n        //<button onClick={this.click}>test</button>\n    }\n\n    click = async () => {\n        //let url = 'http://101.200.46.56/joint/27/jk-usq';\n        let url = 'http://localhost:3017/joint-usq-jk';\n        let data = [\n            {moniker: 'product', queue: 0, data: undefined},\n            {moniker: 'product', queue: undefined, data: {\n                no: 1002,\n                discription: 'a product test1',\n                packType: 23\n            }}\n        ];\n        let ret = await fetch(url, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json;charset=UTF-8'\n            },\n            body: JSON.stringify(data)\n        });\n        let text = await ret.text();\n        alert(text);\n    }\n}\n\nexport default App;\n","// tslint:disable:no-console\n// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the 'N+1' visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL!,\n      window.location.toString()\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (!isLocalhost) {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      } else {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker) {\n          installingWorker.onstatechange = () => {\n            if (installingWorker.state === 'installed') {\n              if (navigator.serviceWorker.controller) {\n                // At this point, the old content will have been purged and\n                // the fresh content will have been added to the cache.\n                // It's the perfect time to display a 'New content is\n                // available; please refresh.' message in your web app.\n                console.log('New content is available; please refresh.');\n              } else {\n                // At this point, everything has been precached.\n                // It's the perfect time to display a\n                // 'Content is cached for offline use.' message.\n                console.log('Content is cached for offline use.');\n              }\n            }\n          };\n        }\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type')!.indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\nimport './index.css';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root') as HTMLElement\n);\nregisterServiceWorker();\n"],"sourceRoot":""}