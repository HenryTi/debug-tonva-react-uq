{"version":3,"sources":["tonva-tools/index.ts","tonva-react-form/index.ts","tonva-react-uq/controllers/CVEntity.tsx","tonva-tools/ui/nav.tsx","tonva-react-uq/index.ts","tonva-react-uq/controllers/form/viewModel.tsx","tonva-tools/net/guestApi.ts","tonva-tools/net/index.ts","tonva-react-uq/tools/jsonStringify.ts","tonva-react-uq/tools/tv.tsx","tonva-react-uq/tools/index.ts","tonva-tools/ui/index.ts","tonva-tools/net/appBridge.ts","tonva-tools/ui/page.tsx","tonva-tools/net/httpChannelUI.ts","tonva-tools/net/uqApi.ts","tonva-react-uq/controllers/link/cLink.tsx","tonva-react-uq/controllers/link/index.ts","tonva-tools/net/wsChannel.ts","tonva-react-form/uid.ts","tonva-tools/ui/image.tsx","tonva-tools/net/host.ts","tonva-tools/user.ts","tonva-tools/ui/edit/itemEdit.tsx","tonva-tools/uid.ts","tonva-react-uq/controllers/tuid/vTuidMain.tsx","tonva-react-uq/controllers/tuid/vTuidEdit.tsx","tonva-react-uq/controllers/tuid/vTuidSelect.tsx","tonva-react-uq/controllers/tuid/vTuidView.tsx","tonva-react-uq/controllers/tuid/vTuidInfo.tsx","tonva-react-uq/controllers/tuid/pageItems.ts","tonva-react-uq/controllers/tuid/vTuidList.tsx","tonva-react-uq/controllers/tuid/cTuid.ts","tonva-react-uq/controllers/tuid/index.tsx","tonva-react-uq/controllers/form/vBand.tsx","tonva-react-uq/controllers/form/vSubmit.tsx","tonva-react-uq/controllers/form/rule.ts","tonva-react-uq/controllers/form/vField/vField.tsx","tonva-react-uq/controllers/form/vField/vComputeField.tsx","tonva-react-uq/controllers/form/vArr.tsx","tonva-react-uq/controllers/form/vField/vTuidField.tsx","tonva-react-uq/controllers/form/bandsBuilder.ts","tonva-react-uq/controllers/form/vField/buildVmField.ts","tonva-react-uq/controllers/form/vForm.tsx","tonva-react-uq/controllers/form/index.ts","tonva-tools/net/httpChannel.ts","tonva-tools/ui/res.ts","tonva-react-uq/controllers/index.ts","tonva-react-form/form/control/control.tsx","tonva-react-form/form/control/buttonsControl.tsx","tonva-react-form/form/control/charsControl.tsx","tonva-react-form/form/control/stringControl.tsx","tonva-react-form/form/control/numberControl.tsx","tonva-react-form/form/control/unknownControl.tsx","tonva-react-form/form/control/pickIdControl.tsx","tonva-react-form/form/control/pickTuidControl.tsx","tonva-react-form/form/control/pickControl.tsx","tonva-react-form/form/control/index.ts","tonva-react-form/form/control/checkControl.tsx","tonva-react-form/form/control/radioControl.tsx","tonva-react-form/form/control/selectControl.tsx","tonva-react-form/form/control/textAreaControl.tsx","tonva-react-uq/entities/entity.ts","tonva-react-uq/entities/tuid.ts","tonva-react-uq/entities/action.ts","tonva-react-uq/entities/sheet.ts","tonva-react-uq/entities/query.ts","tonva-react-uq/entities/book.ts","tonva-react-uq/entities/history.ts","tonva-react-uq/entities/map.ts","tonva-react-uq/entities/pending.ts","tonva-react-uq/entities/entities.ts","tonva-react-uq/entities/index.ts","tonva-react-form/form/rowContainer/index.tsx","tonva-tools/net/apiBase.ts","tonva-tools/ui/titleBar.tsx","tonva-react-uq/controllers/query/defaultRow.tsx","tonva-react-uq/controllers/query/vQueryMain.tsx","tonva-react-uq/controllers/query/vQuerySelect.tsx","tonva-react-uq/controllers/query/cQuery.ts","tonva-react-uq/controllers/query/index.ts","tonva-tools/ui/edit/imageItemEdit.tsx","tonva-tools/ui/loading.tsx","tonva-tools/ui/resUploader.tsx","tonva-react-uq/controllers/CApp.tsx","tonva-react-form/form/index.ts","tonva-react-form/form/formView.tsx","tonva-react-uq/controllers/icons.tsx","tonva-react-uq/controllers/ControllerUq.ts","tonva-react-uq/centerApi.ts","tonva-react-uq/controllers/sheet/vMain.tsx","tonva-react-uq/controllers/sheet/vNew.tsx","tonva-react-uq/controllers/sheet/vSheetView.tsx","tonva-react-uq/controllers/sheet/vEdit.tsx","tonva-react-uq/controllers/sheet/vSheetAction.tsx","tonva-react-uq/controllers/sheet/vSchema.tsx","tonva-react-uq/controllers/sheet/vArchives.tsx","tonva-react-uq/controllers/sheet/vList.tsx","tonva-react-uq/controllers/sheet/vArchived.tsx","tonva-react-uq/controllers/sheet/vSheet.tsx","tonva-react-uq/controllers/sheet/vSaved.tsx","tonva-react-uq/controllers/sheet/vSheetProcessing.tsx","tonva-react-uq/controllers/sheet/cSheet.ts","tonva-react-uq/controllers/sheet/index.ts","tonva-react-uq/controllers/book/vBookMain.tsx","tonva-react-uq/controllers/book/cBook.ts","tonva-react-uq/controllers/uq/vUq.tsx","tonva-react-uq/controllers/uq/cUq.tsx","tonva-react-uq/controllers/uq/index.ts","tonva-react-uq/controllers/map/vMain.tsx","tonva-react-uq/controllers/map/inputValues.tsx","tonva-react-uq/controllers/map/cMap.ts","tonva-react-uq/controllers/map/index.ts","tonva-react-uq/controllers/history/vHistoryMain.tsx","tonva-react-uq/controllers/history/cHistory.ts","tonva-react-uq/controllers/history/index.ts","tonva-react-uq/controllers/action/vActionMain.tsx","tonva-react-uq/controllers/action/cAction.ts","tonva-react-uq/controllers/action/index.ts","tonva-react-uq/controllers/pending/vPendingMain.tsx","tonva-react-uq/controllers/pending/cPending.ts","tonva-react-uq/controllers/pending/index.ts","tonva-tools/net/netToken.ts","tonva-tools/entry/userApi.ts","tonva-tools/left0.ts","tonva-tools/ui/VM.tsx","tonva-tools/ui/schema/index.ts","tonva-tools/ui/rules/index.ts","tonva-tools/pageItems.ts","tonva-tools/cacheIds.ts","tonva-react-form/form/TonvaForm.tsx","tonva-react-form/dropDownActions/index.tsx","tonva-react-form/easyDate/index.tsx","tonva-react-form/media.tsx","tonva-react-form/searchBox.tsx","tonva-react-form/multiStep/index.tsx","tonva-tools/ui/form/rules/index.ts","tonva-tools/ui/form/widgets/widget.tsx","tonva-tools/ui/form/widgets/textWidget.tsx","tonva-tools/ui/form/widgets/numberWidget.tsx","tonva-tools/ui/form/widgets/updownWidget.tsx","tonva-tools/ui/form/widgets/dateWidget.tsx","tonva-tools/ui/form/widgets/checkBoxWidget.tsx","tonva-tools/ui/form/widgets/selectWidget.tsx","tonva-tools/ui/form/widgets/idWidget.tsx","tonva-tools/ui/form/widgets/unknown.tsx","tonva-tools/ui/form/widgets/buttonWidget.tsx","tonva-tools/ui/form/context.tsx","tonva-tools/ui/form/widgets/arrComponent.tsx","tonva-tools/ui/form/widgets/imageWidget.tsx","tonva-tools/ui/form/widgets/factory.tsx","tonva-tools/ui/form/widgets/textareaWidget.tsx","tonva-tools/ui/form/widgets/passwordWidget.tsx","tonva-tools/ui/form/widgets/radioWidget.tsx","tonva-tools/ui/form/widgets/rangeWidget.tsx","tonva-tools/ui/form/formRes.ts","tonva-tools/ui/form/form.tsx","tonva-tools/ui/form/field.tsx","tonva-tools/ui/form/index.ts","ui/jkOrder/res/index.ts","ui/jkOrder/res/zh/CN.tsx","ui/jkOrder/tuid/index.tsx","ui/jkOrder/sheet/order/index.tsx","ui/jkOrder/sheet/index.tsx","ui/jkOrder/sheet/order/vNew.tsx","ui/jkOrder/map/index.tsx","ui/jkOrder/index.tsx","tonva-react-form/components/Badge.tsx","tonva-react-form/components/LMR.tsx","tonva-react-form/components/FA.tsx","tonva-react-form/components/Muted.tsx","tonva-react-form/components/index.ts","tonva-tools/ui/edit/stringItemEdit.tsx","tonva-tools/ui/edit/radioItemEdit.tsx","tonva-tools/ui/edit/selectItemEdit.tsx","tonva-tools/ui/edit/edit.tsx","tonva-tools/ui/edit/index.tsx","tonva-react-form/list/base.tsx","tonva-react-form/list/clickable.tsx","tonva-react-form/list/static.tsx","tonva-react-form/list/selectable.tsx","tonva-react-form/list/index.tsx","tonva-react-form/propGrid/row.tsx","tonva-react-form/propGrid/propView.tsx","tonva-react-form/propGrid/PropGrid.tsx","tonva-react-form/listView/listRow.tsx","tonva-react-form/listView/listView.tsx","tonva-tools/entry/meInfo.tsx","tonva-tools/ui/tabs/tabs.tsx","tonva-tools/ui/fetchErrorView.tsx","tonva-tools/local.ts","tonva-tools/img/logo.svg","ui/$unitx/tuid/index.tsx","ui/$unitx/map/teamPerson/index.tsx","ui/$unitx/map/index.ts","ui/$unitx/query/getMessage/cGetMessge.tsx","ui/$unitx/query/teamPosts.tsx","ui/$unitx/query/index.ts","ui/$unitx/query/getMessage/index.ts","ui/$unitx/res/zh/CN.tsx","ui/$unitx/cTuid/vTuidMain.tsx","ui/$unitx/index.ts","ui/$unitx/cTuid/myCTuid.ts","ui/$unitx/res/index.ts","ui/devApp/index.tsx","ui/devApp/tuid/index.tsx","ui/devApp/sheet/index.tsx","ui/cart/index.tsx","ui/test.tsx","ui/index.tsx","ui/CMyApp.tsx","ui/res/index.ts","ui/res/zh/CN.tsx","App.tsx","registerServiceWorker.ts","index.tsx"],"names":["_left0__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","d","__webpack_exports__","_net__WEBPACK_IMPORTED_MODULE_2__","_ui__WEBPACK_IMPORTED_MODULE_3__","o","_pageItems__WEBPACK_IMPORTED_MODULE_5__","_form__WEBPACK_IMPORTED_MODULE_0__","_list__WEBPACK_IMPORTED_MODULE_1__","_easyDate__WEBPACK_IMPORTED_MODULE_3__","_components__WEBPACK_IMPORTED_MODULE_5__","_searchBox__WEBPACK_IMPORTED_MODULE_8__","CEntity","_ControllerUq__WEBPACK_IMPORTED_MODULE_3__","[object Object]","cUq","entity","ui","res","super","Object","setPrototypeOf","this","x","name","typeName","label","icon","_icons__WEBPACK_IMPORTED_MODULE_2__","loadSchema","onSubmit","values","mode","options","buildFormOptions","ret","_form__WEBPACK_IMPORTED_MODULE_1__","setValues","none","submitCaption","arrNewCaption","arrEditCaption","arrTitleNewButton","fields","arrFields","undefined","new","formUI","form","arrs","inputs","buildInputs","buildFieldsInputs","arr","items","arrFieldInputs","field","_tuid","fieldUI","select","buildSelect","content","buildContent","placeHolder","getTuidPlaceHolder","__awaiter","_ownerField","cTuidSelect","cSelectFrom","param","getValue","autoList","console","log","call","removeCeased","id","idFromItem","useId","queryName","cQuerySelect","VEntity","tonva_tools__WEBPACK_IMPORTED_MODULE_0__","controller","createForm","mobileHeaderStyle","RegExp","test","navigator","userAgent","minHeight","logMark","logs","stackKey","NavView","react__WEBPACK_IMPORTED_MODULE_0__","props","waitCount","isHistoryBack","clearError","setState","fetchError","back","bind","navBack","stack","state","wait","window","addEventListener","nav","set","start","level","length","waitTimeHandler","global","setTimeout","clearTimeout","err","error","unauthorized","showLogin","view","disposer","clear","push","history","pushState","key","ceased","refresh","item","pop","dispose","p","i","len","backLevel","popAndDispose","find","v","confirmClose","confirm","self","top","postMessage","type","message","elWait","elError","className","_loading__WEBPACK_IMPORTED_MODULE_10__","_fetchErrorView__WEBPACK_IMPORTED_MODULE_4__","assign","map","index","style","visibility","Nav","local","_local__WEBPACK_IMPORTED_MODULE_6__","user","lang","district","_res__WEBPACK_IMPORTED_MODULE_9__","language","culture","guest","g","get","handler","ws","onWsReceiveAny","handlerId","endWsReceive","msg","receive","unitRes","fetch","json","unit","unitName","envUnit","NODE_ENV","PUBLIC_URL","REACT_APP_CENTER_HOST","REACT_APP_UNIT","Number","_net__WEBPACK_IMPORTED_MODULE_7__","getPredefinedUnitName","unitId","unitFromName","settings","navSettings","hash","document","location","pos","_net_appBridge__WEBPACK_IMPORTED_MODULE_5__","hashParam","substring","startWait","url","resHost","centerHost","resUrl","wsHost","setGuest","exHash","appInFrame","parent","_net_wsChannel__WEBPACK_IMPORTED_MODULE_8__","predefinedUnit","loadPredefinedUnit","notLogined","logined","endWait","onLogined","_net_netToken__WEBPACK_IMPORTED_MODULE_3__","token","callback","connect","JSON","stringify","saveLocalUser","showAppView","defaultTop","loginTop","withBack","lv","e","then","loginView","default","_page__WEBPACK_IMPORTED_MODULE_2__","header","onClick","logout","logoutClear","cp","ChangePasswordPage","onError","show","replace","topKey","popTo","ceaseTop","regConfirmClose","confirmBox","apiId","sheetType","sheetId","Promise","resolve","reject","sheet","includes","uh","src","open","date","Date","getTime","toTimeString","step","__decorate","mobx__WEBPACK_IMPORTED_MODULE_1__","startApp","convertUIKeyToLowercase","obj","toLowerCase","Array","isArray","cApp","CApp","_controllers__WEBPACK_IMPORTED_MODULE_1__","ViewModel","PureJSONContent","JSONContent","RowContent","mobx_react__WEBPACK_IMPORTED_MODULE_1__","_tools__WEBPACK_IMPORTED_MODULE_2__","vm","guestApi","uqApi","wsChannel","apiBase","appBridge","host","replacer","value","substr","jsonStringify","Tv","index_module","tuidValue","nullUI","react","ttv","bi","_$tuid","_$com","t","controllers","com","getTuidContent","val","valueFromId","boxIdContent","tv","_nav__WEBPACK_IMPORTED_MODULE_0__","_VM__WEBPACK_IMPORTED_MODULE_3__","_schema__WEBPACK_IMPORTED_MODULE_4__","_form__WEBPACK_IMPORTED_MODULE_5__","_edit__WEBPACK_IMPORTED_MODULE_6__","_res__WEBPACK_IMPORTED_MODULE_7__","_image__WEBPACK_IMPORTED_MODULE_10__","_rules__WEBPACK_IMPORTED_MODULE_12__","uqTokens","logoutUqTokens","appsInFrame","_unit","isBridged","setAppInFrame","appHash","parts","split","page","slice","getExHashPos","lastIndexOf","getExHash","appUrl","u","_uid__WEBPACK_IMPORTED_MODULE_2__","getUnit","realUnit","appUq","uq","uqOwner","uqName","uqToken","_uqApi__WEBPACK_IMPORTED_MODULE_3__","urlDebug","realUrl","_host__WEBPACK_IMPORTED_MODULE_5__","getUrlOrDebug","at","a","opener","apiName","evt","data","subWin","source","_wsChannel__WEBPACK_IMPORTED_MODULE_4__","el","getElementById","hidden","hideFrameBack","lodash__WEBPACK_IMPORTED_MODULE_0___default","clone","_ui__WEBPACK_IMPORTED_MODULE_1__","subFrameStarted","onReceive","initSubWin","from","callId","method","body","result","directCall","callCenterApiFromMessage","bca","brideCenterApis","bridgeCenterApiReturn","onReceiveAppApiMessage","action","onAppApiReturn","bridgeCenterApi","scrollTimeGap","ScrollView","bottomTime","topTime","onScroll","onScrollTop","onScrollBottom","target","scrollTop","offsetHeight","scrollHeight","c","direct","children","forEach","child","_$scroll","toString","eachChild","Page","cur","tabs","tabStates","tab","lodash__WEBPACK_IMPORTED_MODULE_3___default","isSelected","isMounted","t0","onTabClick","load","footer","right","keepHeader","titleBar","title","redDot","img","redDotView","cn","classnames__WEBPACK_IMPORTED_MODULE_2___default","_titleBar__WEBPACK_IMPORTED_MODULE_4__","center","sideBar","invisible","onTouchStart","elFooter","renderTabs","renderSingle","httpChannelUI_HttpChannelNavUI","channelUIs","channelNoUIs","logoutApis","uqApi_channels","uqLocalEntities","localUqs","ls","localStorage","getItem","parse","uqs","loginedUserId","isNet","un","__loadAccess","saveLocal","lodash_default","cloneDeep","removeItem","accessValue","str","setItem","isMatch","uqApi_UqApi","basePath","access","showWaiting","channels","channelUI","channel","httpChannel","acc","join","loadAccess","checkAccess","names","post","params","owner","pageStart","pageSize","order","$order","ids","proxy","put","uqApi_UnitxApi","buildChannel","centerAppApi","uqApi_CenterAppApi","unitxUq","setCenterUrl","centerToken","centerChannel","centerChannelUI","setCenterToken","userId","uqApi_CenterApi","path","uqTokenApi","unitParam","nowTick","tick","callCenterapi","appUqs","appOwner","appName","rLs","rAppOwner","rAppName","uqsPure","cachedUqs","cachedId","retId","retUqs","loadAppUqs","checkUqs","Link","cLink_CLink","classnames_default","subAppWindow","setSubAppWindow","win","postWsToTop","WsBase","handlerSeed","anyHandlers","msgHandlers","seed","$type","wsBaseSeed","wsBridge","wsBaseId","WSChannel","that","WebSocket","onopen","ev","onerror","onmessage","wsMessage","onclose","close","event","postWsToSubApp","netThis","send","uid","ALPHABET","ID_LENGTH","rtn","charAt","Math","floor","random","Image","classnames__WEBPACK_IMPORTED_MODULE_1__","classnames__WEBPACK_IMPORTED_MODULE_1___default","n","_nav__WEBPACK_IMPORTED_MODULE_2__","altImage","startsWith","currentTarget","isDevelopment","hosts","centerhost","reshost","uqhost","unitxhost","uq-build","fetchOptions","headers","Content-Type","tryLocal","getCenterHost","centerUrlFromHost","centerWsFromHost","getResHost","promises","hostArr","hostValue","findIndex","fetchUrl","debugHostUrl","localCheck","results","all","j","hostString","indexOf","timeout","text","catch","Error","fetchLocalCheck","decodeUserToken","decodeGuestToken","jwt_decode__WEBPACK_IMPORTED_MODULE_0__","jwt_decode__WEBPACK_IMPORTED_MODULE_0___default","ItemEdit","itemSchema","uiItem","isChanged","internalStart","internalEnd","rules","nv","newValue","verifyRule","rule","vTuidMain_VTuidMain","CVEntity","onNew","onList","onSearch","openPage","link","render","newButton","proxyLinks","isFrom","tonva_react_form","size","placeholder","entityRender","entityClick","tonva_tools","vTuidEdit_VTuidEdit","next","vTuidEdit_awaiter","vForm","reset","closePage","finish","getValues","save","unique","setError","isCalling","returnCall","openPageElement","editView","vTuidSelect_VTuidSelect","mainView","react_default","createElement","initKey","onSearchMain","PageItems","renderMainRow","clickMainRow","before","vTuidSelect_awaiter","searchMain","mainRowContent","ceasePage","showDiv","getIdFromObj","divView","renderDivRow","clickDivRow","divRowContent","showMain","rowContent","viewModel","ownerValue","divs","divItems","getDivItems","vTuidView_VTuidView","vTuidView_awaiter","alert","tools","buildForm","vTuidInfo_VTuidInfo","pageItems_TuidPageItems","tuid","search","vTuidList_VTuidMainListBase","vTuidList_awaiter","renderRow","clickRow","callOnSelected","rowKey","ownerTop","ownerObj","ownerId","onSelected","VTuidMainList","cTuid_CTuid","buildPageItems","first","searchArr","cTuid_CTuidBase","proxies","linkFromName","cFrom","cUqFrom","cTuidEditFromName","cTuidInfoFromName","cTuidSelectFromName","VTuidMain","VTuidEdit","VTuidList","schemaFrom","openVPage","onEdit","itemChanged","cTuidInfo","cTuid_CTuidInfo","cTuidEdit","CTuidEdit","edit","cTuidList","CTuidList","merge","CTuidMain","cTuid_CTuidSelect","VTuidSelect","VTuidInfo","vBand_VBand","renderContent","addRow","VFieldBand","vField","vBand_VArrBand","vArr","setAddRow","vBand_VSubmitBand","vSubmit","vSubmit_VSubmit","onClickSubmit","submit","isOk","disabled","caption","mobx_module","Rule","RuleRequired","defy","trim","NaN","RuleNum","RuleInt","isNaN","isInteger","RuleMin","min","check","RuleMax","max","vField_VField","fieldRes","init","buildRules","required","null","checkRules","r","errors","readonly","FormMode","editable","vField_decorate","vField_VInputControl","renderError","ref","input","setInputValue","onFocus","onBlur","computeFields","onChange","setValue","inputGroup","suffix","ctrlCN","inputType","readOnly","maxLength","onKeyPress","RedMark","color","position","left","VStringField","KeyCode_Neg","KeyCode_Dot","vField_VNumberControl","ch","charCode","extraChars","onKeyDot","onKeyNeg","preventDefault","_a","vField_VIntField","VDecField","VTextField","VDateTimeField","VDateField","vComputeField_VComputeField","vArr_VArr","ownerForm","onEditRow","rowPage","vArr_awaiter","valueBoxs","onRowChanged","rowValues","$owner","list","renderItem","showRow","editRow","editSubmitCaption","internalAddRow","newSubmitCaption","button","paddingTop","paddingBottom","arrsRes","arrRes","newSubmit","editSubmit","arrUI","vForm_VForm","buttonStyle","textAlign","paddingLeft","paddingRight","overflow","vTuidField_VTuidField","vTuidField_awaiter","showInfo","boxId","idBox","bandsBuilder_BandsBuilder","layout","formItems","bandsOnFly","bandsFromLayout","bands","bandsFromFields","bandFromArr","bandFromField","formItem","rfn","resFromName","buildVField","vFields","vArrs","onFormSubmit","buildFormValues","buildBands","bandColl","bandsBuilder","build","band","getVFields","f","getVArr","getVSubmit","rows","row","fn","initValues","arrList","ctrl","fieldName","valueFromFieldName","propName","buildFieldValues","array","deep","buildObservableValues","vForm_decorate","HttpChannel","isCenter","hostUrl","apiToken","showError","_host__WEBPACK_IMPORTED_MODULE_2__","keys","k","buildOptions","innerFetch","buildError","timeOutHandler","encodeURI","ok","statusText","ct","retJson","_ui_nav__WEBPACK_IMPORTED_MODULE_1__","_appBridge__WEBPACK_IMPORTED_MODULE_0__","Headers","append","resOptions","resLang","lodash__WEBPACK_IMPORTED_MODULE_0__","_","l","languages","setResOptions","_CApp__WEBPACK_IMPORTED_MODULE_0__","_tuid__WEBPACK_IMPORTED_MODULE_4__","_query__WEBPACK_IMPORTED_MODULE_6__","_map__WEBPACK_IMPORTED_MODULE_7__","_form_viewModel__WEBPACK_IMPORTED_MODULE_10__","_formUI__WEBPACK_IMPORTED_MODULE_12__","_ControllerUq__WEBPACK_IMPORTED_MODULE_13__","_CVEntity__WEBPACK_IMPORTED_MODULE_14__","control_ControlBase","formView","renderControl","hasError","filled","validate","control_Control","face","setProps","element","defaultValue","clearErrors","clearValue","isOK","getValueFromElement","notes","buttonsControl_ButtonsControl","otherClick","onOther","readValues","nothing","btnOther","submitButton","otherButton","TxtRequired","charsControl_CharsControl","parseValue","lodash","classnames","form-control","has-success","is-invalid","is-valid","renderInput","stringControl_StringControl","ErrInvalidNumber","ErrMin","ErrMax","unknownControl_UnknownControl","role","unknownControl_EmptyControl","pickIdControl_PickIdControl","pick","fromPicked","onPicked","itemFromId","initCaption","String","controlContent","component","pickIdControl_decorate","pickTuidControl_PickTuidControl","onIdChanged","onFormValues","pickTuidControl_decorate","pickControl_PickControl","pickControl_awaiter","Content","pickControl_decorate","createControl","group","groupRow","createGroupControl","fieldRow","fieldType","defaultFaces","controls","createFieldControl","help","string","password","number","parseFloat","checkbox","trueValue","falseValue","checked","radiobox","selectedIndex","selectedOptions","pick-id","pick-tuid","textarea","int","dec","bool","ln","Entity","entities","typeId","fieldMaps","sys","sName","jName","tvApi","returns","schema","setSchema","buildFieldsTuid","buildFieldTuid","buildArrFieldsTuid","getTuid","arrName","fieldArr","an","buildFieldsParams","arrResult","pa","rowResult","packRow","packArr","charCodeAt","escape","unpackRow","unpackArr","ch0","fLen","to","vals","maxCacheSize","tuid_Tuid","queue","waitingIds","cache","BoxId","prototype","defineProperty","writable","enumerable","getObj","getCacheValue","toJSON","buildIdBoxer","idName","mainFields","mf","splice","_id","delete","defer","util","has","cacheTuids","moveToHead","shift","proxied","cacheValue","unpackTuidIds","api","getApiFrom","tuids","tuidIds","cacheTuidFieldValues","afterCacheId","cacheDivIds","tuidGet","divName","cacheFieldsInValue","arrValues","tuidDiv","getDiv","tuidSave","tuidSearch","tuidArrGet","tuidArrSave","tuidArrPos","showTuid","TuidMain","Main","TuidDiv","cacheIds","cUqFrm","getImportUq","cTuidMainFromName","action_Action","pack","sheet_Sheet","states","op","ops","actions","discription","appId","sheetSave","app","flow","sheetAction","brief","unpackSheet","flows","getSheet","getArchive","unpack","sheetArchive","sheetArchives","stateSheets","sheet_PageStateItems","stateSheetCount","s","count","mySheets","getStateSheets","query_Query","isPaged","more","hasMore","startField","buildParams","unpackReturns","$page","query","table","book_Book","queryApiName","history_History","map_Map","queries","newAction","newQuery","add","del","pending_Pending","fieldDefaultValue","entities_Entities","sheets","books","maps","histories","pendings","tuidArr","actionArr","sheetArr","queryArr","bookArr","mapArr","historyArr","pendingArr","loadIds","clearCacheTimer","accesses","buildEntities","loadEntities","buildTuids","buildAccess","div","tuidUrl","cacheTimer","newTuid","fromType","fromObj","book","pending","uqId","newBook","newMap","newHistory","newSheet","newPending","buildSheet","ownerField","af","bootstrapCreateRow","elementCreateRow","_control__WEBPACK_IMPORTED_MODULE_1__","RowContainer","cc","control","setInitValues","ElementRowContainer","BootStrapRowContainer","refetchApi","ApiBase","getHttpChannel","callFetch","TitleBar","logoutClick","_nav__WEBPACK_IMPORTED_MODULE_1__","showLogout","navChange","hasBack","href","debugLogout","rightView","b","nick","openWindow","DefaultRow","vQueryMain_VQueryMain","resetPage","loadPage","replacePage","pageResult","queryResult","again","renderExtra","rightClose","queryRow","vQuerySelect_VQuerySelect","vQuerySelect_awaiter","selectRow","vQuerySelect_QueryPageItems","cQuery_CQueryBase","cQuery_CQuery","VQueryMain","main","cQuery_CQuerySelect","VQuerySelect","ImageItemEdit","_itemEdit__WEBPACK_IMPORTED_MODULE_7__","overSize","upload","resUploader","resId","_page__WEBPACK_IMPORTED_MODULE_6__","_resUploader__WEBPACK_IMPORTED_MODULE_3__","multiple","maxSize","border","padding","_image__WEBPACK_IMPORTED_MODULE_4__","_nav__WEBPACK_IMPORTED_MODULE_5__","mobx__WEBPACK_IMPORTED_MODULE_2__","Loading","ResUploader","files","fileInput","FormData","file","abortController","AbortController","signal","onFilesChange","tonva_tools__WEBPACK_IMPORTED_MODULE_2__","cImportUqs","cUqCollection","tonva_react_form__WEBPACK_IMPORTED_MODULE_3__","onRowClick","selectUnitPage","appUnits","setSettings","tonvaApp","retErrors","promiseChecks","roleAppUI","buildRoleAppUI","uqUI","newCUq","checks","retError","roles","lodash__WEBPACK_IMPORTED_MODULE_1___default","getCUq","CUq","_uq__WEBPACK_IMPORTED_MODULE_4__","cUqArr","VAppMain","_centerApi__WEBPACK_IMPORTED_MODULE_5__","userAppUnits","showUnsupport","appUnit","loadUqs","clearPrevPages","showMainPage","renderView","userName","sheetTypeId","getCUqFromId","navSheet","appPage","appContent","_rule__WEBPACK_IMPORTED_MODULE_0__","_field__WEBPACK_IMPORTED_MODULE_1__","_face__WEBPACK_IMPORTED_MODULE_2__","_TonvaForm__WEBPACK_IMPORTED_MODULE_5__","FormView","buildRows","some","every","formRows","createRow","buildRow","buttonsRow","createButtons","_rowContainer__WEBPACK_IMPORTED_MODULE_4__","formRow","formRowCreator","_control__WEBPACK_IMPORTED_MODULE_3__","buttons","entityIcons","react__WEBPACK_IMPORTED_MODULE_0___default","tonva_react_form__WEBPACK_IMPORTED_MODULE_1__","fixWidth","ControllerUq","centerApi","vMain_VSheetMain","newClick","schemaClick","archivesClick","sheetStateClick","renderState","badge","getStateLabel","templet","statesCount","filter","isDev","vNew_VSheetNew","vNew_awaiter","valuesWithBox","onSave","leftFlowStyle","width","vSheetView_VSheetView","flowRow","preState","sheetView","removed","sheetData","vEdit_VSheetEdit","vEdit_awaiter","saveSheet","controllers_form","vSheetAction_VSheetAction","actionClick","vSheetAction_awaiter","acted","deleteClick","editClick","editSheet","actionButtons","startButtons","no","stateLabel","getActionLabel","backPage","vSchema_VSheetSchema","schemaStringify","vArchives_VArchives","archiveClick","vArchives_awaiter","processing","archiveRow","getArchives","vList_VSheetList","rowClick","vList_awaiter","pageStateItems","listRow","stateName","vArchived_VArchived","vSheet_VSheet","vSaved_VSheetSaved","restart","vSaved_awaiter","vSheetProcessing_VSheetProcessing","cSheet_CSheet","cSheet_awaiter","showSaved","loadStateSheetCount","createPageStateItems","VSheetMain","onSheet","me","$","sheetActPreState","sheetActState","changeStateCount","curState","delta","stateCount","VSheetNew","sheetNew","VSheetSaved","sheetSaved","VSheetEdit","sheetEdit","VSheetSchema","VArchives","VArchived","VSheetList","VSheetAction","VSheetProcessing","showArchived","showAction","showProcessing","beforeStart","onEvent","getSheetData","vCall","inBrief","getArchived","getStateUI","actionName","sheetTitle","disc","vBookMain_VBookMain","cBook_CBook","VBookMain","vUq_VUq","isSysVisible","linkItem","cLink","lists","tuidLinks","mapLinks","sheetLinks","actionLinks","queryLinks","bookLinks","historyLinks","pendingLinks","Fragment","isVisible","controllers_link","cTuidMain","cMap","cSheet","cAction","cQuery","cBook","cHistory","cPending","lowerPropertyName","cUq_CUq","schemaLoaded","controllers_tuid","CTuidSelect","CTuidInfo","CQuery","CQuerySelect","CMap","CAction","CSheet","CBook","CHistory","controllers_history","CPending","baseUrl","loadEntites","collection","warn","tuidPlaceHolder","en","sheetFromTypeId","startSheet","entityName","entityType","cFromName","tUI","cEntity","getUI","VUq","vMain_VMapMain","itemRender","ItemRow","remove","valuesView","box","isLeaf","keyIndex","keyUI","keyUIs","keyContent","valuesContent","keyNone","addClick","removeClick","inputValues_VInputValues","onValuesSubmit","inputValues_awaiter","cMap_MapItem","cMap_CMap","cMap_awaiter","keysLen","keyFields","keysLast","idx","keyField","kn","searchParam","ki","searchOnKey","arr1","nullable","rowIndex","createItem","getLable","confirmDelete","template","v0","q","retFields","newItem","addItem","VMapMain","callParam","vHistoryMain_VHistoryMain","cHistory_CHistory","VHistoryMain","vActionMain_VActionMain","resultPage","mainPage","cAction_CAction","VActionMain","vPendingMain_VPendingMain","cPending_CPending","VPendingMain","netToken","_uqApi__WEBPACK_IMPORTED_MODULE_0__","_wsChannel__WEBPACK_IMPORTED_MODULE_1__","userApi","_net__WEBPACK_IMPORTED_MODULE_0__","_user__WEBPACK_IMPORTED_MODULE_1__","account","verify","prop","left0","zero","num","fix","Controller","_net__WEBPACK_IMPORTED_MODULE_3__","onMessageReceive","onMessage","isLogined","unregisterReceiveHandler","receiveHandlerId","onDispose","vp","registerReceiveHandler","_resolve_$","View","VPage","_schema__WEBPACK_IMPORTED_MODULE_0__","_uiSchema__WEBPACK_IMPORTED_MODULE_1__","mobileRegex","emailRegex","itemObservable","isFirst","loading","beforeLoad","loaded","allLoaded","firstSize","appendPosition","_items","mobx__WEBPACK_IMPORTED_MODULE_0__","topDiv","_uid__WEBPACK_IMPORTED_MODULE_1__","bottomDiv","setPageStart","unshift","reverse","maxCount","dict","Map","loadId","_loadIds","_loadId","TonvaForm","_formView__WEBPACK_IMPORTED_MODULE_2__","EasyDate","now","nDate","getDate","_date","hour","getHours","minute","getMinutes","month","getMonth","hm","getFullYear","SearchBox","allowEmptySearch","inputSize","lab","inputClassName","buttonText","RuleCustom","func","RulePredefined","rules_RuleNum","minMsg","maxMsg","checkMore","integer","widget_Widget","context","fieldProps","contextErrors","onInputChange","changeValue","container","visible","inNode","requiredFlag","FieldContainer","getUiItem","removeErrorWidget","addErrorWidget","isChanging","initData","fromElement","onChanging","onChanged","prev","allowChange","setDataValue","setElementValue","fieldClass","FieldClass","uiLabel","Templet","errorList","tag","textWidget_TextWidget","onKeyDown","internalOnKeyDown","keyCode","onEnter","blur","checkContextRules","renderTemplet","renderErrors","numberWidget_NumberWidget","updownWidget_UpdownWidget","returnValue","isValidKey","dateWidget_DateWidget","checkBoxWidget_CheckBoxWidget","defaultChecked","selectWidget_SelectWidget","option","selectWidget_decorate","idWidget_IdWidget","idWidget_awaiter","pickId","clearContextError","required-item","cursor-pointer","idWidget_decorate","Unknown","dataType","uiType","dataTypes","buttonWidget_ButtonWidget","buttonWidget_awaiter","observerRender","widget","widgetType","ButtonClass","context_Context","uiSchema","isRow","widgets","errorWidgets","subContexts","arrRowContexts","itemName","getDisabled","setDisabled","getReadOnly","setReadOnly","getVisible","setVisible","buttonName","onButtonClick","checkFieldRules","rowContext","setContextError","clearWidgetsErrors","checkHasError","clearContextErrors","context_decorate","rowKeySeed","RowContext","parentContext","arrSchema","uiArr","itemSchemas","parentData","FormContext","ContextContainer","ArrComponent","selectable","deletable","restorable","getArrRowContexts","arrLabel","ArrContainer","RowSeperator","formSelectable","formDeletable","formRestorable","arrSelectable","arrDeletable","arrRestorable","ac","rc","rs","sep","typeofTemplet","factory","selectCheck","deleteIcon","$isSelected","$source","isDeleted","$isDeleted","onDelClick","editContainer","deleted","row-selected","Provider","imageWidget_ImageWidget","imageWidget_awaiter","imageItemEdit","imageSrc","end","ui_image","imageWidget_decorate","widgetsFactory","datetime","time","email","updown","image","checkboxes","radio","range","typeWidget","getItemSchema","getTypeWidget","WidgetClass","formRes","zh","form_Form","watch","formData","calcSelectOrDelete","DefaultContainer","DefaultFieldContainer","fieldLabelSize","labelView","fieldCol","DefaultFieldClass","DefaultButtonClass","DefaultRes","ui_res","py-3","Container","formContext","initDataItem","arrItem","arrItems","arrDict","arrItemOperated","formArrVal","beforeShow","contextType","jkOrder_res","CN","team","staff","noStaff","noPost","product","usq","arrNew","arrEdit","packType","ratio","customer","detail","fromUnit","subject","products","price","quantity","amount","deliver","getMessage","newMessage","editSumbit","sectionTeam","teamPerson","teamOrganization","teamPosts","person","given","sur","gender","organization","productPackRowContent","rText","packName","tonva_react_uq","selectProduct","step1Next","cCustomerSelect","orderPage","customerPage","conformOrder","addProductRows","packRows","cProductSelect","priceRows","getPrices","productPage","stopOrder","step1SelectCustomer","addProduct","priceRow","retail","refQuantity","packId","renderPack","mapPrice","getBand","productId","sumAmount","toFixed","aa_bbJkOrder","uqUIs","Badge_Badge","badgeAlign","badgeVertical","LMR_LMR","cursor","LMR_decorate","FA_FA","spin","pull","pulse","rotate","flip","inverse","Muted","stringItemEdit_StringItemEdit","edit_itemEdit","preValue","verifyValue","radioItemEdit_RadioItemEdit","selectItemEdit_SelectItemEdit","edit_Edit","defaultSepClassName","defaultRowContainerClassName","edit_awaiter","onItemChanged","onItemClick","stopEdit","itemEdit","createItemEdit","topBorderClassName","bottomBorderClassName","sepClassName","rowContainerClassName","topBorder","bottomBorder","elItems","divValue","requireFlag","base_ListBase","pageItems","selectedItems","nextProps","clickable_Clickable","static_Static","selectable_Selectable","itemsArray","compare","_selectedItems","selected","labelId","si","buildItems","anySelected","onSelect","flex","marginBottom","htmlFor","selectable_decorate","list_List","listBase","nextState","nextContext","updateProps","isLoading","staticRow","list_decorate","PropRow","row_PropBorder","borderTop","row_PropGap","w","backgroundColor","valueAlignStart","valueAlignCenter","valueAlignEnd","row_LabeledPropRow","gridProps","bk","bg-white","renderLabel","renderProp","align","vAlign","col","full","alignValue","renderPropBody","renderPropContent","StringPropRow","NumberPropRow","row_ListPropRow","borderBottom","ComponentPropRow","propView_PropView","isGap","PropGrid_PropGrid","propView","listRow_ListRow","pressed","isIcon","noteNum","mid","viceSpan","vice","middle","midSize","unread","uv","va-action","listView_ListView","elHeader","itemClick","converter","ex","listItem","listView_decorate","userSetProp","Tab","_content","contentBuilder","tabs_Tabs","tabClick","selectedTab","tabBack","contentBack","notify","tabName","height","display","notifyCircle","FetchErrorView","reApi","_net__WEBPACK_IMPORTED_MODULE_1__","errContent","LocalData","Data","homeTabCur","module","exports","assigned","section","_super","searchOnPost","querySelect","cGetMessge_VMain","ret0","fromUser","vTuidMain_MyVTuidMain","$unitx","fieldTuidUI","myCTuid_awaiter","devApp","article","casNO","articles","cart","testPage","src_ui","cUsqArr","$$$/$unitx","DevApp/devappApi","JKDev/jkOrder","jkOrder","百灵威系统工程部/cart","aa-bb","ui_awaiter","src_App_0","click","App_awaiter","moniker","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","react_dom","URL","origin","response","status","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.76f95acf.chunk.js","sourcesContent":["export {left0} from './left0';\r\nexport * from './user';\r\nexport * from './net';\r\nexport * from './ui';\r\nexport * from './uid';\r\nexport {PageItems} from './pageItems';\r\nexport {CacheIds} from './cacheIds';\r\nexport * from './entry';\r\n\r\n","export * from './form';\r\nexport * from './list';\r\nexport * from './dropDownActions';\r\nexport * from './easyDate';\r\nexport * from './propGrid';\r\nexport * from './components';\r\nexport * from './media';\r\nexport * from './listView';\r\nexport * from './searchBox';\r\nexport * from './multiStep';\r\nexport * from './uid';\r\n","import * as React from 'react';\r\nimport { Controller, VPage, View } from 'tonva-tools';\r\nimport { Entity, Field, TuidMain } from '../entities';\r\nimport { CUq } from './uq/cUq';\r\nimport { VForm, FieldInputs, FieldCall, FormOptions, FormMode } from './form';\r\nimport { CQuerySelect } from './query';\r\nimport { FormUI, FieldTuidUI } from './formUI';\r\nimport { entityIcons } from './icons';\r\nimport { ControllerUq } from './ControllerUq';\r\n\r\nexport interface EntityUI {\r\n    form?: FormUI;\r\n}\r\n\r\nexport abstract class CEntity<T extends Entity, UI extends EntityUI> extends ControllerUq {\r\n    constructor(cUq: CUq, entity: T, ui: UI, res: any) {\r\n        super(cUq, res);\r\n        Object.setPrototypeOf(this.x, cUq.x);\r\n        let {name, typeName} = entity;\r\n        this.entity = entity;\r\n        this.ui = ui; // || entityUI.ui;\r\n        this.label = this.res.label || name;\r\n        this.icon = entityIcons[typeName];\r\n    }\r\n    readonly entity: T;\r\n    readonly ui: UI;\r\n\r\n    protected async beforeStart():Promise<boolean> {\r\n        //if (await super.beforeStart() === false) return false;\r\n        await this.entity.loadSchema();\r\n        return true;\r\n    }\r\n\r\n    createForm(onSubmit:()=>Promise<void>, values?:any, mode?:FormMode) {\r\n        let options = this.buildFormOptions(mode);\r\n        let ret = new VForm(options, onSubmit);\r\n        ret.setValues(values);\r\n        return ret;\r\n    }\r\n\r\n    private buildFormOptions(mode?:FormMode):FormOptions {\r\n        let {fields, arrFields} = this.entity;\r\n        let none, submitCaption, arrNewCaption, arrEditCaption, arrTitleNewButton;\r\n        if (this.res !== undefined) {\r\n            none = this.res['none'];\r\n            submitCaption = this.res['submit'];\r\n            arrNewCaption = this.res['arrNew'];\r\n            arrEditCaption = this.res['arrEdit'];\r\n            arrTitleNewButton = this.res['arrTitleNewButton'];\r\n        }\r\n        if (none === undefined) {\r\n            none = this.cUq.res['none'] || 'none';\r\n        }\r\n        if (submitCaption === undefined)\r\n            submitCaption = this.cUq.res['submit'] || 'Submit';\r\n        if (arrNewCaption === undefined)\r\n            arrNewCaption = this.cUq.res['arrNew'] || 'New';\r\n        if (arrEditCaption === undefined)\r\n            arrEditCaption = this.cUq.res['arrEdit'] || 'Edit';\r\n        if (arrTitleNewButton === undefined)\r\n        arrTitleNewButton = this.cUq.res['arrTitleNewButton'];\r\n        if (mode === undefined) mode = FormMode.new;\r\n        let formUI = this.ui.form;\r\n        let ret:FormOptions = {\r\n            fields: fields,\r\n            arrs: arrFields,\r\n            ui: formUI,\r\n            res: this.res || {},\r\n            inputs: this.buildInputs(formUI),\r\n            none: none,\r\n            submitCaption: submitCaption,\r\n            arrNewCaption: arrNewCaption,\r\n            arrEditCaption: arrEditCaption,\r\n            arrTitleNewButton: arrTitleNewButton,\r\n            mode: mode,\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    private buildInputs(formUI: FormUI):FieldInputs {\r\n        let {fields, arrFields} = this.entity;\r\n        let ret:FieldInputs = {};\r\n        this.buildFieldsInputs(ret, fields, undefined, formUI);\r\n        if (arrFields !== undefined) {\r\n            for (let arr of arrFields) {\r\n                let {name, fields} = arr;\r\n                let items = formUI && formUI.items;\r\n                this.buildFieldsInputs(ret, fields, name, items && items[name] as FormUI);\r\n            }\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    private buildFieldsInputs(ret:FieldInputs, fields:Field[], arr:string, formUI: FormUI) {\r\n        if (arr !== undefined) {\r\n            let arrFieldInputs = ret[arr];\r\n            if (arrFieldInputs === undefined) {\r\n                ret[arr] = arrFieldInputs = {};\r\n                ret = arrFieldInputs;\r\n            }\r\n        }\r\n        for (let field of fields) {\r\n            let {name, _tuid} = field;\r\n            if (_tuid === undefined) continue;\r\n            let fieldUI = formUI && formUI.items && formUI.items[name] as FieldTuidUI;\r\n            ret[name] = {\r\n                select: this.buildSelect(field, arr, fieldUI),\r\n                content: this.buildContent(field, arr),\r\n                placeHolder: this.cUq.getTuidPlaceHolder(_tuid),\r\n            };\r\n        }\r\n    }\r\n\r\n    protected buildSelect(field:Field, arr:string, fieldUI: FieldTuidUI):FieldCall {\r\n        return async (form:VForm, field:Field, values:any):Promise<any> => {\r\n            let {_tuid, _ownerField} = field;\r\n            let cTuidSelect = await (_tuid as TuidMain).cSelectFrom();\r\n            let param:any = undefined;\r\n            if (_ownerField !== undefined) param = form.getValue(_ownerField.name);\r\n            if (fieldUI && fieldUI.autoList === true) {\r\n                console.log('select search set param=empty string');\r\n                param = '';\r\n            }\r\n            let ret = await cTuidSelect.call(param);\r\n            cTuidSelect.removeCeased(); // 清除已经废弃的顶部页面\r\n            if (ret === undefined) return undefined;\r\n            let id = cTuidSelect.idFromItem(ret);\r\n            _tuid.useId(id);\r\n            return id;\r\n        };\r\n    }\r\n\r\n    protected buildContent(field:Field, arr:string): React.StatelessComponent<any> {\r\n        return;\r\n    }\r\n\r\n    cQuerySelect(queryName:string):CQuerySelect {\r\n        return this.cUq.cQuerySelect(queryName);\r\n    }\r\n}\r\n\r\nexport abstract class VEntity<T extends Entity, UI extends EntityUI, C extends CEntity<T, UI>> extends VPage<C> {\r\n    protected readonly entity: T;\r\n    protected readonly ui: UI;\r\n    constructor(controller: C) {\r\n        super(controller);\r\n        this.entity = controller.entity;\r\n        this.ui = controller.ui;\r\n    }\r\n\r\n    get label():string {return this.controller.label}\r\n\r\n    //private _form_$: VForm;\r\n    protected createForm(onSubmit:()=>Promise<void>, values?:any, mode?:FormMode): VForm {\r\n        //if (this._form_$ !== undefined) return this._form_$;\r\n        return this.controller.createForm(onSubmit, values, mode);\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {observable, has} from 'mobx';\r\nimport {User, Guest/*, UserInNav*/} from '../user';\r\nimport {Page} from './page';\r\nimport {netToken} from '../net/netToken';\r\nimport FetchErrorView from './fetchErrorView';\r\nimport {FetchError} from '../fetchError';\r\nimport {appUrl, setAppInFrame, logoutUqTokens, getExHash, getExHashPos} from '../net/appBridge';\r\nimport {LocalData} from '../local';\r\nimport {guestApi, logoutApis, setCenterUrl, setCenterToken, WSChannel, appInFrame, isDevelopment, host} from '../net';\r\nimport { WsBase, wsBridge } from '../net/wsChannel';\r\nimport { resOptions } from './res';\r\nimport { Loading } from './loading';\r\n\r\nimport 'font-awesome/css/font-awesome.min.css';\r\nimport '../css/va-form.css';\r\nimport '../css/va.css';\r\nimport '../css/animation.css';\r\n\r\nconst regEx = new RegExp('Android|webOS|iPhone|iPad|' +\r\n    'BlackBerry|Windows Phone|'  +\r\n    'Opera Mini|IEMobile|Mobile' , \r\n    'i');\r\nconst isMobile = regEx.test(navigator.userAgent);\r\nexport const mobileHeaderStyle = isMobile? {\r\n    minHeight:  '3em'\r\n} : undefined;\r\n\r\nconst logo = require('../img/logo.svg');\r\nlet logMark: number;\r\nconst logs:string[] = [];\r\n\r\nexport interface Props //extends React.Props<Nav>\r\n{\r\n    //view: JSX.Element | (()=>JSX.Element);\r\n    //start?: ()=>Promise<void>;\r\n    onLogined: ()=>Promise<void>;\r\n    notLogined?: ()=>Promise<void>;\r\n};\r\nlet stackKey = 1;\r\nexport interface StackItem {\r\n    key: number;\r\n    view: JSX.Element;\r\n    ceased: boolean;\r\n    confirmClose?: ()=>Promise<boolean>;\r\n    disposer?: ()=>void;\r\n}\r\nexport interface State {\r\n    stack: StackItem[];\r\n    wait: 0|1|2;\r\n    fetchError: FetchError\r\n}\r\n\r\nexport class NavView extends React.Component<Props, State> {\r\n    private stack: StackItem[];\r\n    private htmlTitle: string;\r\n    private waitCount: number = 0;\r\n    private waitTimeHandler?: NodeJS.Timer;\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.back = this.back.bind(this);\r\n        this.navBack = this.navBack.bind(this);\r\n        this.stack = [];\r\n        this.state = {\r\n            stack: this.stack,\r\n            wait: 0,\r\n            fetchError: undefined\r\n        };\r\n    }\r\n    async componentWillMount() {\r\n        window.addEventListener('popstate', this.navBack);\r\n    }\r\n\r\n    async componentDidMount()\r\n    {\r\n        nav.set(this);\r\n        /*\r\n        let start = this.props.start;\r\n        if (start !== undefined) {\r\n            await start();\r\n        }\r\n        else {\r\n        */\r\n            await nav.start();\r\n        //}\r\n    }\r\n\r\n    get level(): number {\r\n        return this.stack.length;\r\n    }\r\n\r\n    startWait() {\r\n        if (this.waitCount === 0) {\r\n            this.setState({wait: 1});\r\n            this.waitTimeHandler = global.setTimeout(\r\n                () => {\r\n                    this.waitTimeHandler = undefined;\r\n                    this.setState({wait: 2});\r\n                },\r\n                1000) as NodeJS.Timer;\r\n        }\r\n        ++this.waitCount;\r\n        this.setState({\r\n            fetchError: undefined,\r\n        });\r\n    }\r\n\r\n    endWait() {\r\n        setTimeout(() => {\r\n            /*\r\n            this.setState({\r\n                fetchError: undefined,\r\n            });*/\r\n            --this.waitCount;\r\n            if (this.waitCount === 0) {\r\n                if (this.waitTimeHandler !== undefined) {\r\n                    clearTimeout(this.waitTimeHandler);\r\n                    this.waitTimeHandler = undefined;\r\n                }\r\n                this.setState({wait: 0});\r\n            }\r\n        },100);\r\n    }\r\n\r\n    async onError(fetchError: FetchError)\r\n    {\r\n        let err = fetchError.error;\r\n        if (err !== undefined && err.unauthorized === true) {\r\n            await nav.showLogin(undefined);\r\n            return;\r\n        }\r\n        this.setState({\r\n            fetchError: fetchError,\r\n        });\r\n    }\r\n\r\n    show(view: JSX.Element, disposer?: ()=>void): number {\r\n        this.clear();\r\n        return this.push(view, disposer);\r\n    }\r\n\r\n    push(view: JSX.Element, disposer?: ()=>void): number {\r\n        this.removeCeased();\r\n        if (this.stack.length > 0) {\r\n            window.history.pushState('forward', null, null);\r\n        }\r\n        let key = stackKey++;\r\n        this.stack.push({\r\n            key: key,\r\n            view: view, \r\n            ceased: false,\r\n            disposer: disposer\r\n        });\r\n        this.refresh();\r\n        //console.log('push: %s pages', this.stack.length);\r\n        return key;\r\n    }\r\n\r\n    replace(view: JSX.Element, disposer?: ()=>void): number {\r\n        let item:StackItem = undefined;\r\n        let stack = this.stack;\r\n        if (stack.length > 0) {\r\n            item = stack.pop();\r\n            //this.popAndDispose();\r\n        }\r\n        let key = stackKey++;\r\n        this.stack.push({\r\n            key: key, \r\n            view: view, \r\n            ceased: false,\r\n            disposer: disposer\r\n        });\r\n        if (item !== undefined) this.dispose(item.disposer);\r\n        this.refresh();\r\n        //console.log('replace: %s pages', this.stack.length);\r\n        return key;\r\n    }\r\n\r\n    ceaseTop(level:number = 1) {\r\n        let p = this.stack.length - 1;\r\n        for (let i=0; i<level; i++, p--) {\r\n            if (p < 0) break;\r\n            let item = this.stack[p];\r\n            item.ceased = true;\r\n        }\r\n    }\r\n\r\n    pop(level:number = 1) {\r\n        let stack = this.stack;\r\n        let len = stack.length;\r\n        //console.log('pop start: %s pages level=%s', len, level);\r\n        if (level <= 0 || len <= 1) return;\r\n        if (len < level) level = len;\r\n        let backLevel = 0;\r\n        for (let i = 0; i < level; i++) {\r\n            if (stack.length === 0) break;\r\n            //stack.pop();\r\n            this.popAndDispose();\r\n            ++backLevel;\r\n        }\r\n        if (backLevel >= len) backLevel--;\r\n        this.refresh();\r\n        if (this.isHistoryBack !== true) {\r\n            //window.removeEventListener('popstate', this.navBack);\r\n            //window.history.back(backLevel);\r\n            //window.addEventListener('popstate', this.navBack);\r\n        }\r\n        //console.log('pop: %s pages', stack.length);\r\n    }\r\n\r\n    popTo(key: number) {\r\n        if (key === undefined) return;\r\n        if (this.stack.find(v => v.key === key) === undefined) return;\r\n        while (this.stack.length >0) {\r\n            let len = this.stack.length;\r\n            let top = this.stack[len-1];\r\n            if (top.key === key) break;\r\n            this.pop();\r\n        }\r\n    }\r\n\r\n    topKey():number {\r\n        let len = this.stack.length;\r\n        if (len === 0) return undefined;\r\n        return this.stack[len-1].key;\r\n    }\r\n\r\n    removeCeased() {\r\n        for (;;) {\r\n            let p=this.stack.length-1;\r\n            if (p < 0) break;\r\n            let top = this.stack[p];\r\n            if (top.ceased === false) break;\r\n            let item = this.stack.pop();\r\n            let {disposer} = item;\r\n            this.dispose(disposer);\r\n        }\r\n        this.refresh();\r\n    }\r\n\r\n    private popAndDispose() {\r\n        this.removeCeased();\r\n        let item = this.stack.pop();\r\n        if (item === undefined) return;\r\n        let {disposer} = item;\r\n        this.dispose(disposer);\r\n        this.removeCeased();\r\n        return item;\r\n    }\r\n\r\n    private dispose(disposer:()=>void) {\r\n        if (disposer === undefined) return;\r\n        let item = this.stack.find(v => v.disposer === disposer);\r\n        if (item === undefined) disposer();\r\n    }\r\n\r\n    clear() {\r\n        let len = this.stack.length;\r\n        while (this.stack.length > 0) this.popAndDispose();\r\n        //this.refresh();\r\n        if (len > 1) {\r\n            //window.removeEventListener('popstate', this.navBack);\r\n            //window.history.back(len-1);\r\n            //window.addEventListener('popstate', this.navBack);\r\n        }\r\n    }\r\n\r\n    regConfirmClose(confirmClose:()=>Promise<boolean>) {\r\n        let stack = this.stack;\r\n        let len = stack.length;\r\n        if (len === 0) return;\r\n        let top = stack[len-1];\r\n        top.confirmClose = confirmClose;\r\n    }\r\n\r\n    private isHistoryBack:boolean = false;\r\n    navBack() {\r\n        nav.log('backbutton pressed - nav level: ' + this.stack.length);\r\n        this.isHistoryBack = true;\r\n        this.back(true);\r\n        this.isHistoryBack = false;\r\n    }\r\n\r\n    async back(confirm:boolean = true) {\r\n        let stack = this.stack;\r\n        let len = stack.length;\r\n        if (len === 0) return;\r\n        if (len === 1) {\r\n            if (self != window.top) {\r\n                window.top.postMessage({type:'pop-app'}, '*');\r\n            }\r\n            return;\r\n        }\r\n        let top = stack[len-1];\r\n        if (confirm===true && top.confirmClose) {\r\n            if (await top.confirmClose()===true) this.pop();\r\n        }\r\n        else {\r\n            this.pop();\r\n        }\r\n    }\r\n\r\n    confirmBox(message?:string): boolean {\r\n        return window.confirm(message);\r\n    }\r\n    clearError = () => {\r\n        this.setState({fetchError: undefined});\r\n    }\r\n    render() {\r\n        const {wait, fetchError} = this.state;\r\n        let stack = this.state.stack;\r\n        let top = stack.length - 1;\r\n        let elWait = null, elError = null;\r\n        switch (wait) {\r\n            case 1:\r\n                elWait = <li className=\"va-wait va-wait1\">\r\n                </li>;\r\n                break;\r\n            case 2:\r\n                elWait = <li className=\"va-wait va-wait2\">\r\n                    <Loading />\r\n                </li>;\r\n                break;\r\n                //<i className=\"fa fa-spinner fa-spin fa-3x fa-fw\"></i>\r\n                //<span className=\"sr-only\">Loading...</span>\r\n        }\r\n        if (fetchError)\r\n            elError = <FetchErrorView clearError={this.clearError} {...fetchError} />\r\n        return (\r\n        <ul className='va'>\r\n            {\r\n                stack.map((item, index) => {\r\n                    let {key, view} = item;\r\n                    return <li key={key} style={index<top? {visibility: 'hidden'}:undefined}>\r\n                        {view}\r\n                    </li>\r\n                })\r\n            }\r\n            {elWait}\r\n            {elError}\r\n        </ul>\r\n        );\r\n    }\r\n\r\n    private refresh() {\r\n        // this.setState({flag: !this.state.flag});\r\n        this.setState({stack: this.stack });\r\n        // this.forceUpdate();\r\n    }\r\n}\r\n\r\nexport interface NavSettings {\r\n    loginTop?: JSX.Element;\r\n}\r\n\r\nexport class Nav {\r\n    private nav:NavView;\r\n    private ws: WsBase;\r\n    private wsHost: string;\r\n    private local: LocalData = new LocalData();\r\n    private navSettings: NavSettings;\r\n    @observable user: User/*InNav*/ = undefined;\r\n    language: string;\r\n    culture: string;\r\n    resUrl: string;\r\n\r\n    constructor() {\r\n        let {lang, district} = resOptions;\r\n        this.language = lang;\r\n        this.culture = district;\r\n    }\r\n\r\n    get guest(): number {\r\n        let guest = this.local.guest;\r\n        if (guest === undefined) return 0;\r\n        let g = guest.get();\r\n        if (g === undefined) return 0;\r\n        return g.guest;\r\n    }\r\n\r\n    set(nav:NavView) {\r\n        //this.logo = logo;\r\n        this.nav = nav;\r\n    }\r\n\r\n    registerReceiveHandler(handler: (message:any)=>Promise<void>):number {\r\n        if (this.ws === undefined) return;\r\n        return this.ws.onWsReceiveAny(handler);\r\n    }\r\n\r\n    unregisterReceiveHandler(handlerId:number) {\r\n        if (this.ws === undefined) return;\r\n        if (handlerId === undefined) return;\r\n        this.ws.endWsReceive(handlerId);\r\n    }\r\n\r\n    async onReceive(msg:any) {\r\n        if (this.ws === undefined) return;\r\n        await this.ws.receive(msg);\r\n    }\r\n\r\n    private async getPredefinedUnitName() {\r\n        try {\r\n            let unitRes = await fetch('unit.json', {});\r\n            //if (unitRes)\r\n            let res = await unitRes.json();\r\n            return res.unit;\r\n        }\r\n        catch (err) {\r\n            this.local.unit.clear();\r\n            return;\r\n        }\r\n    }\r\n\r\n    private async loadPredefinedUnit() {\r\n        let envUnit = process.env.REACT_APP_UNIT;\r\n        if (envUnit !== undefined) {\r\n            return Number(envUnit);\r\n        }\r\n        let unitName:string;\r\n        let unit = this.local.unit.get();\r\n        if (unit !== undefined) {\r\n            if (isDevelopment !== true) return unit.id;\r\n            unitName = await this.getPredefinedUnitName();\r\n            if (unitName === undefined) return;\r\n            if (unit.name === unitName) return unit.id;\r\n        }\r\n        else {\r\n            unitName = await this.getPredefinedUnitName();\r\n            if (unitName === undefined) return;\r\n        }\r\n        let unitId = await guestApi.unitFromName(unitName);\r\n        if (unitId !== undefined) {\r\n            this.local.unit.set({id: unitId, name: unitName});\r\n        }\r\n        return unitId;\r\n    }\r\n\r\n    setSettings(settings?: NavSettings) {\r\n        this.navSettings = settings;\r\n    }\r\n\r\n    hashParam: string;\r\n    private centerHost: string;\r\n    async start() {\r\n        try {\r\n            let hash = document.location.hash;\r\n            if (hash !== undefined && hash.length > 0) {\r\n                let pos = getExHashPos();\r\n                if (pos < 0) pos = undefined;\r\n                this.hashParam = hash.substring(1, pos);\r\n            }\r\n            nav.clear();\r\n            this.startWait();\r\n            await host.start();\r\n            let {url, ws, resHost} = host;\r\n            this.centerHost = url;\r\n            this.resUrl = 'http://' + resHost + '/res/';\r\n            this.wsHost = ws;\r\n            setCenterUrl(url);\r\n            \r\n            let guest:Guest = this.local.guest.get();\r\n            if (guest === undefined) {\r\n                guest = await guestApi.guest();\r\n            }\r\n            nav.setGuest(guest);\r\n\r\n            let exHash = getExHash();\r\n            let appInFrame = setAppInFrame(exHash);\r\n            if (exHash !== undefined && window !== window.parent) {\r\n                // is in frame\r\n                if (appInFrame !== undefined) {\r\n                    this.ws = wsBridge;\r\n                    console.log('this.ws = wsBridge in sub frame');\r\n                    //nav.user = {id:0} as User;\r\n                    if (self !== window.parent) {\r\n                        window.parent.postMessage({type:'sub-frame-started', hash: appInFrame.hash}, '*');\r\n                    }\r\n                    // 下面这一句，已经移到 appBridge.ts 里面的 initSubWin，也就是响应从main frame获得user之后开始。\r\n                    //await this.showAppView();\r\n                    return;\r\n                }\r\n            }\r\n\r\n            let predefinedUnit = await this.loadPredefinedUnit();\r\n            appInFrame.predefinedUnit = predefinedUnit;\r\n\r\n            let user: User = this.local.user.get();\r\n            if (user === undefined) {\r\n                let {notLogined} = this.nav.props;\r\n                if (notLogined !== undefined) {\r\n                    await notLogined();\r\n                }\r\n                else {\r\n                    await nav.showLogin(undefined);\r\n                }\r\n                return;\r\n            }\r\n\r\n            await nav.logined(user);\r\n        }\r\n        catch (err) {\r\n        }\r\n        finally {\r\n            this.endWait();\r\n        }\r\n    }\r\n\r\n    async showAppView() {\r\n        let {onLogined} = this.nav.props;\r\n        if (onLogined === undefined) {\r\n            nav.push(<div>NavView has no prop onLogined</div>);\r\n            return;\r\n        }\r\n        nav.clear();\r\n        await onLogined();\r\n        console.log('logined: AppView shown');\r\n    }\r\n\r\n    setGuest(guest: Guest) {\r\n        this.local.guest.set(guest);\r\n        netToken.set(0, guest.token);\r\n    }\r\n\r\n    saveLocalUser() {\r\n        this.local.user.set(this.user);\r\n    }\r\n\r\n    async logined(user: User, callback?: (user:User)=>Promise<void>) {\r\n        logoutApis();\r\n        let ws:WSChannel = this.ws = new WSChannel(this.wsHost, user.token);\r\n        ws.connect();\r\n\r\n        console.log(\"logined: %s\", JSON.stringify(user));\r\n        this.user = user;\r\n        this.saveLocalUser();\r\n        netToken.set(user.id, user.token);\r\n        if (callback !== undefined) //this.loginCallbacks.has)\r\n            callback(user);\r\n            //this.loginCallbacks.call(user);\r\n        else {\r\n            await this.showAppView();\r\n        }\r\n    }\r\n\r\n    loginTop(defaultTop:JSX.Element) {\r\n        return (this.navSettings && this.navSettings.loginTop) || defaultTop;\r\n    }\r\n\r\n    async showLogin(callback?: (user:User)=>Promise<void>, withBack?:boolean) {\r\n        let lv = await import('../entry/login');\r\n        let loginView = <lv.default \r\n            withBack={withBack} \r\n            callback={callback} />;\r\n        if (withBack !== true) {\r\n            this.nav.clear();\r\n            this.pop();\r\n        }\r\n        this.nav.push(loginView);\r\n    }\r\n\r\n    async showLogout(callback?: ()=>Promise<void>) {\r\n        nav.push(<Page header=\"安全退出\" back=\"close\">\r\n            <div className=\"m-5 border border-info bg-white rounded p-3 text-center\">\r\n                <div>退出当前账号不会删除任何历史数据，下次登录依然可以使用本账号</div>\r\n                <div className=\"mt-3\">\r\n                    <button className=\"btn btn-danger\" onClick={()=>this.logout(callback)}>退出</button>\r\n                </div>\r\n            </div>\r\n        </Page>);\r\n    }\r\n\r\n    async logout(callback?:()=>Promise<void>) { //notShowLogin?:boolean) {\r\n        appInFrame.unit = undefined;\r\n        this.local.logoutClear();\r\n        this.user = undefined; //{} as User;\r\n        logoutApis();\r\n        let guest = this.local.guest.get();\r\n        setCenterToken(0, guest && guest.token);\r\n        this.ws = undefined;\r\n        /*\r\n        if (this.loginCallbacks.has)\r\n            this.logoutCallbacks.call();\r\n        else {\r\n            if (notShowLogin === true) return;\r\n        }\r\n        await nav.start();\r\n        */\r\n        if (callback === undefined)\r\n            await nav.start();\r\n        else\r\n            await callback();\r\n    }\r\n\r\n    async changePassword() {\r\n        let cp = await import('../entry/changePassword');\r\n        nav.push(<cp.ChangePasswordPage />);\r\n    }\r\n\r\n    get level(): number {\r\n        return this.nav.level;\r\n    }\r\n    startWait() {\r\n        this.nav.startWait();\r\n    }\r\n    endWait() {\r\n        this.nav.endWait();\r\n    }\r\n    async onError(error: FetchError) {\r\n        await this.nav.onError(error);\r\n    }\r\n    show (view: JSX.Element, disposer?: ()=>void): void {\r\n        this.nav.show(view, disposer);\r\n    }\r\n    push(view: JSX.Element, disposer?: ()=>void): void {\r\n        this.nav.push(view, disposer);\r\n    }\r\n    replace(view: JSX.Element, disposer?: ()=>void): void {\r\n        this.nav.replace(view, disposer);\r\n    }\r\n    pop(level:number = 1) {\r\n        this.nav.pop(level);\r\n    }\r\n    topKey():number {\r\n        return this.nav.topKey();\r\n    }\r\n    popTo(key:number) {\r\n        this.nav.popTo(key);\r\n    }\r\n    clear() {\r\n        this.nav.clear();\r\n    }\r\n    navBack() {\r\n        this.nav.navBack();\r\n    }\r\n    ceaseTop(level?:number) {\r\n        this.nav.ceaseTop(level);\r\n    }\r\n    removeCeased() {\r\n        this.nav.removeCeased();\r\n    }\r\n    async back(confirm:boolean = true) {\r\n        await this.nav.back(confirm);\r\n    }\r\n    regConfirmClose(confirmClose: ()=>Promise<boolean>) {\r\n        this.nav.regConfirmClose(confirmClose);\r\n    }\r\n    confirmBox(message?:string): boolean {\r\n        return this.nav.confirmBox(message);\r\n    }\r\n    async navToApp(url: string, unitId: number, apiId?:number, sheetType?:number, sheetId?:number):Promise<void> {\r\n        return new Promise<void>((resolve, reject) => {\r\n            let sheet = this.centerHost.includes('http://localhost:') === true? 'sheet_debug':'sheet'\r\n            let uh = sheetId === undefined?\r\n                    appUrl(url, unitId) :\r\n                    appUrl(url, unitId, sheet, [apiId, sheetType, sheetId]);\r\n            console.log('navToApp: %s', JSON.stringify(uh));\r\n            nav.push(<article className='app-container'>\r\n                <span id={uh.hash} onClick={()=>this.back()} style={mobileHeaderStyle}>\r\n                    <i className=\"fa fa-arrow-left\" />\r\n                </span>\r\n                <iframe src={uh.url} />\r\n            </article>, \r\n            ()=> {\r\n                resolve();\r\n            });\r\n        });\r\n    }\r\n\r\n    navToSite(url: string) {\r\n        // show in new window\r\n        window.open(url);\r\n    }\r\n\r\n    get logs() {return logs};\r\n    log(msg:string) {\r\n        logs.push(msg);\r\n    }\r\n    logMark() {\r\n        let date = new Date();\r\n        logMark = date.getTime();\r\n        logs.push('log-mark: ' + date.toTimeString());\r\n    }\r\n    logStep(step:string) {\r\n        logs.push(step + ': ' + (new Date().getTime() - logMark));\r\n    }\r\n}\r\nexport const nav: Nav = new Nav();\r\n","import * as React from 'react';\r\nimport { CApp, AppUI } from './controllers';\r\nexport * from './entities';\r\nexport * from './controllers';\r\nexport * from './centerApi';\r\nexport * from './tools';\r\n\r\nfunction convertUIKeyToLowercase(obj: any) {\r\n    for (let i in obj) {\r\n        let v = obj[i];\r\n        obj[i.toLowerCase()] = v;\r\n        if (typeof v !== 'object') continue;\r\n        if (React.isValidElement(v)) continue;\r\n        if (Array.isArray(v) !== true) {\r\n            convertUIKeyToLowercase(v);\r\n            continue;\r\n        }\r\n        for (let i of (v as any[])) {\r\n            convertUIKeyToLowercase(i);\r\n        }\r\n    }\r\n}\r\n\r\nexport async function startApp(ui: AppUI) {\r\n    convertUIKeyToLowercase(ui);\r\n    let cApp = new (ui && ui.CApp || CApp)(ui);\r\n    await cApp.start();\r\n}\r\n","import * as React from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport { jsonStringify } from '../../tools';\r\n\r\nexport type TypeViewModel = typeof ViewModel;\r\nexport type TypeView = React.StatelessComponent<{vm: ViewModel, className?:string|string[]}>;\r\nexport type TypeContent = React.StatelessComponent<any>;\r\n\r\nexport abstract class ViewModel {\r\n    protected abstract get view(): TypeView;\r\n    render(className?:string|string[]):JSX.Element {\r\n        if (this.view === undefined) return <div>??? viewModel 必须定义 view ???</div>\r\n        return React.createElement(this.view, {vm: this, className:className});\r\n    }\r\n}\r\n\r\nexport const PureJSONContent = (values, x?:any) => <>content: {jsonStringify(values)}</>;\r\nexport const JSONContent = observer(PureJSONContent);\r\nexport const RowContent = \r\n    (values) => <div className=\"px-3 py-2\">{jsonStringify(values)}</div>\r\n;\r\n","import { decodeGuestToken } from '../user';\r\nimport { CenterApi } from './uqApi';\r\n\r\nexport class GuestApi extends CenterApi {\r\n    async guest(): Promise<any> {\r\n        //let guest = nav.local.guest.get();\r\n        let ret = await this.get('', {});\r\n        switch (typeof ret) {\r\n            default: return;\r\n            case 'string': return decodeGuestToken(ret);\r\n            case 'object':\r\n                let guest = decodeGuestToken(ret.token);\r\n                return guest;\r\n        }\r\n    }\r\n\r\n    async unitFromName(unitName:string): Promise<number> {\r\n        let ret = await this.get(unitName);\r\n        return ret && ret.unit;\r\n    }\r\n}\r\n\r\nexport const guestApi = new GuestApi('tv/guest/', undefined);\r\n","export {WSChannel, wsBridge, postWsToTop} from './wsChannel';\r\nexport * from './apiBase';\r\nexport * from './guestApi';\r\nexport * from './uqApi';\r\nexport {appInFrame, isBridged, getExHash} from './appBridge';\r\nexport * from './host';\r\nexport {httpGet} from './httpChannel';\r\n","function replacer(key:string, value:any) {\r\n    let first = key.substr(0, 1);\r\n    switch (first) {\r\n        default: return value;\r\n        case '$':\r\n        case '_': return;\r\n    }\r\n}\r\n\r\nexport function jsonStringify(value:any) {\r\n    return JSON.stringify(value, replacer, ' ');\r\n}\r\n","import * as React from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport { BoxId, Tuid } from \"../entities\";\r\nimport { PureJSONContent } from '../controllers';\r\n\r\ntype TvTemplet = (values?:any, x?:any) => JSX.Element;\r\n\r\ninterface Props {\r\n    tuidValue: number|BoxId, \r\n    ui?: TvTemplet,\r\n    x?: any,\r\n    nullUI?: ()=>JSX.Element\r\n}\r\n\r\nfunction boxIdContent(bi: number|BoxId, ui:TvTemplet, x:any) {\r\n    if (typeof bi === 'number') return <>{bi}</>;\r\n    let {id, _$tuid, _$com} = bi as BoxId;\r\n    let t:Tuid = _$tuid;\r\n    if (t === undefined) {\r\n        if (ui !== undefined) return ui(bi, x);\r\n        return PureJSONContent(bi, x);\r\n    }\r\n    let com = ui || _$com;\r\n    if (com === undefined) {\r\n        com = bi._$com = t.getTuidContent();\r\n    }\r\n    let val = t.valueFromId(id);\r\n    if (typeof val === 'number') val = {id: val};\r\n    if (ui !== undefined) {\r\n        let ret = ui(val, x);\r\n        if (ret !== undefined) return ret;\r\n        return <>{id}</>;\r\n    }\r\n    return React.createElement(com, val);\r\n}\r\n\r\nconst Tv = observer(({tuidValue, ui, x, nullUI}:Props) => {\r\n    if (tuidValue === undefined) {\r\n        if (nullUI === undefined) return <>[undefined]</>;\r\n        return nullUI();\r\n    }\r\n    if (tuidValue === null) {\r\n        if (nullUI === undefined) return <>[null]</>;\r\n        return nullUI();\r\n    }\r\n    let ttv = typeof tuidValue;\r\n    switch (ttv) {\r\n        default:\r\n            if (ui === undefined)\r\n                return <>{ttv}-{tuidValue}</>;\r\n            else {\r\n                let ret = ui(tuidValue, x);\r\n                if (ret !== undefined) return ret;\r\n                return <>{tuidValue}</>;\r\n            }\r\n        case 'object':\r\n            return boxIdContent(tuidValue, ui, x);\r\n        case 'number':\r\n            return <>id...{tuidValue}</>;\r\n    }\r\n});\r\n\r\nexport const tv = (tuidValue:number|BoxId, ui?:TvTemplet, x?:any, nullUI?:()=>JSX.Element):JSX.Element => {\r\n    return <Tv tuidValue={tuidValue} ui={ui} x={x} nullUI={nullUI} />;\r\n};\r\n","export * from './jsonStringify';\r\nexport * from './tv';\r\n","export * from './nav';\r\nexport * from './titleBar';\r\nexport * from './page';\r\nexport * from './VM';\r\nexport * from './schema';\r\nexport * from './form';\r\nexport * from './edit';\r\nexport * from './res';\r\nexport * from './tabs';\r\nexport * from './loading';\r\nexport * from './image';\r\nexport * from './resUploader';\r\nexport * from './rules';","import _ from 'lodash';\r\nimport {nav} from '../ui';\r\nimport {uid} from '../uid';\r\nimport {uqTokenApi as uqTokenApi, callCenterapi, CenterAppApi, AppUq, centerToken, App, setCenterToken} from './uqApi';\r\nimport {setSubAppWindow} from './wsChannel';\r\nimport { host } from './host';\r\n\r\nexport interface UqToken {\r\n    name: string;\r\n    url: string;\r\n    urlDebug: string;\r\n    token: string;\r\n}\r\ninterface UqTokenAction extends UqToken {\r\n    resolve: (value?: UqToken | PromiseLike<UqToken>) => void;\r\n    reject: (reason?: any) => void;\r\n}\r\nconst uqTokens:{[uqName:string]: UqTokenAction}  = {};\r\nexport function logoutUqTokens() {\r\n    for (let i in uqTokens) uqTokens[i] = undefined;\r\n}\r\n\r\nexport interface AppInFrame {\r\n    hash: string;\r\n    unit: number;       // unit id\r\n    page?: string;\r\n    param?: string[];\r\n    predefinedUnit?: number;  // 比如像Cart这样的应用，直接让用户访问的，就需要在unit.json里面定义unitName\r\n}\r\nconst appsInFrame:{[key:string]:AppInFrame} = {};\r\n\r\nclass AppInFrameClass implements AppInFrame {\r\n    hash: string;\r\n    private _unit: number;\r\n    get unit(): number {return this._unit;}       // unit id\r\n    set unit(val:number) { this._unit=val;}\r\n    page?: string;\r\n    param?: string[];\r\n}\r\n\r\nexport let appInFrame:AppInFrame = new AppInFrameClass();\r\n/* {\r\n    hash: undefined,\r\n    get unit():number {return } undefined, //debugUnitId,\r\n    page: undefined;\r\n    param: undefined,\r\n}*/\r\n\r\nexport function isBridged():boolean {\r\n    return self !== window.parent;\r\n}\r\n\r\nwindow.addEventListener('message', async function(evt) {\r\n    var message = evt.data;\r\n    switch (message.type) {\r\n        case 'sub-frame-started':\r\n            subFrameStarted(evt);\r\n            break;\r\n        case 'ws':\r\n            //wsBridge.receive(message.msg);\r\n            await nav.onReceive(message.msg);\r\n            break;\r\n        case 'init-sub-win':\r\n            await initSubWin(message);\r\n            break;\r\n        case 'pop-app':\r\n            nav.navBack();\r\n            break;\r\n        case 'center-api':\r\n            await callCenterApiFromMessage(evt.source as Window, message);\r\n            break;\r\n        case 'center-api-return':\r\n            bridgeCenterApiReturn(message);\r\n            break;\r\n        case 'app-api':\r\n            console.log(\"receive PostMessage: %s\", JSON.stringify(message));\r\n            let ret = await onReceiveAppApiMessage(message.hash, message.apiName);\r\n            console.log(\"onReceiveAppApiMessage: %s\", JSON.stringify(ret));\r\n            (evt.source as Window).postMessage({\r\n                type: 'app-api-return', \r\n                apiName: message.apiName,\r\n                url: ret.url,\r\n                urlDebug: ret.urlDebug,\r\n                token: ret.token} as any, \"*\");\r\n            break;\r\n        case 'app-api-return':\r\n            console.log(\"app-api-return: %s\", JSON.stringify(message));\r\n            console.log('await onAppApiReturn(message);');\r\n            await onAppApiReturn(message);\r\n            break;\r\n        default:\r\n            this.console.log('message: %s', JSON.stringify(message));\r\n            break;\r\n    }\r\n});\r\n\r\nfunction subFrameStarted(evt:any) {\r\n    var message = evt.data;\r\n    let subWin = evt.source as Window;\r\n    setSubAppWindow(subWin);\r\n    hideFrameBack(message.hash);\r\n    let msg:any = _.clone(nav.user);\r\n    msg.type = 'init-sub-win';\r\n    subWin.postMessage(msg, '*');\r\n}\r\nfunction hideFrameBack(hash:string) {\r\n    let el = document.getElementById(hash);\r\n    if (el !== undefined) el.hidden = true;\r\n}\r\nasync function initSubWin(message:any) {\r\n    console.log('initSubWin: set nav.user', message);\r\n    let user = nav.user = message; // message.user;\r\n    setCenterToken(user.id, user.token);\r\n    await nav.showAppView();\r\n}\r\nasync function onReceiveAppApiMessage(hash: string, apiName: string): Promise<UqToken> {\r\n    let appInFrame = appsInFrame[hash];\r\n    if (appInFrame === undefined) return {name:apiName, url:undefined, urlDebug:undefined, token:undefined};\r\n    let unit = getUnit();\r\n    let parts = apiName.split('/');\r\n    let ret = await uqTokenApi.uq({unit: unit, uqOwner: parts[0], uqName: parts[1]});\r\n    return {name: apiName, url: ret.url, urlDebug:ret.urlDebug, token: ret.token};\r\n}\r\n\r\nasync function onAppApiReturn(message:any) {\r\n    let {apiName, url, urlDebug, token} = message;\r\n    let action = uqTokens[apiName];\r\n    if (action === undefined) {\r\n        throw 'error app api return';\r\n        //return;\r\n    }\r\n    let realUrl = host.getUrlOrDebug(url, urlDebug);\r\n    console.log('onAppApiReturn(message:any): url=' + url + ', debug=' + urlDebug + ', real=' + realUrl);\r\n    action.url = realUrl;\r\n    action.token = token;\r\n    action.resolve(action);\r\n}\r\n\r\nexport function setAppInFrame(appHash: string):AppInFrame {\r\n    if (appHash) {\r\n        let parts = appHash.split('-');\r\n        let len = parts.length;\r\n        if (len > 0) {\r\n            let p = 1;\r\n            appInFrame.hash = parts[p++];\r\n            if (len>0) appInFrame.unit = Number(parts[p++]);\r\n            if (len>1) appInFrame.page = parts[p++];\r\n            if (len>2) appInFrame.param = parts.slice(p++);\r\n        }\r\n    }\r\n    return appInFrame;\r\n}\r\n\r\nexport function getExHashPos():number {\r\n    let hash = document.location.hash;\r\n    if (hash !== undefined && hash.length > 0) {\r\n        let pos = hash.lastIndexOf('#tv-');\r\n        if (pos < 0) pos = hash.lastIndexOf('#tvdebug-');\r\n        return pos;\r\n    }\r\n    return -1;\r\n}\r\n\r\nexport function getExHash():string {\r\n    let pos = getExHashPos();\r\n    if (pos < 0) return undefined;\r\n    return document.location.hash.substring(pos);\r\n}\r\n\r\nexport function appUrl(url: string, unitId: number, page?:string, param?:any[]):{url:string; hash:string} {\r\n    let u:string;\r\n    for (;;) {\r\n        u = uid();\r\n        let a = appsInFrame[u];\r\n        if (a === undefined) {\r\n            appsInFrame[u] = {hash:u, unit:unitId};\r\n            break;\r\n        }\r\n    }\r\n    url += '#tv-' + u + '-' + unitId;\r\n    if (page !== undefined) {\r\n        url += '-' + page;\r\n        if (param !== undefined) {\r\n            for (let i=0; i<param.length; i++) {\r\n                url += '-' + param[i];\r\n            }\r\n        }\r\n    }\r\n    return {url: url, hash: u};\r\n}\r\n\r\nfunction getUnit():number {\r\n    let {unit, predefinedUnit} = appInFrame;\r\n    let realUnit = unit || predefinedUnit;\r\n    if (realUnit === undefined) {\r\n        throw 'no unit defined in unit.json or not logined in';\r\n    }\r\n    return realUnit;\r\n}\r\n\r\nexport async function appUq(uq:string, uqOwner:string, uqName:string): Promise<UqToken> {\r\n    let uqToken = uqTokens[uq];\r\n    if (uqToken !== undefined) return uqToken;\r\n    if (!isBridged()) {\r\n        let unit = getUnit();\r\n        uqToken = await uqTokenApi.uq({unit:unit, uqOwner:uqOwner, uqName:uqName});\r\n        if (uqToken.token === undefined) uqToken.token = centerToken;\r\n        let {url, urlDebug} = uqToken;\r\n        let realUrl = host.getUrlOrDebug(url, urlDebug);\r\n        console.log('realUrl: %s', realUrl);\r\n        uqToken.url = realUrl;\r\n        uqTokens[uq] = uqToken;\r\n        return uqToken;\r\n    }\r\n    console.log(\"appApi parent send: %s\", appInFrame.hash);\r\n    uqToken = {\r\n        name: uq,\r\n        url: undefined,\r\n        urlDebug: undefined,\r\n        token: undefined,\r\n        resolve: undefined,\r\n        reject: undefined,\r\n    };\r\n    uqTokens[uq] = uqToken;\r\n    return new Promise<UqToken>((resolve, reject) => {\r\n        uqToken.resolve = async (at) => {\r\n            let a = await at;\r\n            console.log('return from parent window: %s', JSON.stringify(a));\r\n            uqToken.url = a.url;\r\n            uqToken.urlDebug = a.urlDebug;\r\n            uqToken.token = a.token;\r\n            resolve(uqToken);\r\n        }\r\n        uqToken.reject = reject;\r\n        (window.opener || window.parent).postMessage({\r\n            type: 'app-api',\r\n            apiName: uq,\r\n            hash: appInFrame.hash,\r\n        }, \"*\");\r\n    });\r\n}\r\n\r\ninterface BridgeCenterApi {\r\n    id: string;\r\n    resolve: (value?:any)=>any;\r\n    reject: (reason?:any)=>void;\r\n}\r\nconst brideCenterApis:{[id:string]: BridgeCenterApi} = {};\r\nexport async function bridgeCenterApi(url:string, method:string, body:any):Promise<any> {\r\n    console.log('bridgeCenterApi: url=%s, method=%s', url, method);\r\n    return await new Promise<any>(async (resolve, reject) => {\r\n        let callId:string;\r\n        for (;;) {\r\n            callId = uid();\r\n            let bca = brideCenterApis[callId];\r\n            if (bca === undefined) {\r\n                brideCenterApis[callId] = {\r\n                    id: callId,\r\n                    resolve: resolve,\r\n                    reject: reject,\r\n                }\r\n                break;\r\n            }\r\n        }\r\n        (window.opener || window.parent).postMessage({\r\n            type: 'center-api',\r\n            callId: callId,\r\n            url: url,\r\n            method: method,\r\n            body: body\r\n        }, '*');\r\n    });\r\n}\r\n\r\nasync function callCenterApiFromMessage(from:Window, message):Promise<void> {\r\n    let {callId, url, method, body} = message;\r\n    let result = await callCenterapi.directCall(url, method, body);\r\n    from.postMessage({\r\n        type: 'center-api-return',\r\n        callId: callId,\r\n        result: result,\r\n    }, '*');\r\n}\r\n\r\nfunction bridgeCenterApiReturn(message:any) {\r\n    let {callId, result} = message;\r\n    let bca = brideCenterApis[callId];\r\n    if (bca === undefined) return;\r\n    brideCenterApis[callId] = undefined;\r\n    bca.resolve(result);\r\n}\r\n","import * as React from 'react';\r\nimport {IComputedValue} from 'mobx';\r\nimport {observer} from 'mobx-react';\r\nimport classNames from 'classnames';\r\nimport _ from 'lodash';\r\nimport {TitleBar} from './titleBar';\r\n\r\nexport interface ScrollProps {\r\n    onScroll?: (e:any) => void;\r\n    onScrollTop?: () => void;\r\n    onScrollBottom?: () => void;\r\n}\r\ninterface ScrollViewProps extends ScrollProps {\r\n    className?: string;\r\n}\r\nconst scrollTimeGap = 100;\r\nclass ScrollView extends React.Component<ScrollViewProps, null> {\r\n    private bottomTime:number = 0;\r\n    private topTime:number = 0;\r\n\r\n    private onScroll = async (e) => {\r\n        let {onScroll, onScrollTop, onScrollBottom} = this.props;\r\n        if (onScroll) this.props.onScroll(e);\r\n        let el = e.target as HTMLBaseElement;\r\n        if (el.scrollTop < 30) {\r\n            //this.eachChild(this, 'top');\r\n            if (onScrollTop !== undefined) {\r\n                let topTime = new Date().getTime();\r\n                if (topTime-this.topTime > scrollTimeGap) {\r\n                    this.topTime = topTime;\r\n                    onScrollTop();\r\n                }\r\n            }\r\n        }\r\n        if (el.scrollTop + el.offsetHeight > el.scrollHeight - 30) {\r\n            //this.eachChild(this, 'bottom');\r\n            if (onScrollBottom !== undefined) {\r\n                let bottomTime = new Date().getTime();\r\n                if (bottomTime - this.bottomTime > scrollTimeGap) {\r\n                    this.bottomTime = bottomTime;\r\n                    onScrollBottom();\r\n                }\r\n            }\r\n        }\r\n    }\r\n    private eachChild(c:any, direct:'top'|'bottom') {\r\n        let { props } = c;\r\n        if (props === undefined)\r\n            return;\r\n        let { children } = props;\r\n        if (children === undefined)\r\n            return;\r\n        React.Children.forEach(children, (child, index) => {\r\n            let {_$scroll} = child as any;\r\n            if (_$scroll) _$scroll(direct);\r\n            console.log(child.toString());\r\n            this.eachChild(child, direct);\r\n        });\r\n    }\r\n    render() {\r\n        return (\r\n            <main className={this.props.className} onScroll={this.onScroll}>\r\n                {this.props.children}\r\n            </main>\r\n        );\r\n    }\r\n}\r\n\r\nexport interface Tab extends ScrollProps {\r\n    title: string;\r\n    icon?: string;\r\n    content?: JSX.Element | (()=>JSX.Element);\r\n    header?: string;\r\n    isSelected?: boolean;\r\n    redDot?: IComputedValue<number>;\r\n    load?: () => Promise<void>;\r\n}\r\nexport interface TabState extends Tab {\r\n    isMounted?: boolean;\r\n}\r\nexport interface PageProps extends ScrollProps {\r\n    back?: 'close' | 'back' | 'none';\r\n    header?: boolean | string | JSX.Element;\r\n    keepHeader?: boolean;\r\n    right?: JSX.Element;\r\n    sideBar?: JSX.Element;\r\n    footer?: JSX.Element;\r\n    tabs?: Tab[];\r\n    logout?: boolean | (()=>Promise<void>);\r\n}\r\nexport interface PageState {\r\n    cur?: Tab;\r\n    tabs?: TabState[];\r\n}\r\n\r\n@observer\r\nexport class Page extends React.Component<PageProps, PageState> {\r\n    private tabs:TabState[];\r\n    constructor(props: PageProps) {\r\n        super(props);\r\n        let {tabs} = props;\r\n        if (tabs === undefined || tabs.length === 0) return;\r\n        this.tabs = tabs;\r\n        let cur:Tab;\r\n        let tabStates:Tab[] = [];\r\n        for (let tab of tabs) {\r\n            let t:TabState = _.clone(tab);\r\n            if (cur === undefined) {\r\n                if (t.isSelected === true)\r\n                    cur = t;\r\n                else\r\n                    t.isSelected = false;\r\n            }\r\n            else {\r\n                t.isSelected = false;\r\n            }\r\n            t.isMounted = false;\r\n            tabStates.push(t);\r\n        }\r\n        this.state = {\r\n            cur: cur,\r\n            tabs: tabStates,\r\n        };\r\n    }\r\n\r\n    async componentDidMount() {\r\n        if (this.tabs === undefined) return;\r\n        let t0 = this.state.tabs[0];\r\n        if (t0 === undefined) return;\r\n        await this.onTabClick(t0);\r\n    }\r\n\r\n    private async onTabClick(tab: TabState) {\r\n        if (tab.isSelected === true) return;\r\n        let cur:TabState;\r\n        let tabs = this.state.tabs;\r\n        for (let t of tabs) {\r\n            if (t === tab) {\r\n                t.isSelected = true;\r\n                cur = t;\r\n            }\r\n            else\r\n                t.isSelected = false;\r\n        }\r\n        if (cur.isMounted !== true) {\r\n            let {load} = cur;\r\n            if (load !== undefined) {\r\n                await load();\r\n            }\r\n        }\r\n        this.setState({\r\n            cur: cur,\r\n            tabs: tabs\r\n        });\r\n    }\r\n\r\n    private onTouchStart(evt: React.TouchEvent<HTMLElement>) {\r\n    }\r\n\r\n    private renderTabs(footer: JSX.Element) {\r\n        const {header, back, right, keepHeader} = this.props;\r\n        let cur = this.state.cur;\r\n        let tabs = <div>{\r\n                this.state.tabs.map((tab, index) => {\r\n                    const {icon, isSelected, title, redDot} = tab;\r\n                    let img:any, redDotView:any, cn:any;\r\n                    if (icon !== undefined) img = <img src={icon} />;\r\n                    if (redDot !== undefined) {\r\n                        let v = redDot.get();\r\n                        if (v < 0) {\r\n                            cn = classNames('red-dot');\r\n                            redDotView = <u />;\r\n                        }\r\n                        else if (v > 0) {\r\n                            cn = classNames('red-dot', 'num');\r\n                            redDotView = <u>{v}</u>;\r\n                        }\r\n                    }\r\n                    return <div key={index}\r\n                        className= {classNames('va-tab', {cur: isSelected})}\r\n                        onClick={() => this.onTabClick(tab)}>\r\n                        {img}<div className={cn}>{title}{redDotView}</div>\r\n                    </div>\r\n                })\r\n            }</div>;\r\n        let titleBar;\r\n        if (header !== false) {\r\n            titleBar = <TitleBar \r\n                back={back} \r\n                center={keepHeader===true? (header as string) : (cur && (cur.header || cur.title))}\r\n                right={right} \r\n            />;\r\n        }\r\n\r\n        return <article className='page-container'>\r\n            {titleBar}\r\n            <section className=\"position-relative\">\r\n            {this.props.sideBar}\r\n            {\r\n                this.state.tabs.map((tab, index) => {\r\n                    let {isSelected, isMounted, content} = tab;\r\n                    if (isSelected === true || isMounted === true) {\r\n                        tab.isMounted = true;\r\n                        return <ScrollView key={index}\r\n                            className={classNames({invisible: isSelected===false})}\r\n                            onScroll={tab.onScroll}\r\n                            onScrollTop={tab.onScrollTop}\r\n                            onScrollBottom={tab.onScrollBottom}\r\n                        >\r\n                            {(typeof content)==='function'? (content as ()=>JSX.Element)():content}\r\n                        </ScrollView>;\r\n                    }\r\n                })\r\n            }\r\n            </section>\r\n            {tabs}\r\n            {footer}\r\n        </article>;\r\n    }\r\n    private renderSingle(footer: JSX.Element) {\r\n        const {back, header, right, onScroll, onScrollTop, onScrollBottom, children} = this.props;\r\n        let titleBar;\r\n        if (header !== false)\r\n            titleBar = <TitleBar \r\n                back={back} \r\n                center={header as any}\r\n                right={right}\r\n                logout={this.props.logout}\r\n            />;\r\n        return (\r\n            <article className='page-container' onTouchStart={this.onTouchStart}>\r\n                {titleBar}\r\n                <section className=\"position-relative\">\r\n                    {this.props.sideBar}\r\n                    <ScrollView\r\n                        onScroll={onScroll}\r\n                        onScrollTop={onScrollTop}\r\n                        onScrollBottom={onScrollBottom}\r\n                    >\r\n                        {children}\r\n                    </ScrollView>\r\n                </section>\r\n                {footer}\r\n            </article>\r\n        );\r\n    }\r\n\r\n    render() {\r\n        const {footer} = this.props;\r\n        let elFooter;\r\n        if (footer !== undefined) elFooter = <footer>{footer}</footer>;\r\n        if (this.tabs !== undefined)\r\n            return this.renderTabs(elFooter);\r\n        else\r\n            return this.renderSingle(elFooter);\r\n    }\r\n}\r\n","import {nav} from '../ui/nav';\r\nimport {FetchError} from '../fetchError';\r\n\r\nexport interface HttpChannelUI {\r\n    startWait():void;\r\n    endWait():void;\r\n    showError(error:FetchError):Promise<void>;\r\n}\r\n\r\nexport class HttpChannelNavUI implements HttpChannelUI {\r\n    startWait() {\r\n        nav.startWait();\r\n    }\r\n    endWait() {\r\n        nav.endWait();\r\n    }\r\n    async showError(error:FetchError):Promise<void> {\r\n        nav.endWait();\r\n        /*\r\n        if (error.name === 'SyntaxError') {\r\n            error = {\r\n                name: error.name,\r\n                message: error.message,\r\n            }\r\n        }*/\r\n        await nav.onError(error);\r\n    }\r\n}\r\n\r\n","import _ from 'lodash';\r\nimport {HttpChannel} from './httpChannel';\r\nimport {HttpChannelUI, HttpChannelNavUI} from './httpChannelUI';\r\nimport {appUq, appInFrame, logoutUqTokens} from './appBridge';\r\nimport {ApiBase} from './apiBase';\r\nimport { host } from './host';\r\nimport { nav } from '../ui';\r\n\r\nlet channelUIs:{[name:string]: HttpChannel} = {};\r\nlet channelNoUIs:{[name:string]: HttpChannel} = {};\r\n\r\nexport function logoutApis() {\r\n    channelUIs = {};\r\n    channelNoUIs = {};\r\n    logoutUnitxApis();\r\n    logoutUqTokens();\r\n}\r\n\r\ninterface UqLocal {\r\n    value: any;\r\n    tick?: number;\r\n    isNet?: boolean;\r\n}\r\ninterface UqLocals {\r\n    user: number;\r\n    unit: number;\r\n    uqs: {[uq:string]: UqLocal};\r\n}\r\n\r\nconst uqLocalEntities = 'uqLocalEntities';\r\nclass CacheUqLocals {\r\n    private local:UqLocals;\r\n\r\n    async loadAccess(uqApi: UqApi):Promise<any> {\r\n        try {\r\n            let {uqOwner, uqName} = uqApi;\r\n            if (this.local === undefined) {\r\n                let ls = localStorage.getItem(uqLocalEntities);\r\n                if (ls !== null) {\r\n                    this.local = JSON.parse(ls);\r\n                }\r\n            }\r\n            if (this.local !== undefined) {\r\n                let {user, uqs} = this.local;\r\n                if (user !== loginedUserId || uqs === undefined) {\r\n                    this.local = undefined;\r\n                }\r\n                else {\r\n                    for (let i in uqs) {\r\n                        let ul = uqs[i];\r\n                        ul.isNet = undefined;\r\n                    }\r\n                }\r\n            }\r\n            if (this.local === undefined) {\r\n                this.local = {\r\n                    user: loginedUserId,\r\n                    unit: undefined,\r\n                    uqs: {}\r\n                };\r\n            }\r\n\r\n            let ret: any;\r\n            let un = uqOwner+'/'+uqName;\r\n            let uq = this.local.uqs[un];\r\n            if (uq !== undefined) {\r\n                let {value} = uq;\r\n                ret = value;\r\n            }\r\n            if (ret === undefined) {\r\n                ret = await uqApi.__loadAccess();\r\n                this.saveLocal(un, ret);\r\n            }\r\n            return _.cloneDeep(ret);\r\n        }\r\n        catch (err) {\r\n            this.local = undefined;\r\n            localStorage.removeItem(uqLocalEntities);\r\n            throw err;\r\n        }\r\n    }\r\n\r\n    private saveLocal(uqName:string, accessValue: any) {\r\n        this.local.uqs[uqName] = {\r\n            value: accessValue,\r\n            isNet: true,\r\n        }\r\n        let str = JSON.stringify(this.local);\r\n        localStorage.setItem(uqLocalEntities, str);\r\n    }\r\n\r\n    async checkAccess(uqApi: UqApi):Promise<boolean> {\r\n        let {uqOwner, uqName} = uqApi;\r\n        let un = uqOwner+'/'+uqName;\r\n        let uq = this.local.uqs[un];\r\n        if (uq === undefined) return false;\r\n        let {isNet, value} = uq;\r\n        if (isNet === true) return true;\r\n        let ret = await uqApi.__loadAccess();\r\n        let isMatch = _.isMatch(value, ret);\r\n        if (isMatch === false) {\r\n            this.saveLocal(un, ret);\r\n            return false;\r\n        }\r\n        uq.isNet = true;\r\n        return true;\r\n    }\r\n}\r\n\r\nconst localUqs = new CacheUqLocals;\r\nexport class UqApi extends ApiBase {\r\n    private access:string[];\r\n    uqOwner: string;\r\n    uqName: string;\r\n    uq: string;\r\n\r\n    constructor(basePath: string, uqOwner: string, uqName: string, access:string[], showWaiting?: boolean) {\r\n        super(basePath, showWaiting);\r\n        if (uqName) {\r\n            this.uqOwner = uqOwner;\r\n            this.uqName = uqName;\r\n            this.uq = uqOwner + '/' + uqName;\r\n        }\r\n        this.access = access;\r\n        this.showWaiting = showWaiting;\r\n    }\r\n\r\n    protected async getHttpChannel(): Promise<HttpChannel> {\r\n        let channels: {[name:string]: HttpChannel};\r\n        let channelUI: HttpChannelNavUI;\r\n        if (this.showWaiting === true || this.showWaiting === undefined) {\r\n            channels = channelUIs;\r\n            channelUI = new HttpChannelNavUI();\r\n        }\r\n        else {\r\n            channels = channelNoUIs;\r\n        }\r\n        let channel = channels[this.uq];\r\n        if (channel !== undefined) return channel;\r\n        let uqToken = await appUq(this.uq, this.uqOwner, this.uqName);\r\n        this.token = uqToken.token;\r\n        channel = new HttpChannel(false, uqToken.url, uqToken.token, channelUI);\r\n        return channels[this.uq] = channel;\r\n    }\r\n\r\n\r\n    async update():Promise<string> {\r\n        return await this.get('update');\r\n    }\r\n\r\n    async __loadAccess():Promise<any> {\r\n        let acc = this.access === undefined?\r\n            '' :\r\n            this.access.join('|');\r\n        let ret = await this.get('access', {acc:acc});\r\n        return ret;\r\n    }\r\n\r\n    async loadAccess():Promise<any> {\r\n        return await localUqs.loadAccess(this);\r\n    }\r\n\r\n    async loadEntities():Promise<any> {\r\n        return await this.get('entities');\r\n    }\r\n\r\n    async checkAccess():Promise<boolean> {\r\n        return await localUqs.checkAccess(this);\r\n    }\r\n\r\n    async schema(name:string):Promise<any> {\r\n        return await this.get('schema/' + name);\r\n    }\r\n\r\n    async schemas(names:string[]):Promise<any[]> {\r\n        return await this.post('schema', names);\r\n    }\r\n\r\n    async tuidGet(name:string, id:number):Promise<any> {\r\n        return await this.get('tuid/' + name + '/' + id);\r\n    }\r\n\r\n    async tuidGetAll(name:string):Promise<any[]> {\r\n        return await this.get('tuid-all/' + name + '/');\r\n    }\r\n\r\n    async tuidSave(name:string, params):Promise<any> {\r\n        return await this.post('tuid/' + name, params);\r\n    }\r\n\r\n    async tuidSearch(name:string, arr:string, owner:number, key:string, pageStart:string|number, pageSize:number):Promise<any> {\r\n        let ret = await this.post('tuids/' + name, {\r\n            arr: arr,\r\n            owner: owner,\r\n            key: key,\r\n            pageStart: pageStart,\r\n            pageSize: pageSize\r\n        });\r\n        return ret;\r\n    }\r\n    async tuidArrGet(name:string, arr:string, owner:number, id:number):Promise<any> {\r\n        return await this.get('tuid-arr/' + name + '/' + owner + '/' + arr + '/' + id);\r\n    }\r\n    async tuidArrGetAll(name:string, arr:string, owner:number):Promise<any[]> {\r\n        return await this.get('tuid-arr-all/' + name + '/' + owner + '/' + arr + '/');\r\n    }\r\n    async tuidArrSave(name:string, arr:string, owner:number, params):Promise<any> {\r\n        return await this.post('tuid-arr/' + name + '/' + owner + '/' + arr + '/', params);\r\n    }\r\n    async tuidArrPos(name:string, arr:string, owner:number, id:number, order:number):Promise<any> {\r\n        return await this.post('tuid-arr-pos/' + name + '/' + owner + '/' + arr + '/', {\r\n            id: id,\r\n            $order: order\r\n        });\r\n    }\r\n\r\n    async tuidIds(name:string, arr:string, ids:number[]):Promise<any[]> {\r\n        try {\r\n            let url = 'tuidids/' + name + '/';\r\n            if (arr !== undefined) url += arr;\r\n            else url += '$';\r\n            let ret = await this.post(url, ids);\r\n            return ret;\r\n        }\r\n        catch (e) {\r\n            console.error(e);\r\n        }\r\n    }\r\n\r\n    async proxied(name:string, proxy:string, id:number):Promise<any> {\r\n        try {\r\n            let url = 'tuid-proxy/' + name + '/' + proxy + '/' + id;\r\n            let ret = await this.get(url);\r\n            return ret;\r\n        }\r\n        catch (e) {\r\n            console.error(e);\r\n        }\r\n    }\r\n\r\n    async sheetSave(name:string, data:object):Promise<any> {\r\n        return await this.post('sheet/' + name, data);\r\n    }\r\n\r\n    async sheetAction(name:string, data:object) {\r\n        return await this.put('sheet/' + name, data);\r\n    }\r\n\r\n    async stateSheets(name:string, data:object) {\r\n        return await this.post('sheet/' + name + '/states', data);\r\n    }\r\n\r\n    async stateSheetCount(name:string):Promise<any> {\r\n        return await this.get('sheet/' + name + '/statecount');\r\n    }\r\n\r\n    async mySheets(name:string, data:object) {\r\n        return await this.post('sheet/' + name + '/my-sheets', data);\r\n    }\r\n\r\n    async getSheet(name:string, id:number):Promise<any> {\r\n        return await this.get('sheet/' + name + '/get/' + id);\r\n    }\r\n\r\n    async sheetArchives(name:string, data:object):Promise<any> {\r\n        return await this.post('sheet/' + name + '/archives', data);\r\n    }\r\n\r\n    async sheetArchive(name:string, id:number):Promise<any> {\r\n        return await this.get('sheet/' + name + '/archive/' + id);\r\n    }\r\n\r\n    async action(name:string, data:object):Promise<any> {\r\n        return await this.post('action/' + name, data);\r\n    }\r\n\r\n    async page(name:string, pageStart:any, pageSize:number, params:any):Promise<string> {\r\n        let p:any;\r\n        switch (typeof params) {\r\n            case 'undefined': p = {key: ''}; break;\r\n            default: p = _.clone(params); break;\r\n        }\r\n        p['$pageStart'] = pageStart;\r\n        p['$pageSize'] = pageSize;\r\n        return await this.post('query-page/' + name, p);\r\n    }\r\n\r\n    async query(name:string, params:any):Promise<any> {\r\n        let ret = await this.post('query/' + name, params);\r\n        return ret;\r\n    }\r\n/*\r\n    async history(name:string, pageStart:any, pageSize:number, params:any):Promise<string> {\r\n        let p = _.clone(params);\r\n        p['$pageStart'] = pageStart;\r\n        p['$pageSize'] = pageSize;\r\n        let ret = await this.post('history/' + name, p);\r\n        return ret;\r\n    }\r\n\r\n    async book(name:string, pageStart:any, pageSize:number, params:any):Promise<string> {\r\n        let p = _.clone(params);\r\n        p['$pageStart'] = pageStart;\r\n        p['$pageSize'] = pageSize;\r\n        let ret = await this.post('history/' + name, p);\r\n        return ret;\r\n    }\r\n*/\r\n    async user():Promise<any> {\r\n        return await this.get('user');\r\n    }\r\n}\r\n\r\nlet channels:{[unitId:number]: HttpChannel} = {};\r\n\r\nexport function logoutUnitxApis() {\r\n    channels = {};\r\n}\r\n\r\nexport class UnitxApi extends UqApi {\r\n    private unitId:number;\r\n    constructor(unitId:number) {\r\n        super('tv/', undefined, undefined, undefined, true);\r\n        this.unitId = unitId;\r\n    }\r\n\r\n    protected async getHttpChannel(): Promise<HttpChannel> {\r\n        let channel = channels[this.unitId];\r\n        if (channel !== undefined) return channel;\r\n        return channels[this.unitId] = await this.buildChannel();\r\n    }\r\n\r\n    private async buildChannel():Promise<HttpChannel> {\r\n        let channelUI = new HttpChannelNavUI();\r\n        let centerAppApi = new CenterAppApi('tv/', undefined);\r\n        let ret = await centerAppApi.unitxUq(this.unitId);\r\n        let {token, url, urlDebug} = ret;\r\n        let realUrl = host.getUrlOrDebug(url, urlDebug);\r\n        this.token = token;\r\n        return new HttpChannel(false, realUrl, token, channelUI);\r\n    }\r\n}\r\n\r\nlet centerHost:string;\r\n\r\nexport function setCenterUrl(url:string) {\r\n    console.log('setCenterUrl %s', url);\r\n    centerHost = url;\r\n    centerToken = undefined;\r\n    centerChannel = undefined;\r\n    centerChannelUI = undefined;\r\n}\r\n\r\nexport let centerToken:string|undefined = undefined;\r\n\r\nlet loginedUserId:number = 0;\r\nexport function setCenterToken(userId:number, t?:string) {\r\n    loginedUserId = userId;\r\n    centerToken = t;\r\n    console.log('setCenterToken %s', t);\r\n    centerChannel = undefined;\r\n    centerChannelUI = undefined;\r\n}\r\n\r\nlet centerChannelUI:HttpChannel;\r\nlet centerChannel:HttpChannel;\r\nfunction getCenterChannelUI():HttpChannel {\r\n    if (centerChannelUI !== undefined) return centerChannelUI;\r\n    return centerChannelUI = new HttpChannel(true, centerHost, centerToken, new HttpChannelNavUI());\r\n}\r\nfunction getCenterChannel():HttpChannel {\r\n    if (centerChannel !== undefined) return centerChannel;\r\n    return centerChannel = new HttpChannel(true, centerHost, centerToken);\r\n}\r\n\r\nexport abstract class CenterApi extends ApiBase {\r\n    constructor(path: string, showWaiting?: boolean) {\r\n        super(path, showWaiting);\r\n    }\r\n\r\n    protected async getHttpChannel(): Promise<HttpChannel> {\r\n        return (this.showWaiting === true || this.showWaiting === undefined)?\r\n            getCenterChannelUI():\r\n            getCenterChannel();\r\n    }\r\n}\r\n\r\nconst uqTokens = 'uqTokens';\r\nexport class UqTokenApi extends CenterApi {\r\n    private local: UqLocals;\r\n    async uq(params: {unit:number, uqOwner:string, uqName:string}):Promise<any> {\r\n        try {\r\n            let {unit:unitParam, uqOwner, uqName} = params;\r\n            if (this.local === undefined) {\r\n                let ls = localStorage.getItem(uqTokens);\r\n                if (ls !== null) {\r\n                    this.local = JSON.parse(ls);\r\n                }\r\n            }\r\n            if (this.local !== undefined) {\r\n                let {unit, user} = this.local;\r\n                if (unit !== unitParam || user !== loginedUserId) this.local = undefined;\r\n            }\r\n            if (this.local === undefined) {\r\n                this.local = {\r\n                    user: loginedUserId,\r\n                    unit: params.unit,\r\n                    uqs: {}\r\n                };\r\n            }\r\n\r\n            let un = uqOwner+'/'+uqName;\r\n            let nowTick = new Date().getTime();\r\n            let uq = this.local.uqs[un];\r\n            if (uq !== undefined) {\r\n                let {tick, value} = uq;\r\n                if (value !== undefined && (nowTick - tick) < 24*3600*1000) {\r\n                    return _.clone(value);\r\n                }\r\n            }\r\n            let ret = await this.get('app-uq', params);\r\n            if (ret === undefined) {\r\n                let {unit, uqOwner, uqName} = params;\r\n                let err = `center get app-uq(unit=${unit}, '${uqOwner}/${uqName}') - not exists or no unit-service`;\r\n                throw err;\r\n            }\r\n\r\n            this.local.uqs[un] = {\r\n                tick: nowTick,\r\n                value: ret,\r\n            }\r\n            localStorage.setItem(uqTokens, JSON.stringify(this.local));\r\n            return _.clone(ret);\r\n        }\r\n        catch (err) {\r\n            this.local = undefined;\r\n            localStorage.removeItem(uqTokens);\r\n            throw err;\r\n        }\r\n    }\r\n}\r\n\r\nexport const uqTokenApi = new UqTokenApi('tv/tie/', undefined);\r\n\r\nexport class CallCenterApi extends CenterApi {\r\n    directCall(url:string, method:string, body:any):Promise<any> {\r\n        return this.call(url, method, body);\r\n    }\r\n}\r\nexport const callCenterapi = new CallCenterApi('', undefined);\r\n\r\nexport interface App {\r\n    id: number;\r\n    uqs: AppUq[];\r\n}\r\n\r\nexport interface AppUq {\r\n    id: number;\r\n    uqOwner: string;\r\n    uqName: string;\r\n    access: string;\r\n}\r\n\r\nexport interface UqService {\r\n    id: number;\r\n    url: string;\r\n    urlDebug: string;\r\n    token: string;\r\n}\r\n\r\nconst appUqs = 'appUqs';\r\n\r\nexport class CenterAppApi extends CenterApi {\r\n    private cachedUqs: App;\r\n    async uqs(appOwner:string, appName:string):Promise<App> {\r\n        let ret:any;\r\n        let ls = localStorage.getItem(appUqs);\r\n        if (ls !== null) {\r\n            let rLs = JSON.parse(ls);\r\n            let {appOwner:rAppOwner, appName:rAppName, value} = rLs;\r\n            if (appOwner === rAppOwner && appName === rAppName) ret = value;\r\n        }\r\n        if (ret === undefined) {\r\n            ret = await this.uqsPure(appOwner, appName);\r\n            let obj = {\r\n                appOwner:appOwner, \r\n                appName:appName, \r\n                value: ret,\r\n            }\r\n            localStorage.setItem(appUqs, JSON.stringify(obj));\r\n        }\r\n        return this.cachedUqs = _.cloneDeep(ret);\r\n    }\r\n    private async uqsPure(appOwner:string, appName:string):Promise<App> {\r\n        return await this.get('tie/app-uqs', {appOwner:appOwner, appName:appName});\r\n    }\r\n    async checkUqs(appOwner:string, appName:string):Promise<boolean> {\r\n        let ret = await this.uqsPure(appOwner, appName);\r\n        let {id:cachedId, uqs:cachedUqs} = this.cachedUqs;\r\n        let {id:retId, uqs:retUqs} = ret;\r\n        if (cachedId !== retId) return false;\r\n        if (cachedUqs.length !== retUqs.length) return false;\r\n        let len = cachedUqs.length;\r\n        for (let i=0; i<len; i++) {\r\n            if (_.isMatch(cachedUqs[i], retUqs[i]) === false) return false;\r\n        }\r\n        return true;\r\n    }\r\n    async unitxUq(unit:number):Promise<UqService> {\r\n        return await this.get('tie/unitx-uq', {unit:unit});\r\n    }\r\n    async changePassword(param: {orgPassword:string, newPassword:string}) {\r\n        return await this.post('tie/reset-password', param);\r\n    }\r\n}\r\n\r\nexport async function loadAppUqs(appOwner:string, appName:string): Promise<App> {\r\n    let centerAppApi = new CenterAppApi('tv/', undefined);\r\n    //let unit = meInFrame.unit;\r\n    let ret = await centerAppApi.uqs(appOwner, appName);\r\n    centerAppApi.checkUqs(appOwner, appName).then(v => {\r\n        if (v === false) {\r\n            localStorage.removeItem(appUqs);\r\n            nav.start();\r\n        }\r\n    });\r\n    return ret;\r\n}\r\n","import * as React from 'react';\r\nimport classNames from 'classnames';\r\nimport { Controller } from 'tonva-tools';\r\n\r\nexport abstract class Link {\r\n    abstract onClick: () => void;\r\n    abstract render(className?:string):JSX.Element;\r\n}\r\n\r\nexport class CLink extends Link {\r\n    private controller: Controller;\r\n    protected icon:string|JSX.Element;\r\n    protected label:string|JSX.Element;\r\n\r\n    constructor(controller:Controller) {\r\n        super();\r\n        this.controller = controller;\r\n        this.icon = controller.icon;\r\n        this.label = controller.label;\r\n    }\r\n\r\n    onClick = async () => {\r\n        await this.controller.start();\r\n    }\r\n\r\n    render(className?:string) {\r\n        return <div\r\n            className={classNames('px-3', 'py-2', 'align-items-center', 'cursor-pointer', className)}\r\n            onClick={this.onClick}>\r\n            {this.icon} &nbsp; {this.label}\r\n        </div>;\r\n        //return React.createElement(this.view, className);\r\n    }\r\n}\r\n","export * from './cLink';\r\n","\r\nlet subAppWindow:Window;\r\nfunction postWsToSubApp(msg:any) {\r\n    if (subAppWindow === undefined) return;\r\n    subAppWindow.postMessage({\r\n        type: 'ws',\r\n        msg: msg\r\n    }, '*');\r\n}\r\n\r\nexport function setSubAppWindow(win:Window) {\r\n    subAppWindow = win;\r\n}\r\n\r\nexport function postWsToTop(msg:any) {\r\n    window.top.postMessage({\r\n        type: 'ws',\r\n        msg: msg\r\n    }, '*');\r\n}\r\n\r\nexport abstract class WsBase {\r\n    wsBaseId:string;\r\n    private handlerSeed = 1;\r\n    private anyHandlers:{[id:number]:(msg:any)=>Promise<void>} = {};\r\n    private msgHandlers:{[id:number]:{type:string, handler:(msg:any)=>Promise<void>}} = {};\r\n    onWsReceiveAny(handler:(msg:any)=>Promise<void>):number {\r\n        let seed = this.handlerSeed++;\r\n        this.anyHandlers[seed] = handler;\r\n        return seed;\r\n    }\r\n    onWsReceive(type:string, handler:(msg:any)=>Promise<void>):number {\r\n        let seed = this.handlerSeed++;\r\n        this.msgHandlers[seed] = {type:type, handler: handler};\r\n        return seed;\r\n    }\r\n    endWsReceive(handlerId:number) {\r\n        delete this.anyHandlers[handlerId];\r\n        delete this.msgHandlers[handlerId];\r\n    }\r\n    async receive(msg:any) {\r\n        let {$type} = msg;\r\n        for (let i in this.anyHandlers) {\r\n            await this.anyHandlers[i](msg);\r\n        }\r\n        for (let i in this.msgHandlers) {\r\n            let {type, handler} = this.msgHandlers[i];\r\n            if (type !== $type) continue;\r\n            await handler(msg);\r\n        }\r\n    }\r\n}\r\n\r\nlet wsBaseSeed = 1;\r\nexport class WsBridge extends WsBase {\r\n    wsBaseId:string = 'WsBridge seed ' + wsBaseSeed++;\r\n}\r\n\r\nexport const wsBridge = new WsBridge();\r\n\r\nexport class WSChannel extends WsBase {\r\n    wsBaseId:string = 'WSChannel seed ' + wsBaseSeed++;\r\n    static centerToken:string;\r\n    private wsHost: string;\r\n    private token: string;\r\n    private ws: WebSocket;\r\n\r\n    constructor(wsHost: string, token: string) {\r\n        super();\r\n        this.wsHost = wsHost;\r\n        this.token = token;\r\n    }\r\n\r\n    static setCenterToken(token?: string) {\r\n        WSChannel.centerToken = token;\r\n    }\r\n    \r\n    connect():Promise<void> {\r\n        //this.wsHost = wsHost;\r\n        //this.token = token || WSChannel.centerToken;\r\n        if (this.ws !== undefined) return;\r\n        let that = this;\r\n        return new Promise((resolve, reject) => {\r\n            let ws = new WebSocket(this.wsHost, this.token || WSChannel.centerToken);\r\n            console.log('connect webSocket %s', this.wsHost);\r\n            ws.onopen = (ev) => {\r\n                console.log('webSocket connected %s', this.wsHost);\r\n                that.ws = ws;\r\n                resolve();\r\n            };\r\n            ws.onerror = (ev) => {\r\n                reject('webSocket can\\'t open!');\r\n            };\r\n            ws.onmessage = async (msg) => await that.wsMessage(msg);\r\n            ws.onclose = (ev) => {\r\n                that.ws = undefined;\r\n                console.log('webSocket closed!');\r\n            }\r\n        });\r\n    }\r\n    close() {\r\n        if (this.ws !== undefined) {\r\n            this.ws.close();\r\n            this.ws = undefined;\r\n        }\r\n    }\r\n    private async wsMessage(event:any):Promise<void> {\r\n        try {\r\n            console.log('websocket message: %s', event.data);\r\n            let msg = JSON.parse(event.data);\r\n            postWsToSubApp(msg);\r\n            await this.receive(msg);\r\n        }\r\n        catch (err) {\r\n            console.log('ws msg error: ', err);\r\n        }\r\n    }\r\n    sendWs(msg:any) {\r\n        let netThis = this;\r\n        this.connect().then(() => {\r\n            netThis.ws.send(msg);\r\n        });\r\n    }\r\n}\r\n","const ALPHABET = '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ';\r\nconst ID_LENGTH = 8;\r\n\r\nexport function uid():string {\r\n    let len = ALPHABET.length;\r\n    let rtn = '';\r\n    for (let i = 0; i < ID_LENGTH; i++) {\r\n        rtn += ALPHABET.charAt(Math.floor(Math.random() * len));\r\n    }\r\n    return rtn;\r\n}\r\n","import * as React from 'react';\r\nimport classNames from 'classnames';\r\nimport { nav } from './nav';\r\n\r\nexport interface ImageProps {\r\n    src: string;\r\n    className?: string;\r\n    style?: React.CSSProperties;\r\n    altImage?: string;\r\n}\r\n\r\nexport function Image(props: ImageProps) {\r\n    let {className, style, src, altImage} = props;\r\n    if (!src) {\r\n        return <div className={classNames(className, 'image-none')} style={style}>\r\n            <i className=\"fa fa-file-o\" />\r\n        </div>;\r\n    }\r\n    if (src.startsWith(':') === true) {\r\n        src = nav.resUrl + src.substr(1);\r\n    }\r\n    return <img src={src} className={className} \r\n        style={style}\r\n        onError={evt=>evt.currentTarget.src=altImage} />;\r\n}\r\n","export const isDevelopment = process.env.NODE_ENV === 'development';\r\n\r\nconst centerHost = process.env['REACT_APP_CENTER_HOST'];\r\nconst centerDebugHost = 'localhost:3000'; //'192.168.86.64';\r\nconst resHost = process.env['REACT_APP_RES_HOST'] || centerHost;\r\nconst resDebugHost = 'localhost:3015'; //'192.168.86.63';\r\nconst uqDebugHost = 'localhost:3015'; //'192.168.86.63';\r\nconst uqDebugBuilderHost = 'localhost:3009';\r\ninterface HostValue {\r\n    value: string;\r\n    local: boolean;\r\n}\r\nconst hosts:{[name:string]:HostValue} = {\r\n    centerhost: {\r\n        value: process.env['REACT_APP_CENTER_DEBUG_HOST'] || centerDebugHost, \r\n        local: false\r\n    },\r\n    reshost: {\r\n        value: process.env['REACT_APP_RES_DEBUG_HOST'] || resDebugHost,\r\n        local: false\r\n    },\r\n    uqhost: {\r\n        value: process.env['REACT_APP_UQ_DEBUG_HOST'] || uqDebugHost, \r\n        local: false\r\n    },\r\n    unitxhost: {\r\n        value: process.env['REACT_APP_UQ_DEBUG_HOST'] || uqDebugHost, \r\n        local: false\r\n    },\r\n    \"uq-build\": {\r\n        value: process.env['REACT_APP_UQ_DEBUG_BUILDER_HOST'] || uqDebugBuilderHost, \r\n        local: false\r\n    }\r\n}\r\n\r\nfunction centerUrlFromHost(host:string) {return `http://${host}/`}\r\nfunction centerWsFromHost(host:string) {return `ws://${host}/tv/`}\r\n\r\nconst fetchOptions = {\r\n    method: \"GET\",\r\n    mode: \"no-cors\", // no-cors, cors, *same-origin\r\n    headers: {\r\n        \"Content-Type\": \"text/plain\"\r\n    },\r\n};\r\n\r\nclass Host {\r\n    url: string;\r\n    ws: string;\r\n    resHost: string;\r\n\r\n    async start() {\r\n        if (isDevelopment === true) {\r\n            await this.tryLocal();\r\n        }\r\n        let host = this.getCenterHost();\r\n        this.url = centerUrlFromHost(host);\r\n        this.ws = centerWsFromHost(host);\r\n        this.resHost = this.getResHost();\r\n    }\r\n\r\n    private debugHostUrl(host:string) {return `http://${host}/hello`}\r\n    private async tryLocal() {\r\n        let promises:PromiseLike<any>[] = [];\r\n        let hostArr:string[] = [];\r\n        for (let i in hosts) {\r\n            let hostValue = hosts[i];\r\n            let {value} = hostValue;\r\n            if (hostArr.findIndex(v => v === value) < 0) hostArr.push(value);\r\n        }\r\n\r\n        for (let host of hostArr) {\r\n            let fetchUrl = this.debugHostUrl(host);\r\n            promises.push(localCheck(fetchUrl));\r\n        }\r\n        let results = await Promise.all(promises);\r\n        let len = hostArr.length;\r\n        for (let i=0; i<len; i++) {\r\n            let local = results[i];\r\n            let host = hostArr[i];\r\n            for (let j in hosts) {\r\n                let hostValue = hosts[j];\r\n                if (hostValue.value === host) {\r\n                    hostValue.local = local;\r\n                }\r\n            }\r\n        }\r\n        /*\r\n        let p = 0;\r\n        for (let i in hosts) {\r\n            let hostValue = hosts[i];\r\n            hostValue.local = results[p];\r\n            ++p;\r\n        }\r\n        */\r\n    }\r\n\r\n    private getCenterHost():string {\r\n        let {value, local} = hosts.centerhost;\r\n        let hash = document.location.hash;\r\n        if (hash.includes('sheet_debug') === true) {\r\n            return value;\r\n        }\r\n        if (isDevelopment === true) {\r\n            if (local === true) return value;\r\n        }\r\n        return centerHost;\r\n    }\r\n\r\n    private getResHost():string {\r\n        let {value, local} = hosts.reshost;\r\n        let hash = document.location.hash;\r\n        if (hash.includes('sheet_debug') === true) {\r\n            return value;\r\n        }\r\n        if (isDevelopment === true) {\r\n            if (local === true) return value;\r\n        }\r\n        return resHost;\r\n    }\r\n\r\n    getUrlOrDebug(url:string, urlDebug:string):string {\r\n        if (isDevelopment !== true) return url;\r\n        if (!urlDebug) return url;\r\n        for (let i in hosts) {\r\n            let host = hosts[i];\r\n            let {value, local} = host;\r\n            let hostString = `://${i}/`;\r\n            let pos = urlDebug.indexOf(hostString);\r\n            if (pos > 0) {\r\n                if (local === false) return url;\r\n                urlDebug = urlDebug.replace(hostString, `://${value}/`);\r\n                return urlDebug;\r\n            }\r\n        }\r\n        return url;\r\n    }\r\n\r\n    async localCheck(urlDebug: string):Promise<boolean> {\r\n        return await localCheck(urlDebug);\r\n    }\r\n}\r\n\r\nexport const host:Host = new Host();\r\n\r\n// 因为测试的都是局域网服务器，甚至本机服务器，所以一秒足够了\r\n// 网上找了上面的fetch timeout代码。\r\n// 尽管timeout了，fetch仍然继续，没有cancel\r\n\r\n// 实际上，一秒钟不够。web服务器会自动停。重启的时候，可能会比较长时间。也许两秒甚至更多。\r\n//const timeout = 2000;\r\nconst timeout = 200;\r\n\r\nfunction fetchLocalCheck(url:string):Promise<any> {\r\n    return new Promise((resolve, reject) => {\r\n      fetch(url, fetchOptions as any)\r\n      .then(v => {\r\n          v.text().then(resolve).catch(reject);\r\n      })\r\n      .catch(reject);\r\n      const e = new Error(\"Connection timed out\");\r\n      setTimeout(reject, timeout, e);\r\n    });\r\n}\r\n\r\nasync function localCheck(url:string):Promise<boolean> {\r\n    try {\r\n        await fetchLocalCheck(url);\r\n        return true;\r\n    }\r\n    catch (err) {\r\n        return false;\r\n    }\r\n}\r\n","import jwtDecode from 'jwt-decode';\r\n\r\nexport interface Unit {\r\n    id: number;\r\n    name: string;\r\n}\r\n\r\nexport interface Guest {\r\n    id: number;             // id = 0\r\n    guest: number;\r\n    token: string;\r\n}\r\n\r\nexport interface User extends Guest {\r\n    id: number;\r\n    name: string;\r\n    nick?: string;\r\n    icon?: string;\r\n}\r\n\r\n/*\r\nexport class UserInNav {\r\n    private user: User;\r\n    constructor(user: User) {\r\n        this.user = user;\r\n    }\r\n    get id():number {return this.user.id}\r\n    get name(): string {return this.user.name}\r\n    get nick(): string {return this.user.nick}\r\n    get icon(): string {return this.user.icon || ('http://' + process.env['REACT_APP_CENTER_HOST'] + '/imgs/Bear-icon.png');}\r\n    get guest(): number {return this.user.guest}\r\n    get token(): string {return this.user.token}\r\n}\r\n*/\r\nexport function decodeUserToken(token: string): User {\r\n    let ret:any = jwtDecode(token);\r\n    let user: User = {\r\n        id: ret.id,\r\n        name: ret.name,\r\n        guest: ret.guest,\r\n        token: token,\r\n    };\r\n    return user;\r\n}\r\n\r\nexport function decodeGuestToken(token: string): Guest {\r\n    let ret:any = jwtDecode(token);\r\n    let guest: Guest = {\r\n        id: 0,\r\n        guest: ret.guest,\r\n        token: token,\r\n    };\r\n    return guest;\r\n}\r\n","import * as React from 'react';\r\nimport { Schema, UiSchema, ItemSchema, UiItem, UiTextItem } from '../schema';\r\nimport { nav } from '../nav';\r\nimport { Page } from '../page';\r\nimport { observer } from 'mobx-react';\r\nimport { observable } from 'mobx';\r\nimport { Rule, FieldRule } from '../form/rules';\r\n\r\nexport abstract class ItemEdit {\r\n    protected name: string;\r\n    protected itemSchema: ItemSchema;\r\n    protected uiItem:UiItem;\r\n    protected value: any;\r\n    protected label: string;\r\n\r\n    @observable protected error: string;\r\n    @observable protected isChanged: boolean = false;\r\n    protected newValue: any;\r\n\r\n    constructor(itemSchema: ItemSchema, uiItem:UiItem, label:string, value: any) {\r\n        this.itemSchema = itemSchema;\r\n        this.uiItem = uiItem\r\n        this.value = value;\r\n        let {name} = itemSchema;\r\n        this.name = name;\r\n        this.label = label;\r\n    }\r\n    async start():Promise<any> {\r\n        return await this.internalStart();\r\n    }\r\n\r\n    protected abstract internalStart():Promise<any>;\r\n\r\n    async end():Promise<any> {\r\n        await this.internalEnd()\r\n    }\r\n\r\n    protected async internalEnd():Promise<void> {nav.pop()}\r\n\r\n    protected verifyValue() {\r\n        if (this.uiItem === undefined) return;\r\n        let {rules} = this.uiItem;\r\n        if (rules === undefined) return;\r\n        let nv = this.newValue;\r\n        function verifyRule(rule:FieldRule, value: any):string {\r\n            let error = rule(nv);\r\n            if (error !== undefined) {\r\n                if (typeof error !== 'object')\r\n                    return error;\r\n                else\r\n                    return JSON.stringify(error);\r\n            }\r\n        }\r\n        if (Array.isArray(rules)) {\r\n            for (let rule of rules) {\r\n                let error = verifyRule(rule as FieldRule, nv);\r\n                if (error !== undefined) {\r\n                    this.error = error;\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            this.error = verifyRule(rules as FieldRule, nv);\r\n        }\r\n    }\r\n}\r\n","const ALPHABET = '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ';\r\nconst ID_LENGTH = 8;\r\n\r\nexport function uid():string {\r\n    let len = ALPHABET.length;\r\n    let rtn = '';\r\n    for (let i = 0; i < ID_LENGTH; i++) {\r\n        rtn += ALPHABET.charAt(Math.floor(Math.random() * len));\r\n    }\r\n    return rtn;\r\n}\r\n","import * as React from 'react';\r\nimport { SearchBox, List, Muted, LMR } from 'tonva-react-form';\r\nimport { TuidMain, Entity } from '../../entities';\r\nimport { Page } from 'tonva-tools';\r\nimport { CLink } from '../link';\r\nimport { VEntity } from '../CVEntity';\r\nimport { CTuidMain, TuidUI } from './cTuid';\r\n\r\nexport class VTuidMain extends VEntity<TuidMain, TuidUI, CTuidMain> {\r\n    protected controller: CTuidMain;\r\n    onNew = () => this.event('new');\r\n    onList = () => this.event('list');\r\n    onSearch = async (key:string) => this.event('list', key);\r\n\r\n    async open(param?:any):Promise<void> {\r\n        this.openPage(this.view);\r\n    }\r\n\r\n    protected entityRender(link: CLink, index: number): JSX.Element {\r\n        return link.render();\r\n    }\r\n\r\n    protected async entityClick(link: CLink) {\r\n        await link.onClick();\r\n    }\r\n\r\n    protected get view() {\r\n        let {label, proxyLinks, isFrom} = this.controller;\r\n        let newButton:any;\r\n        if (isFrom === false) newButton = <button className=\"btn btn-outline-success ml-2\" onClick={this.onNew}>新增</button>;\r\n        let content:any;\r\n        if (proxyLinks === undefined) {\r\n            let right = <>\r\n                {newButton}\r\n                <button className=\"btn btn-outline-info ml-2\" onClick={this.onList}>全部</button>\r\n            </>;\r\n            content = <LMR className='m-3' right={right}>\r\n                <SearchBox className=\"w-100\" size=\"md\"\r\n                    onSearch={this.onSearch} \r\n                    placeholder={'搜索'+label} />\r\n            </LMR>;\r\n        }\r\n        else {\r\n            content = <List className=\"my-2\"\r\n                header={<Muted>{label} 代理下列Tuid</Muted>}\r\n                items={proxyLinks}\r\n                item={{render: this.entityRender, onClick:this.entityClick}} />\r\n        }\r\n        return () => <Page header={label}>\r\n            {content}\r\n        </Page>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { FA } from 'tonva-react-form';\r\nimport { Page } from 'tonva-tools';\r\nimport { VForm } from '../form';\r\nimport { VEntity } from '../CVEntity';\r\nimport { CTuidMain, TuidUI } from './cTuid';\r\nimport { TuidMain, Tuid } from '../../entities';\r\n\r\nexport type TypeVTuidEdit = typeof VTuidEdit;\r\n\r\nexport class VTuidEdit extends VEntity<Tuid, TuidUI, CTuidMain> {\r\n    private vForm: VForm;\r\n    private id: number;\r\n\r\n    async open(param?:any):Promise<void> {\r\n        this.vForm = this.createForm(this.onSubmit, param);\r\n        if (param !== undefined) {\r\n            this.id = param.id;\r\n        }\r\n        this.openPage(this.editView);\r\n    }\r\n\r\n    protected get editView() {\r\n        return () => <Page header={(this.id===undefined? '新增':'编辑') + ' - ' + this.label}>\r\n            {this.vForm.render('py-3')}\r\n        </Page>;\r\n    }\r\n\r\n    protected next = async () => {\r\n        this.vForm.reset();\r\n        this.closePage();\r\n    }\r\n\r\n    protected finish = () => {\r\n        this.closePage(2);\r\n        this.event('edit-end');\r\n    }\r\n\r\n    protected resetForm() {\r\n        this.vForm.reset();\r\n    }\r\n\r\n    protected onSubmit = async () => {\r\n        let values = this.vForm.getValues();\r\n        let ret = await this.controller.entity.save(this.id, values);\r\n        let {id} = ret;\r\n        if (id < 0) {\r\n            let {unique} = this.controller.entity;\r\n            if (unique !== undefined) {\r\n                for (let u of unique) {\r\n                    this.vForm.setError(u, '不能重复');\r\n                }\r\n            }\r\n            return;\r\n        }\r\n        if (this.controller.isCalling) {\r\n            this.returnCall(id);\r\n            this.closePage();\r\n            return;\r\n        }\r\n        this.openPageElement(<Page header={this.label + '提交成功'} back=\"none\">\r\n            <div className='m-3'>\r\n                <span className=\"text-success\">\r\n                    <FA name='check-circle' size='lg' /> 成功提交！\r\n                </span>\r\n                <div className='mt-5'>\r\n                    <button className=\"btn btn-primary mr-3\" onClick={this.next}>继续录入</button>\r\n                    <button className=\"btn btn-outline-primary\" onClick={this.finish}>不继续</button>\r\n                </div>\r\n            </div>\r\n        </Page>);\r\n\r\n        this.event('item-changed', {id: this.id, values: values});\r\n        return;\r\n    }\r\n\r\n    //protected view = TuidNewPage;\r\n}\r\n/*\r\nconst TuidNewPage = observer(({vm}:{vm:VmTuidEdit}) => {\r\n    let {label, id, vmForm} = vm;\r\n    return <Page header={(id===undefined? '新增':'编辑') + ' - ' + label}>\r\n        {vmForm.render('mx-3 my-2')}\r\n    </Page>;\r\n});\r\n*/","import { nav, Page } from 'tonva-tools';\r\nimport { VTuidMainListBase, VTuidDivListBase } from './vTuidList';\r\nimport { VEntity } from '../CVEntity';\r\nimport { Tuid } from '../../entities';\r\nimport { CTuid, TuidUI } from './cTuid';\r\nimport { SearchBox, List } from 'tonva-react-form';\r\nimport React from 'react';\r\nimport { RowContent } from '../form/viewModel';\r\nimport { observer } from 'mobx-react';\r\n\r\nexport class VTuidSelect extends VEntity<Tuid, TuidUI, CTuid<Tuid>> {\r\n    protected mainRowContent: (row:any) => JSX.Element;\r\n    protected divRowContent: (row:any) => JSX.Element;\r\n\r\n    async open(param?:any): Promise<void> {\r\n        if (param === undefined)\r\n            await this.showMain(param);\r\n        else\r\n            await this.showDiv(param);\r\n    }\r\n\r\n    private async showMain(param) {\r\n        this.mainRowContent = this.ui.rowContent || RowContent;\r\n        await this.controller.searchMain(param);\r\n        this.openPage(this.mainView);\r\n    }\r\n\r\n    private async showDiv(ownerValue: any) {\r\n        let {divs} = this.ui;\r\n        if (divs !== undefined) {\r\n            this.divRowContent = divs[this.entity.name].rowContent;\r\n        }\r\n        if (this.divRowContent === undefined) {\r\n            this.divRowContent = RowContent;\r\n        }\r\n        let divItems = await this.controller.getDivItems(ownerValue);\r\n        this.openPage(this.divView, {items: divItems});\r\n    }\r\n\r\n    protected mainView = observer(() => {\r\n        let header = <SearchBox className=\"mx-1 w-100\"\r\n            initKey={''}\r\n            onSearch={this.onSearchMain} placeholder={'搜索'+this.label} />;\r\n        return <Page header={header} back=\"close\">\r\n            <List\r\n                items={this.controller.PageItems.items}\r\n                item={{render: this.renderMainRow, onClick: this.clickMainRow}}\r\n                before={'搜索'+this.label+'资料'} />\r\n        </Page>;\r\n    });\r\n\r\n    onSearchMain = async (key:string) => {\r\n        await this.controller.searchMain(key);\r\n        //await this.PageItems.first(key);\r\n    }\r\n    renderMainRow = (item:any, index:number):JSX.Element => <this.mainRowContent {...item} />;\r\n    clickMainRow = async (item:any) => {\r\n        this.ceasePage();\r\n        if (this.controller.entity.owner === undefined) {\r\n            this.returnCall(item);\r\n            return;\r\n        }\r\n        await this.showDiv(this.entity.getIdFromObj(item));\r\n    }\r\n\r\n    protected divView = (param:any) => {\r\n        return <Page header=\"选择Div\">\r\n            <List\r\n                items={param.items}\r\n                item={{render: this.renderDivRow, onClick: this.clickDivRow}} />\r\n        </Page>;\r\n    }\r\n    renderDivRow = (item:any, index:number):JSX.Element => <this.divRowContent {...item} />;\r\n    clickDivRow = (item:any) => {\r\n        this.ceasePage();\r\n        this.returnCall(item);\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport { FA } from 'tonva-react-form';\r\nimport { Page } from 'tonva-tools';\r\nimport { jsonStringify } from '../../tools';\r\nimport { VForm } from '../form';\r\nimport { VEntity } from '../CVEntity';\r\nimport { TuidMain } from '../../entities';\r\nimport { TuidUI, CTuidMain } from './cTuid';\r\n\r\nexport type TypeVTuidView = typeof VTuidView;\r\n\r\nexport class VTuidView extends VEntity<TuidMain, TuidUI, CTuidMain> {\r\n    vForm: VForm;\r\n    id: number;\r\n\r\n    protected buildForm(param:any) {\r\n        this.vForm = this.createForm(undefined, param);\r\n    }\r\n\r\n    async open(param:any) {\r\n        this.buildForm(param);\r\n        this.openPage(this.view);\r\n    }\r\n\r\n    render(param:any) {\r\n        this.buildForm(param);\r\n        return this.vForm.render();\r\n    }\r\n\r\n    async loadId(id: number) {\r\n        this.id = id;\r\n    }\r\n\r\n    protected next = async () => {\r\n        this.vForm.reset();\r\n        this.closePage();\r\n    }\r\n\r\n    protected finish = () => {\r\n        this.closePage(2);\r\n    }\r\n\r\n    protected resetForm() {\r\n        this.vForm.reset();\r\n    }\r\n\r\n    protected onSubmit = async () => {\r\n        let values = this.vForm.getValues();\r\n        let ret = await this.entity.save(this.id, values);\r\n        if (ret) {\r\n            alert('这里还要判断返回值，先不处理了 \\n' + jsonStringify(ret));\r\n        }\r\n        this.openPage(() => <Page header={this.label + '提交成功'} back=\"none\">\r\n            <div className='m-3'>\r\n                <span className=\"text-success\">\r\n                    <FA name='check-circle' size='lg' /> 成功提交！\r\n                </span>\r\n                <div className='mt-5'>\r\n                    <button className=\"btn btn-primary mr-3\" onClick={this.next}>继续录入</button>\r\n                    <button className=\"btn btn-outline-primary\" onClick={this.finish}>不继续</button>\r\n                </div>\r\n            </div>\r\n        </Page>);\r\n        return;\r\n    }\r\n\r\n    protected view = () => <Page header={this.label}>\r\n            {this.vForm.render('py-3')}\r\n    </Page>;\r\n}\r\n","import React from 'react';\r\nimport { VTuidView } from './vTuidView';\r\n\r\nexport class VTuidInfo  extends VTuidView {\r\n/*\r\n    async open(param?:any) {\r\n        this.open(this.view);\r\n    }\r\n*/\r\n/*\r\n    private view = () => {\r\n        return <Page>\r\n            TuidInfo\r\n        </Page>\r\n    }\r\n*/\r\n}\r\n","import { PageItems } from 'tonva-tools';\r\nimport { Tuid } from \"../../entities\";\r\n\r\nexport class TuidPageItems<T> extends PageItems<T> {\r\n    private tuid: Tuid;\r\n    constructor(tuid: Tuid) {\r\n        super(true);\r\n        this.tuid = tuid;\r\n    }\r\n    protected async load(param:any, pageStart:any, pageSize:number):Promise<any[]> {\r\n        let ret = await this.tuid.search(param, pageStart, pageSize);\r\n        return ret;\r\n    }\r\n    protected setPageStart(item:any) {\r\n        this.pageStart = item === undefined? 0 : item.id;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport { FA, SearchBox, List } from 'tonva-react-form';\r\nimport { Page, PageItems } from 'tonva-tools';\r\nimport { jsonStringify } from '../../tools';\r\nimport { TuidMain, Entity, Tuid, TuidDiv } from '../../entities';\r\nimport { VEntity } from '../CVEntity';\r\nimport { TuidUI, CTuidMain, CTuidDiv } from './cTuid';\r\nimport { JSONContent, RowContent } from '../form/viewModel';\r\n\r\nexport abstract class VTuidMainListBase  extends VEntity<TuidMain, TuidUI, CTuidMain> {\r\n    protected rowContent: (row:any) => JSX.Element;\r\n    protected ownerId: number;\r\n\r\n    async open(param?:any) {\r\n        this.rowContent = this.ui.rowContent || RowContent;\r\n        if (this.entity.owner !== undefined) this.ownerId = Number(param);\r\n        // 初始查询, key是空的\r\n        //await this.onSearch('');\r\n        await this.controller.searchMain('');\r\n        this.openPage(this.view);\r\n    }\r\n\r\n    onSearch = async (key:string) => {\r\n        await this.controller.searchMain(key);\r\n        //await this.PageItems.first(key);\r\n    }\r\n    renderRow = (item:any, index:number):JSX.Element => <this.rowContent {...item} />;\r\n\r\n    protected abstract onSelected(item:any): Promise<void>;\r\n    private callOnSelected(item:any) {\r\n        if (this.onSelected === undefined) {\r\n            alert('onSelect is undefined');\r\n            return;\r\n        }\r\n        this.onSelected(item);\r\n    }\r\n    clickRow = (item:any) => {\r\n        this.callOnSelected(item);\r\n    }\r\n    private rowKey = (item:any) => {\r\n        let {id} = item;\r\n        return id;\r\n    }\r\n    protected view = observer(() => {\r\n        let header = <SearchBox className=\"mx-1 w-100\"\r\n            initKey={''}\r\n            onSearch={this.onSearch} placeholder={'搜索'+this.label} />;\r\n        let {owner} = this.entity;\r\n        let ownerTop;\r\n        if (owner !== undefined) {\r\n            let ownerObj = owner.valueFromId(this.ownerId);\r\n            ownerTop = <div>owner: {jsonStringify(ownerObj)}</div>;\r\n        }\r\n        return <Page header={header}>\r\n            {ownerTop}\r\n            <List\r\n                items={this.controller.PageItems.items}\r\n                item={{render: this.renderRow, onClick: this.clickRow, key:this.rowKey}}\r\n                before={'搜索'+this.label+'资料'} />\r\n        </Page>;\r\n    });\r\n}\r\n\r\nexport class VTuidMainList extends VTuidMainListBase {\r\n    protected async onSelected(item:any) {\r\n        if (this.controller.isFrom === false)\r\n            this.event('edit', item.id);\r\n        else\r\n            this.event('info', item.id);\r\n    }\r\n}\r\n\r\nexport abstract class VTuidDivListBase  extends VEntity<TuidDiv, TuidUI, CTuidDiv> {\r\n    protected ownerId: number;\r\n\r\n    async open(param?:any) {\r\n        //this.PageItems = new TuidPageItems(this.entity);\r\n        if (this.entity.owner !== undefined) this.ownerId = Number(param);\r\n        // 初始查询, key是空的\r\n        //await this.onSearch('');\r\n        await this.controller.searchMain('');\r\n        this.openPage(this.view);\r\n    }\r\n\r\n    onSearch = async (key:string) => {\r\n        await this.controller.searchMain(key);\r\n        //await this.PageItems.first(key);\r\n    }\r\n    renderRow = (item:any, index:number):JSX.Element => {\r\n        return <div className=\"px-3 py-2\">{jsonStringify(item)}</div>;\r\n    }\r\n\r\n    protected abstract onSelected(item:any): Promise<void>;\r\n    private callOnSelected(item:any) {\r\n        if (this.onSelected === undefined) {\r\n            alert('onSelect is undefined');\r\n            return;\r\n        }\r\n        this.onSelected(item);\r\n    }\r\n    clickRow = (item:any) => {\r\n        this.callOnSelected(item);\r\n    }\r\n\r\n    protected view = observer(() => {\r\n        let header = <SearchBox className=\"mx-1 w-100\"\r\n            initKey={''}\r\n            onSearch={this.onSearch} placeholder={'搜索'+this.label} />;\r\n        let {owner} = this.entity;\r\n        let ownerTop;\r\n        if (owner !== undefined) {\r\n            let ownerObj = owner.valueFromId(this.ownerId);\r\n            ownerTop = <div>owner: {jsonStringify(ownerObj)}</div>;\r\n        }\r\n        return <Page header={header}>\r\n            {ownerTop}\r\n            <List\r\n                items={this.controller.PageItems.items}\r\n                item={{render: this.renderRow, onClick: this.clickRow}}\r\n                before={'搜索'+this.label+'资料'} />\r\n        </Page>;\r\n    });\r\n}\r\n\r\nexport class VTuidDivList extends VTuidDivListBase {\r\n    protected async onSelected(item:any) {\r\n        this.event('edit', item.id);\r\n    }\r\n}\r\n","import _ from 'lodash';\r\nimport { TypeVPage, PageItems } from 'tonva-tools';\r\nimport { CEntity, EntityUI } from \"../CVEntity\";\r\nimport { TuidMain, Tuid, TuidDiv } from \"../../entities\";\r\nimport { VTuidMain } from './vTuidMain';\r\nimport { VTuidEdit } from './vTuidEdit';\r\nimport { VTuidSelect } from './vTuidSelect';\r\nimport { CUq } from \"../uq/cUq\";\r\nimport { CLink } from \"../link\";\r\nimport { VTuidInfo } from \"./vTuidInfo\";\r\nimport { TuidPageItems } from \"./pageItems\";\r\nimport { VTuidMainList } from './vTuidList';\r\n\r\nexport interface TuidUI extends EntityUI {\r\n    CTuidMain?: typeof CTuidMain;\r\n    CTuidEdit?: typeof CTuidEdit;\r\n    CTuidList?: typeof CTuidList;\r\n\r\n    CTuidSelect?: typeof CTuidSelect;\r\n    CTuidInfo?: typeof CTuidInfo;\r\n    content?: React.StatelessComponent<any>;\r\n    rowContent?: React.StatelessComponent<any>;\r\n    divs?: {\r\n        [div:string]: {\r\n            CTuidSelect?: typeof CTuidSelect;\r\n            content?: React.StatelessComponent<any>;\r\n            rowContent?: React.StatelessComponent<any>;\r\n        }\r\n    }\r\n}\r\n\r\nexport abstract class CTuid<T extends Tuid> extends CEntity<T, TuidUI> {\r\n    PageItems:PageItems<any>;\r\n\r\n    protected buildPageItems():PageItems<any> {\r\n        return new TuidPageItems(this.entity.owner || this.entity);\r\n    }\r\n\r\n    async searchMain(key:string) {\r\n        if (this.PageItems === undefined) {\r\n            this.PageItems = this.buildPageItems();\r\n        }\r\n        if (key !== undefined) await this.PageItems.first(key);\r\n    }\r\n\r\n    async getDivItems(ownerId:number):Promise<any[]> {\r\n        let ret = await this.entity.searchArr(ownerId, undefined, 0, 1000);\r\n        return ret;\r\n    }\r\n}\r\n\r\nexport abstract class CTuidBase extends CTuid<TuidMain> {\r\n    constructor(cUq: CUq, entity: TuidMain, ui: TuidUI, res:any) {\r\n        super(cUq, entity, ui, res);\r\n        //let tuid = this.entity;\r\n        //this.proxies = tuid.proxies;\r\n        if (this.proxies !== undefined) {\r\n            this.proxyLinks = [];\r\n            for (let i in this.proxies) {\r\n                let link = this.cUq.linkFromName('tuid', i);\r\n                this.proxyLinks.push(link);\r\n            }\r\n        }\r\n    }\r\n\r\n    from():CTuidBase {\r\n        let ret = this.entity.cFrom();\r\n        if (ret === undefined) return this;\r\n        return ret;\r\n    }\r\n\r\n    cUqFrom():CUq {\r\n        return this.entity.cUqFrom();\r\n    }\r\n    cEditFrom(): CTuidEdit {\r\n        let cUq = this.entity.cUqFrom();\r\n        return cUq.cTuidEditFromName(this.entity.name);\r\n    }\r\n    cInfoFrom(): CTuidInfo {\r\n        let cUq = this.entity.cUqFrom();\r\n        return cUq.cTuidInfoFromName(this.entity.name);\r\n    }\r\n    cSelectFrom(): CTuidSelect {\r\n        let cUq = this.entity.cUqFrom();\r\n        return cUq.cTuidSelectFromName(this.entity.name);\r\n    }\r\n\r\n    getLable(tuid:Tuid):string {\r\n        if (tuid === this.entity) return this.label;\r\n        let {name} = tuid;\r\n        let {arrs} = this.res;\r\n        if (arrs !== undefined) {\r\n            let arr = arrs[name];\r\n            if (arr !== undefined) {\r\n                let label = arr.label;\r\n                if (label !== undefined) return label;\r\n            }\r\n        }\r\n        return name;\r\n    }\r\n\r\n    proxies: {[name:string]: TuidMain};\r\n    proxyLinks: CLink[];\r\n    isFrom: boolean;\r\n\r\n    protected get VTuidMain():typeof VTuidMain {return VTuidMain}\r\n    protected get VTuidEdit():typeof VTuidEdit {return VTuidEdit}\r\n    protected get VTuidList():typeof VTuidMainList {return VTuidMainList}\r\n\r\n    protected async internalStart(param?:any):Promise<void> {\r\n        this.isFrom = this.entity.schemaFrom !== undefined;\r\n        await this.openVPage(this.VTuidMain);\r\n    }\r\n\r\n    protected async onEvent(type:string, value:any) {\r\n        //let v: TypeVPage<CTuidMain>;\r\n        switch (type) {\r\n            default: return;\r\n            case 'new': await this.onNew(); break;\r\n            case 'list': await this.onList(); break;\r\n            case 'edit': await this.onEdit(value); return;\r\n            case 'item-changed': this.itemChanged(value); return;\r\n            case 'info': \r\n                let cTuidInfo = new CTuidInfo(this.cUq, this.entity, this.ui, this.res);\r\n                await cTuidInfo.start(value);\r\n                return;\r\n        }\r\n        //await this.openVPage(v, value);\r\n    }\r\n\r\n    protected async edit(values:any) {\r\n        let cTuidEdit = this.ui && this.ui.CTuidEdit;\r\n        if (cTuidEdit === undefined) {\r\n            await this.openVPage(this.VTuidEdit, values);\r\n        }\r\n        else {\r\n            await (new cTuidEdit(this.cUq, this.entity, this.ui, this.res)).start(values);\r\n        }\r\n    }\r\n\r\n    private async onNew() {\r\n        await this.edit(undefined);\r\n    }\r\n\r\n    private async onList() {\r\n        let cTuidList = this.ui && this.ui.CTuidList;\r\n        if (cTuidList === undefined) {\r\n            await this.openVPage(this.VTuidList, undefined);\r\n        }\r\n        else {\r\n            await (new cTuidList(this.cUq, this.entity, this.ui, this.res)).start(undefined);\r\n        }\r\n    }\r\n\r\n    protected async onEdit(id:number) {\r\n        let values:any = undefined;\r\n        if (id !== undefined) {\r\n            values = await this.entity.load(id);\r\n        }\r\n        this.edit(values);\r\n        //await this.openVPage(this.VTuidEdit, values);\r\n    }\r\n\r\n    private itemChanged({id, values}:{id:number, values: any}) {\r\n        if (this.PageItems === undefined) return;\r\n        let items = this.PageItems.items;\r\n        let item = items.find(v => v.id === id);\r\n        if (item !== undefined) {\r\n            _.merge(item, values);\r\n        }\r\n    }\r\n}\r\n\r\nexport class CTuidMain extends CTuidBase {\r\n    protected async internalStart(param?:any):Promise<void> {\r\n        this.isFrom = this.entity.schemaFrom !== undefined;\r\n        await this.openVPage(this.VTuidMain);\r\n    }\r\n\r\n}\r\n\r\nexport class CTuidEdit extends CTuidBase {\r\n    protected async internalStart(id:number):Promise<void> {\r\n        this.isFrom = this.entity.schemaFrom !== undefined;\r\n        if (typeof(id) === 'number') {\r\n            await this.onEdit(id);\r\n        }\r\n        else {\r\n            await this.edit(id);\r\n        }\r\n    }\r\n\r\n    protected async edit(values:any) {\r\n        await this.openVPage(this.VTuidEdit, values);\r\n    }\r\n}\r\n\r\nexport class CTuidList extends CTuidBase {\r\n    protected async internalStart(id:number):Promise<void> {\r\n        this.isFrom = this.entity.schemaFrom !== undefined;\r\n        await this.openVPage(this.VTuidList);\r\n    }\r\n}\r\n\r\nexport class CTuidDiv extends CTuid<TuidDiv> {\r\n    protected async internalStart():Promise<void> {\r\n        alert('tuid div: ' + this.entity.name);\r\n    }\r\n}\r\n\r\nexport class CTuidSelect extends CTuid<Tuid> {\r\n    protected async internalStart(param?: any):Promise<void> {\r\n        await this.openVPage(this.VTuidSelect, param);\r\n    }\r\n    protected async beforeStart():Promise<boolean> {\r\n        //if (await super.beforeStart() === false) return false;\r\n        await this.entity.loadSchema();\r\n        if (this.PageItems !== undefined) this.PageItems.reset();\r\n        return true;\r\n    }\r\n    protected get VTuidSelect():typeof VTuidSelect {return VTuidSelect}\r\n    idFromItem(item:any) {\r\n        return item.id;\r\n    }\r\n}\r\n\r\nexport class CTuidInfo extends CTuid<Tuid> {\r\n    protected async internalStart(id: any):Promise<void> {\r\n        let data = await this.entity.load(id)\r\n        await this.openVPage(this.VTuidInfo, data);\r\n    }\r\n    protected get VTuidInfo():typeof VTuidInfo {return VTuidInfo}\r\n}\r\n","export * from './cTuid';\r\nexport * from './vTuidMain';\r\nexport * from './vTuidEdit';\r\nexport * from './vTuidInfo';\r\nexport * from './vTuidView';\r\nexport * from './vTuidSelect';\r\n","import * as React from 'react';\r\nimport { VField } from './vField';\r\nimport { VArr } from './vArr';\r\nimport { VSubmit } from './vSubmit';\r\nimport { uid } from 'tonva-react-form';\r\n\r\nexport abstract class VBand {\r\n    protected label: string;\r\n    protected view = () => <div />;\r\n\r\n    constructor(label:string) {\r\n        this.label = label;\r\n    }\r\n\r\n    render():JSX.Element {\r\n        //text-sm-right\r\n        return <div key={this.key} className=\"px-3\">\r\n            <div className=\"form-group row\">\r\n                <label className=\"col-sm-2 col-form-label\">\r\n                    {this.label}\r\n                </label>\r\n                <div className=\"col-sm-10\">\r\n                    {this.renderContent()}\r\n                </div>\r\n            </div>\r\n        </div>;\r\n    }\r\n\r\n    setAddRow(addRow:()=>Promise<void>) {}\r\n    get key() {return this.label}\r\n    public getVFields():VField[] {return;}\r\n    public getVArr():VArr {return;}\r\n    public getVSubmit():VSubmit {return;}\r\n\r\n    protected renderContent():JSX.Element {\r\n        return <div className=\"form-control form-control-plaintext bg-white border border-info rounded \">content</div>;\r\n    }\r\n}\r\n\r\nexport interface FieldRes {\r\n    label: string;\r\n    placeHolder: string;\r\n    suffix: string;\r\n}\r\nexport class VFieldBand extends VBand {\r\n    protected vField:VField;\r\n    constructor(label:string, vField:VField) {\r\n        super(label);\r\n        this.vField = vField;\r\n    }\r\n\r\n    get key() {return this.vField.name}\r\n    public getVFields():VField[] {return [this.vField];}\r\n\r\n    protected renderContent():JSX.Element {\r\n        return this.vField.render();\r\n        /*\r\n        <div className=\"form-control form-control-plaintext bg-white border border-info rounded \">\r\n            {this.vField.render()}\r\n        </div>;*/\r\n    }\r\n}\r\n\r\nexport class VArrBand extends VBand {\r\n    protected vArr:VArr;\r\n    constructor(label:string, vArr:VArr) {\r\n        super(label);\r\n        this.vArr = vArr;\r\n    }\r\n\r\n    setAddRow(addRow:()=>Promise<void>) {this.vArr.setAddRow(addRow)}\r\n    get key() {return this.vArr.name}\r\n    public getVArr():VArr {return this.vArr;}\r\n\r\n    render():JSX.Element {\r\n        return <React.Fragment key={this.key}>\r\n            {this.vArr && this.vArr.render()}\r\n        </React.Fragment>;\r\n    }\r\n}\r\n\r\nexport class VFieldsBand extends VBand {\r\n    protected vFields: VField[];\r\n    constructor(label:string, vFields:VField[]) {\r\n        super(label);\r\n        this.vFields = vFields;\r\n    }\r\n\r\n    get key() {return this.vFields[0].name}\r\n    public getVFields():VField[] {return this.vFields;}\r\n\r\n    protected renderContent():JSX.Element {\r\n        return <div className=\"form-control form-control-plaintext bg-white border border-info rounded \">\r\n            fields\r\n        </div>;\r\n    }\r\n}\r\n\r\nexport class VSubmitBand extends VBand {\r\n    protected vSubmit: VSubmit;\r\n    constructor(vSubmit:VSubmit) {\r\n        super(undefined);\r\n        this.vSubmit = vSubmit;\r\n    }\r\n\r\n    get key() {return '$submit'}\r\n\r\n    public getVSubmit():VSubmit {return this.vSubmit;}\r\n\r\n    render():JSX.Element {\r\n        return <div key=\"$submit\" className=\"px-3\">\r\n            <div className=\"form-group row\">\r\n                <div className=\"offset-sm-2 col-sm-10\">\r\n                    {this.vSubmit.render()}\r\n                </div>\r\n            </div>\r\n        </div>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport classNames from 'classnames'\r\nimport { ViewModel } from \"./viewModel\";\r\nimport { VForm } from './vForm';\r\nimport { observer } from 'mobx-react';\r\nimport { observable } from 'mobx';\r\n\r\nexport class VSubmit extends ViewModel {\r\n    private vForm: VForm;\r\n    constructor(vForm: VForm) {\r\n        super();\r\n        this.vForm = vForm;\r\n        this.caption = this.vForm.submitCaption;\r\n        this.className = 'btn btn-primary w-25';\r\n    }\r\n    @observable caption: string;\r\n    @observable className: string;\r\n\r\n    private onClickSubmit = async () => {\r\n        this.vForm.submit();\r\n    }\r\n\r\n    protected view = observer(() => {\r\n        let {isOk} = this.vForm;\r\n        return <button type=\"button\" \r\n            onClick={this.onClickSubmit}\r\n            className={this.className}\r\n            disabled={isOk === false}>\r\n            {this.caption}\r\n        </button>;\r\n    });\r\n}","\r\nexport abstract class Rule {\r\n    abstract check(defy:string[], value:any);\r\n}\r\n\r\nexport class RuleRequired extends Rule {\r\n    check(defy:string[], value:any) {\r\n        switch (typeof value) {\r\n            default:\r\n            case 'boolean': return;\r\n            case 'object':\r\n                if (value !== null) return;\r\n                break;\r\n            case 'string':\r\n                if ((value as string).trim().length > 0) return;\r\n                break;\r\n            case 'number':\r\n                if ((value as number) !== NaN) return;\r\n                break;\r\n            case 'undefined':\r\n                break;\r\n        }\r\n        defy.push('不能为空');\r\n    }\r\n}\r\n\r\nexport class RuleNum extends Rule {\r\n    check(defy:string[], value:any) {\r\n        if (value === undefined || value === null) return;\r\n        let n = Number(value);\r\n        if (n === NaN) defy.push('必须是数字');\r\n    }\r\n}\r\n\r\nexport class RuleInt extends Rule {\r\n    check(defy:string[], value:any) {\r\n        if (value === undefined || value === null) return;\r\n        let n = Number(value);\r\n        if (Number.isNaN(n) === true || Number.isInteger(n) === false) {\r\n            defy.push('必须是整数');\r\n        }\r\n    }\r\n}\r\n\r\nexport class RuleMin extends RuleNum {\r\n    constructor(min: number) {\r\n        super();\r\n        this.min = min;\r\n    }\r\n    min: number;\r\n    check(defy:string[], value:any) {\r\n        super.check(defy, value);\r\n        if (Number(value) < this.min) defy.push('不能小于' + this.min);\r\n    }\r\n}\r\n\r\nexport class RuleMax extends RuleNum {\r\n    constructor(max: number) {\r\n        super();\r\n        this.max = max;\r\n    }\r\n    max: number;\r\n    check(defy:string[], value:any) {\r\n        super.check(defy, value);\r\n        if (Number(value) > this.max) defy.push('不能小于' + this.max);\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { computed, action } from 'mobx';\r\nimport classNames from 'classnames';\r\nimport { observer } from 'mobx-react';\r\nimport { FA } from 'tonva-react-form';\r\nimport { ViewModel } from \"../viewModel\";\r\nimport { VForm, FormMode } from '../vForm';\r\nimport { Rule, RuleRequired, RuleInt, RuleNum, RuleMin, RuleMax } from '../rule';\r\nimport { Field } from '../../../entities';\r\nimport { FieldRes } from '../vBand';\r\nimport { FieldUI, FieldInputUI, FieldStringUI, FieldNumberUI } from '../../formUI';\r\n\r\nexport abstract class VField extends ViewModel {\r\n    protected form: VForm;\r\n    protected fieldUI: FieldUI;\r\n    protected fieldRes:FieldRes;\r\n    protected field: Field;\r\n    protected rules: Rule[];\r\n    constructor(form:VForm, field:Field, fieldUI: FieldUI, fieldRes:FieldRes) {\r\n        super();\r\n        this.form = form;\r\n        this.field = field;\r\n        this.name = field.name;\r\n        this.fieldUI = fieldUI || {} as any;\r\n        this.fieldRes = fieldRes || {} as any;\r\n        this.init();\r\n    }\r\n\r\n    name: string;\r\n\r\n    protected init() {\r\n        this.buildRules();\r\n    }\r\n\r\n    protected buildRules() {\r\n        this.rules = [];\r\n        let {required} = this.fieldUI;\r\n        if (required === true || this.field !== undefined && this.field.null === false) {\r\n            this.rules.push(new RuleRequired);\r\n        }\r\n    }\r\n\r\n    @computed get checkRules(): string[] {\r\n        let defy = [];\r\n        for (let r of this.rules) r.check(defy, this.value);\r\n        return defy;\r\n    }\r\n\r\n    @computed get isOk() {\r\n        if (this.rules.length === 0) return true;\r\n        let defy = this.checkRules;\r\n        return defy.length === 0;\r\n    }\r\n\r\n    @computed get value() { return this.form.values[this.name]; }\r\n    setValue(v:any) {\r\n        this.form.values[this.name]=v; \r\n    }\r\n    get error() { return this.form.errors[this.name]; }\r\n    set error(err:any) { this.form.errors[this.name]=err; }\r\n    protected parse(str:string):any {return str;}\r\n    get readonly():boolean {\r\n        let {mode} = this.form;\r\n        return mode === FormMode.readonly || \r\n            mode === FormMode.edit && this.fieldUI.editable === false;\r\n    }\r\n}\r\n\r\nexport class VUnknownField extends VField {\r\n    protected view = () => {\r\n        //let {name, type} = this.fieldUI;\r\n        let type='', name = '';\r\n        return <input type=\"text\" className=\"form-control form-control-plaintext border border-info rounded bg-light\"\r\n            placeholder={'unkown control: ' + type + '-' + name} />;\r\n    }\r\n}\r\n\r\nexport abstract class VInputControl extends VField {\r\n    protected fieldUI: FieldInputUI;\r\n    protected input: HTMLInputElement;\r\n\r\n    protected inputType:string;\r\n    protected get maxLength():number {return}\r\n\r\n    protected renderError = (className:string) => {\r\n        let {errors} = this.form;\r\n        let error = errors[this.name];\r\n        if (error === undefined) return;\r\n        return <div className={className}><FA name=\"exclamation-circle\" /> {error}</div>\r\n    }\r\n\r\n    /*\r\n    get value() {\r\n        return super.value;\r\n    }*/\r\n    setValue(v:any) {\r\n        super.setValue(v); this.setInputValue(); \r\n    }\r\n\r\n    protected ref = (input:HTMLInputElement) => {\r\n        this.input = input;\r\n        this.setInputValue();\r\n    }\r\n\r\n    protected setInputValue() {\r\n        if (!this.input) return;\r\n        let v = this.value;\r\n        this.input.value = v === null || v === undefined? '' : v;\r\n    }\r\n\r\n    protected onFocus = () => {\r\n        this.error = undefined;\r\n    }\r\n\r\n    protected onBlur = () => {\r\n        let defy = this.checkRules;\r\n        if (defy.length > 0) {\r\n            this.error = defy[0];\r\n        }\r\n        this.form.computeFields();\r\n    }\r\n\r\n    protected onChange = (evt: React.ChangeEvent<any>) => {\r\n        let v = this.parse(evt.currentTarget.value);\r\n        if (v === null) {\r\n            return;\r\n        }\r\n        this.setValue(v);\r\n    }\r\n\r\n    protected onKeyPress: (event:React.KeyboardEvent<HTMLInputElement>) => void;\r\n    \r\n    protected view = observer(() => {\r\n        let {required} = this.fieldUI;\r\n        let {placeHolder, suffix} = this.fieldRes;\r\n        let ctrlCN = ['form-control', 'form-control-input'];\r\n        let errCN = 'text-danger small mt-1 mx-2';\r\n    \r\n        let redDot;\r\n        let input;\r\n        if (this.readonly === true) {\r\n            input = <input className={classNames(ctrlCN, 'bg-light')}\r\n                ref={this.ref}\r\n                type={this.inputType}\r\n                readOnly={true}\r\n            />;\r\n        }\r\n        else {\r\n            input = <input className={classNames(ctrlCN)}\r\n                ref={this.ref}\r\n                type={this.inputType}\r\n                onFocus={this.onFocus}\r\n                onBlur={this.onBlur}\r\n                onChange={this.onChange}\r\n                placeholder={placeHolder}\r\n                readOnly={false}\r\n                maxLength={this.maxLength}\r\n                onKeyPress={this.onKeyPress}\r\n            />;\r\n            if (required === true || this.field.null === false) {\r\n                redDot = <RedMark />;\r\n            }\r\n        }\r\n\r\n        let inputGroup;\r\n        if (suffix === undefined)\r\n            inputGroup = input;\r\n        else\r\n            inputGroup = <div className=\"input-group\">\r\n                {input}\r\n                <div className=\"input-group-append\">\r\n                    <span className=\"input-group-text\">{suffix}</span>\r\n                </div>\r\n            </div>;\r\n\r\n        return <>\r\n            {redDot}\r\n            {inputGroup}\r\n            {this.renderError(errCN)}\r\n        </>\r\n    });\r\n}\r\n\r\nexport const RedMark = () => <b style={{color:'red', position:'absolute', left:'0.1em', top:'0.5em'}}>*</b>;\r\n\r\nexport class VStringField extends VInputControl {\r\n    protected fieldUI: FieldStringUI;\r\n    protected inputType:string = 'text';\r\n    protected get maxLength():number {return this.field.size}\r\n}\r\n\r\nconst KeyCode_Neg = 45;\r\nconst KeyCode_Dot = 46;\r\n\r\nexport abstract class VNumberControl extends VInputControl {\r\n    protected fieldUI: FieldNumberUI;\r\n    protected extraChars: number[];\r\n\r\n    protected init() {\r\n        super.init();\r\n        this.extraChars = [];\r\n        if (this.fieldUI !== undefined) {\r\n            let {min, max} = this.fieldUI;\r\n            if (min !== undefined) {\r\n                //this.rules.push((v:number) => {if (v === undefined) return; if (v<min) return ErrMin + min; return true;});\r\n                if (min < 0) this.extraChars.push(KeyCode_Neg);\r\n            }\r\n            else {\r\n                this.extraChars.push(KeyCode_Neg);\r\n            }\r\n    \r\n            if (max !== undefined) {\r\n                //this.rules.push((v:number) => {if (v === undefined) return; if (v>max) return ErrMax + max; return true});\r\n            }\r\n        }\r\n        switch (this.field.type) {\r\n            case 'dec':\r\n            case 'bigint':\r\n            case 'int':\r\n            case 'smallint':\r\n            case 'tinyint':\r\n                this.extraChars.push(KeyCode_Dot); break;\r\n        }\r\n    }\r\n\r\n    protected buildRules() {\r\n        super.buildRules();\r\n        this.rules.push(new RuleNum);\r\n        let {min, max} = this.fieldUI;\r\n        if (min !== undefined) this.rules.push(new RuleMin(min));\r\n        if (max !== undefined) this.rules.push(new RuleMax(max));\r\n    }\r\n\r\n    inputType:string = 'number';\r\n\r\n    protected parse(text:string):any {\r\n        try {\r\n            if (text.trim().length === 0) return undefined;\r\n            let ret = Number(text);\r\n            return (ret === NaN)? null : ret;\r\n        }\r\n        catch {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    protected setInputValue() {\r\n        if (!this.input) return;\r\n        let v = this.value;\r\n        if (this.parse(this.input.value) == v) return;\r\n        this.input.value = v === null || v === undefined? '' : v;\r\n    }\r\n\r\n    protected onKeyPress = (event:React.KeyboardEvent<HTMLInputElement>) => {\r\n        let ch = event.charCode;\r\n        if (ch === 8 || ch === 0 || ch === 13 || ch >= 48 && ch <= 57) return;\r\n        if (this.extraChars !== undefined) {\r\n            if (this.extraChars.indexOf(ch) >= 0) {\r\n                switch (ch) {\r\n                    case KeyCode_Dot: this.onKeyDot(); break;\r\n                    case KeyCode_Neg: this.onKeyNeg(); event.preventDefault(); break;\r\n                }\r\n                return;\r\n            }\r\n        }\r\n        event.preventDefault();\r\n    }\r\n\r\n    private onKeyDot() {\r\n        let v = this.input.value;\r\n        let p = v.indexOf('.');\r\n        if (p >= 0) this.input.value = v.replace('.', '');\r\n    }\r\n    private onKeyNeg() {\r\n        let v = this.input.value;\r\n        let p = v.indexOf('-');\r\n        if (p >= 0) v = v.replace('-', '');\r\n        else v = '-'+v;\r\n        this.input.value = v;\r\n    }\r\n}\r\n\r\nexport class VIntField extends VNumberControl {\r\n    protected buildRules() {\r\n        super.buildRules();\r\n        this.rules.push(new RuleInt);\r\n    }\r\n}\r\n\r\nexport class VDecField extends VNumberControl {\r\n}\r\n\r\nexport class VTextField extends VStringField {\r\n\r\n}\r\n\r\nexport class VDateTimeField extends VStringField {\r\n\r\n}\r\n\r\nexport class VDateField extends VStringField {\r\n\r\n}\r\n","import React from 'react';\r\nimport { VField } from './vField';\r\nimport { Field } from '../../../entities';\r\nimport { VForm } from '../vForm';\r\nimport { observer } from 'mobx-react';\r\nimport { FieldRes } from '../vBand';\r\n\r\nexport class VComputeField extends VField {\r\n    constructor(form:VForm, field: Field, fieldRes: FieldRes) {\r\n        super(form, field, undefined, fieldRes);\r\n    }\r\n    protected view = observer(() => {\r\n        let value = this.form.values[this.field.name];\r\n        let {placeHolder, suffix} = this.fieldRes;\r\n        let ctrlCN = 'form-control form-control-input bg-light';\r\n        if (value === null) value = '';\r\n        let input = <input className={ctrlCN}\r\n            type=\"text\"\r\n            placeholder={placeHolder}\r\n            readOnly={true}\r\n            value={value}/>\r\n        let inputGroup;\r\n        if (suffix === undefined)\r\n            inputGroup = input;\r\n        else\r\n            inputGroup = <div className=\"input-group\">\r\n                {input}\r\n                <div className=\"input-group-append\">\r\n                    <span className=\"input-group-text\">{suffix}</span>\r\n                </div>\r\n            </div>;\r\n        return inputGroup;\r\n        /*\r\n            return <div \r\n            className=\"form-control form-control-plaintext border border-info rounded bg-light cursor-pointer\">\r\n            {value} &nbsp;\r\n        </div>;\r\n        */\r\n    });\r\n}\r\n","import * as React from 'react';\r\nimport { IObservableArray, observable } from 'mobx';\r\nimport _ from 'lodash';\r\nimport { List, FA, Muted } from 'tonva-react-form';\r\nimport { Page, nav } from 'tonva-tools';\r\nimport { ViewModel, RowContent, TypeContent, JSONContent } from './viewModel';\r\nimport { ArrFields, Field } from '../../entities';\r\nimport { VForm, FieldInputs, FormMode } from './vForm';\r\nimport { FormArr } from '../formUI';\r\n\r\nexport type ArrEditRow = (initValues:any, onRowChanged:(rowValues:any)=>void) => Promise<void>;\r\n\r\nexport class VArr extends ViewModel {\r\n    protected mode: FormMode;\r\n    protected label: any;\r\n    protected header: any;\r\n    protected footer: any;\r\n    protected rowValues: any;                 // 仅仅用来判断是不是新增，undefined则是新增\r\n    protected onEditRow: ArrEditRow;\r\n    protected ownerForm:VForm;\r\n    protected vForm:VForm;\r\n    protected rowContent:TypeContent;\r\n    protected none: string;\r\n    protected newSubmitCaption: string;\r\n    protected editSubmitCaption: string;\r\n    protected addRow: ()=>Promise<void>;\r\n\r\n    name:string;\r\n    list: IObservableArray<any>;\r\n\r\n    constructor(ownerForm:VForm, arr:ArrFields, onEditRow?:ArrEditRow) {\r\n        super();\r\n        this.ownerForm = ownerForm;\r\n        let {name, fields} = arr;\r\n        this.name = name;\r\n        let {ui, res, mode, inputs, values} = ownerForm;\r\n        let arrsRes = res.arrs;\r\n        let arrRes = arrsRes !== undefined? arrsRes[name] : {};\r\n        let {label, none, newSubmit, editSubmit} = arrRes;\r\n        this.none = none || ownerForm.none;\r\n        this.newSubmitCaption = newSubmit || ownerForm.arrNewCaption;\r\n        this.editSubmitCaption = editSubmit || ownerForm.arrEditCaption;\r\n        this.label = label || name;\r\n        let arrUI = ((ui && ui.items[name]) || {}) as FormArr;\r\n        this.rowContent = arrUI.rowContent;// || JSONContent;\r\n        this.mode = mode;\r\n        if (this.onEditRow === undefined) {\r\n            this.vForm = new VForm({\r\n                fields: fields,\r\n                arrs: undefined,\r\n                ui: arrUI,\r\n                res: arrRes,\r\n                inputs: inputs[name] as FieldInputs,\r\n                none: ownerForm.none,\r\n                submitCaption: 'submit',\r\n                arrNewCaption: undefined,\r\n                arrEditCaption: undefined,\r\n                arrTitleNewButton: undefined,\r\n                mode: mode,\r\n            }, \r\n            mode===FormMode.readonly? undefined: this.onSubmit);\r\n        }\r\n        else {\r\n            this.onEditRow = onEditRow;\r\n        }\r\n        this.list = values[name];\r\n    }\r\n\r\n    reset() {\r\n        this.vForm.reset();\r\n        this.list.clear();\r\n    }\r\n\r\n    setAddRow(addRow:()=>Promise<void>) {\r\n        this.addRow = addRow;\r\n    }\r\n\r\n    protected rowPage = () => {\r\n        return <Page header={this.label} back=\"close\">\r\n            {this.vForm.render('py-3')}\r\n        </Page>\r\n    }\r\n    private onSubmit = async () => {\r\n        let {valueBoxs} = this.vForm;\r\n        await this.onRowChanged(valueBoxs);\r\n    }\r\n\r\n    private onRowChanged = async (rowValues:any) => {\r\n        if (this.rowValues === undefined) {\r\n            rowValues.$owner = this.ownerForm.values;\r\n            this.list.push(rowValues);\r\n            if (this.onEditRow === undefined)\r\n                this.vForm.reset();\r\n            else\r\n                await this.onEditRow(undefined, this.onRowChanged);\r\n        }\r\n        else {\r\n            _.merge(this.rowValues, rowValues);\r\n            if (this.onEditRow === undefined) nav.pop();\r\n        }\r\n    }\r\n\r\n    private renderItem = (item:any, index:number) => {\r\n        if (this.rowContent === undefined)\r\n            return <div className=\"px-3 py-2\"><JSONContent {...item} /></div>\r\n        return <this.rowContent {...item} />;\r\n    }\r\n    private showRow = async (rowValues:any):Promise<any> => {\r\n        if (this.onEditRow !== undefined) {\r\n            await this.onEditRow(rowValues, this.onRowChanged);\r\n            return;\r\n        }\r\n        this.vForm.reset();\r\n        if (rowValues !== undefined) this.vForm.setValues(rowValues);\r\n        nav.push(<this.rowPage />);\r\n    }\r\n    private editRow = async (rowValues:any): Promise<void> => {\r\n        this.rowValues = rowValues;\r\n        let {vSubmit} = this.vForm;\r\n        if (vSubmit !== undefined) {\r\n            vSubmit.caption = this.editSubmitCaption;\r\n            vSubmit.className = 'btn btn-outline-success';\r\n        }\r\n        this.vForm.mode = this.ownerForm.mode;\r\n        await this.showRow(rowValues);\r\n    }\r\n    private internalAddRow = async () => {\r\n        this.rowValues = undefined;\r\n        let {vSubmit} = this.vForm;\r\n        vSubmit.caption = this.newSubmitCaption;\r\n        vSubmit.className = 'btn btn-outline-success';\r\n        this.vForm.reset();\r\n        this.vForm.mode = FormMode.new;\r\n        await this.showRow(undefined);\r\n    }\r\n\r\n    protected view = () => {\r\n        let button;\r\n        if (this.addRow !== undefined || this.mode !== FormMode.readonly) {\r\n            button = <button onClick={this.addRow || this.internalAddRow}\r\n                type=\"button\" \r\n                className=\"btn btn-link p-0\">\r\n                {this.ownerForm.arrTitleNewButton}\r\n            </button>;\r\n        }\r\n        let header = this.header || <div className=\"px-3 bg-light small\" style={{paddingTop:'1px', paddingBottom:'1px'}}>\r\n            <div className=\"flex-fill align-self-center\">{this.label}</div>\r\n            {button}\r\n        </div>;\r\n        return <List className=\"pb-3\"\r\n            header={header}\r\n            none={<Muted className=\"px-3 py-2\">{this.none}</Muted>}\r\n            items={this.list}\r\n            item={{render: this.renderItem, onClick: this.editRow}} />;\r\n    };\r\n}\r\n","import * as React from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport { tv } from '../../../tools';\r\nimport { Field, Tuid } from '../../../entities';\r\nimport { VField, RedMark } from \"./vField\";\r\nimport { FieldUI } from '../../formUI';\r\nimport { VForm, FieldInput, FormMode } from '../vForm';\r\nimport { FieldRes } from '../vBand';\r\n\r\nconst buttonStyle:React.CSSProperties = {\r\n    textAlign:'left', \r\n    paddingLeft:'0.75rem', \r\n    paddingRight:'0.75rem', \r\n    overflow: 'hidden'\r\n};\r\n\r\nexport class VTuidField extends VField {\r\n    protected vForm: VForm;\r\n    protected input: FieldInput;\r\n    protected tuid: Tuid;\r\n\r\n    constructor(vForm: VForm, field:Field, fieldUI: FieldUI, fieldRes:FieldRes) {\r\n        super(vForm, field, fieldUI, fieldRes);\r\n        this.tuid = field._tuid;\r\n        this.vForm = vForm;\r\n        this.input = vForm.inputs[field.name] as FieldInput;\r\n    }\r\n\r\n    onClick = async () => {\r\n        if (this.readonly === true) {\r\n            if (!this.value) return;\r\n            await this.tuid.showInfo(this.value.id);\r\n            return;\r\n        }\r\n        let id:number;\r\n        if (this.input !== undefined) {\r\n            id = await this.input.select(this.vForm, this.field, this.vForm.getValues());\r\n        }\r\n        else {\r\n            alert('call undefined');\r\n            id = 0;\r\n        }\r\n        this.setValue(this.tuid.boxId(id));\r\n    }\r\n    protected view = observer(() => {\r\n        let {placeHolder} = this.fieldRes;\r\n        let disabled:boolean = false;\r\n        let {_ownerField} = this.field;\r\n        if (_ownerField !== undefined) {\r\n            let {name, arr} = _ownerField;\r\n            disabled = this.vForm.getValue(name) === null;\r\n        }\r\n        let content;\r\n        if (this.value === null)\r\n            content = <>{placeHolder || this.input.placeHolder}</>;\r\n        else if (typeof this.value === 'object') {\r\n            content = tv(this.value);\r\n        }\r\n        else {\r\n            let idBox = this.tuid.boxId(this.value);\r\n            content = tv(idBox); // idBox.content();\r\n        }\r\n        if (this.readonly === true)\r\n        {\r\n            return <div \r\n                className=\"form-control form-control-plaintext border border-info rounded bg-light cursor-pointer\"\r\n                onClick={this.onClick}>\r\n                {content}\r\n            </div>;\r\n        }\r\n        let redDot;\r\n        let {required} = this.fieldUI;\r\n        if (required === true || this.field.null === false) {\r\n            redDot = <RedMark />;\r\n        }\r\n        return <>\r\n            {redDot}\r\n            <button className=\"form-control btn btn-outline-info\"\r\n                type=\"button\"\r\n                disabled={disabled}\r\n                style={buttonStyle}\r\n                onClick={this.onClick}>\r\n                {content}\r\n            </button>\r\n        </>;\r\n    })\r\n}\r\n","import { VBand, VFieldBand, VArrBand, VFieldsBand, VSubmitBand, FieldRes } from \"./vBand\";\r\nimport { Field, ArrFields } from \"../../entities\";\r\nimport { VForm, FormOptions } from \"./vForm\";\r\nimport { FormItems, FieldUI, FormItem } from \"../formUI\";\r\nimport { VSubmit } from \"./vSubmit\";\r\nimport { VField, buildVField, VComputeField } from \"./vField\";\r\nimport { VArr } from \"./vArr\";\r\nimport { VTuidField } from \"./vField/vTuidField\";\r\n\r\nexport class BandsBuilder {\r\n    private vForm: VForm;\r\n    private onSubmit: (values:any)=>Promise<void>;\r\n    private fields: Field[];\r\n    private arrs: ArrFields[];\r\n    private formItems: FormItems;\r\n    private layout: string[];\r\n    private res: any;\r\n    constructor(vForm:VForm, options: FormOptions, onSubmit: (values:any)=>Promise<void>) {\r\n        this.vForm = vForm;\r\n        this.onSubmit = onSubmit;\r\n        let {fields, arrs, ui, res} = options;\r\n        this.fields = fields;\r\n        this.arrs = arrs;\r\n        if (ui !== undefined) {\r\n            let {items, layout} = ui;\r\n            this.formItems = items;\r\n            this.layout = layout;\r\n        }\r\n        this.res = res;\r\n    }\r\n\r\n    build():VBand[] {\r\n        //return this.bandUIs === undefined? this.bandsOnFly() : this.bandsFromUI();\r\n        return this.layout === undefined? this.bandsOnFly() : this.bandsFromLayout();\r\n    }\r\n\r\n    private resFromName(name:string, res:any):string|FieldRes {\r\n        if (res === undefined) return;\r\n        let {fields} = res;\r\n        if (fields === undefined) return;\r\n        return fields[name] || name;\r\n    }\r\n\r\n    private bandsOnFly():VBand[] {\r\n        let bands:VBand[] = [];\r\n        this.bandsFromFields(bands, this.fields, this.res);\r\n        if (this.arrs !== undefined) {\r\n            for (let arr of this.arrs) bands.push(this.bandFromArr(arr));\r\n        }\r\n        if (this.onSubmit !== undefined) {\r\n            bands.push(new VSubmitBand(new VSubmit(this.vForm)));\r\n        }\r\n        return bands;\r\n    }\r\n\r\n    private bandsFromFields(bands:VBand[], fields:Field[], res:any) {\r\n        if (fields === undefined) return;\r\n        for (let field of fields) bands.push(this.bandFromField(field, res));\r\n    }\r\n\r\n    private bandsFromLayout():VBand[] {\r\n        let bands:VBand[] = [];\r\n        /*\r\n        for (let bandUI of this.bandUIs)  {\r\n            let band = this.bandFromUI(bandUI);\r\n            bands.push(band);\r\n        }\r\n        */\r\n        return bands;\r\n    }\r\n\r\n    /*\r\n    private bandFromUI(bandUI:BandUI):VBand {\r\n        let {band} = bandUI;\r\n        switch (band) {\r\n            default: return this.bandFromFieldUI(bandUI as FieldBandUI);\r\n            case 'arr': return this.bandFromArrUI(bandUI as ArrBandUI);\r\n            case 'fields': return this.bandFromFieldsUI(bandUI as FieldsBandUI);\r\n            case 'submit': return this.bandFromSubmitUI(bandUI as SubmitBandUI);\r\n        }\r\n    }\r\n    \r\n    private bandFromFieldUI(bandUI: FieldBandUI): VFieldBand {\r\n        let {label} = bandUI;\r\n        let vField = this.vFieldFromUI(bandUI);\r\n        return new VFieldBand(label, vField);\r\n    }\r\n    private bandFromArrUI(bandUI: ArrBandUI): VArrBand {\r\n        let {label, name} = bandUI;\r\n        let vArr = this.vArrFromUI(bandUI);\r\n        return new VArrBand(label, vArr);\r\n    }\r\n    private bandFromFieldsUI(bandUI: FieldsBandUI): VFieldsBand {\r\n        let {label, fieldUIs} = bandUI;\r\n        let vFields = fieldUIs.map(v => this.vFieldFromUI(v));\r\n        return new VFieldsBand(label, vFields);\r\n    }\r\n    private bandFromSubmitUI(bandUI: SubmitBandUI): VSubmitBand {\r\n        if (this.onSubmit === undefined) return;\r\n        let vSubmit = new VSubmit(this.vForm);\r\n        return new VSubmitBand(vSubmit);\r\n    }\r\n    */\r\n/*\r\n    private vFieldFromField(field:Field, fieldRes:FieldRes, formItem: FormItem): VField {\r\n        let fieldUI:FieldUI = undefined;\r\n        if (formItem !== undefined) {\r\n            if (typeof formItem === 'function') {\r\n                return new VComputeField(this.vForm, field, fieldRes);\r\n            }\r\n        }\r\n        let ret = buildVField(this.vForm, field, formItem, fieldRes);\r\n        if (ret !== undefined) return ret;\r\n        return new VTuidField(field, fieldUI, fieldRes, this.vForm);\r\n    }\r\n*/\r\n    private bandFromField(field:Field, res:any):VBand {\r\n        let {name} = field;\r\n        let fieldRes:FieldRes;\r\n        let rfn = this.resFromName(name, res);\r\n        let label:string;\r\n        if (typeof rfn === 'object') {\r\n            label = rfn.label;\r\n            fieldRes = rfn;\r\n        }\r\n        else {\r\n            label = rfn as string;\r\n            fieldRes = undefined;\r\n        }\r\n        let vField:VField;\r\n        let formItem:FormItem;\r\n        if (this.formItems !== undefined) formItem = this.formItems[name];\r\n        //let vField = this.vFieldFromField(field, fieldRes as FieldRes, formItem);\r\n        //let fieldUI:FieldUI = undefined;\r\n        if (typeof formItem === 'function') {\r\n            vField = new VComputeField(this.vForm, field, fieldRes);\r\n        }\r\n        else {\r\n            vField = buildVField(this.vForm, field, formItem as FieldUI, fieldRes);\r\n        }\r\n        if (vField === undefined) {\r\n            vField = new VTuidField(this.vForm, field, formItem as FieldUI, fieldRes);\r\n        }\r\n        return new VFieldBand(label || name, vField);\r\n    }\r\n\r\n    private bandFromArr(arr: ArrFields):VBand {\r\n        let {name, fields} = arr;\r\n        //let row = JSONContent;\r\n        //let bands:VBand[] = [];\r\n        //this.bandsFromFields(bands, fields, res);\r\n        let vArr = new VArr(this.vForm, arr); // name, res && res.label || name, row, bands);\r\n        return new VArrBand(name, vArr);\r\n    }\r\n\r\n    /*\r\n    private vFieldFromUI(fieldUI:FieldUI):VField {\r\n        return;\r\n    }\r\n\r\n    private vArrFromUI(arrBandUI:ArrBandUI):VArr {\r\n        return;\r\n    }\r\n    */\r\n}\r\n","import { VField, VIntField, VDecField, VStringField, VTextField, VDateTimeField, VDateField } from './vField';\r\nimport { Field } from '../../../entities';\r\nimport { FieldRes } from '../vBand';\r\nimport { VForm } from '../vForm';\r\nimport { FieldUI } from '../../formUI';\r\n\r\nexport function buildVField(form:VForm, field: Field, fieldUI: FieldUI, fieldRes:FieldRes): VField {\r\n    let vField:new (form:VForm, field:Field, ui:FieldUI, fieldRes:FieldRes) => VField;\r\n    switch (field.type) {\r\n        default: return;\r\n        case 'tinyint':\r\n        case 'smallint':\r\n        case 'int':\r\n            vField = VIntField;\r\n            break;\r\n        case 'bigint':\r\n            let {_tuid} = field;\r\n            if (_tuid !== undefined) return;\r\n            vField = VIntField;\r\n            break;\r\n        case 'dec':\r\n            vField = VDecField;\r\n            break;\r\n        case 'char':\r\n            vField = VStringField;\r\n            break;\r\n        case 'text':\r\n            vField = VTextField;\r\n            break;\r\n        case 'datetime':\r\n            vField = VDateTimeField;\r\n            break;\r\n        case 'date':\r\n            vField = VDateField;\r\n            break;\r\n    }\r\n    return new vField(form, field, fieldUI, fieldRes);\r\n}\r\n\r\n","import * as React from 'react';\r\nimport * as _ from 'lodash';\r\nimport { observer } from \"mobx-react\";\r\nimport { VBand } from './vBand';\r\nimport { BandsBuilder } from './bandsBuilder';\r\nimport { Field, ArrFields } from '../../entities';\r\nimport { computed, observable, IObservableObject, IObservableValue } from 'mobx';\r\nimport { VArr } from './vArr';\r\nimport { FormUI, FormUIBase, FormItems } from '../formUI';\r\nimport { VField } from './vField';\r\nimport { VSubmit } from './vSubmit';\r\nimport { IObservableArray } from 'mobx';\r\nimport { FA } from 'tonva-react-form';\r\n\r\nexport type FieldCall = (form:VForm, field:Field, values:any) => Promise<any>;\r\nexport interface FieldInput {\r\n    select: FieldCall;\r\n    content: React.StatelessComponent<any>;\r\n    placeHolder: string;\r\n}\r\nexport interface FieldInputs {\r\n    [fieldOrArr:string]: FieldInput | {[field:string]: FieldInput};\r\n}\r\nexport enum FormMode {new, edit, readonly}\r\n\r\nexport interface FormOptions {\r\n    fields: Field[];\r\n    arrs?: ArrFields[];\r\n    ui: FormUIBase;\r\n    res: any;\r\n    inputs: FieldInputs;\r\n    submitCaption: string;\r\n    arrNewCaption: string;\r\n    arrEditCaption: string;\r\n    arrTitleNewButton: JSX.Element;\r\n    none: string;\r\n    mode: FormMode;\r\n}\r\n\r\nexport class VForm {\r\n    protected fields: Field[];\r\n    protected arrs: ArrFields[];\r\n    protected bands: VBand[];\r\n    protected bandColl: {[key:string]: VBand};\r\n    protected onSubmit: ()=>Promise<void>;\r\n\r\n    constructor(options: FormOptions, onSubmit: ()=>Promise<void>) {\r\n        let {fields, arrs, ui, res, inputs, none, submitCaption, arrNewCaption, arrEditCaption, arrTitleNewButton, mode} = options;\r\n        this.fields = fields;\r\n        this.arrs = arrs;\r\n        this.ui = ui;\r\n        if (this.ui !== undefined) this.formItems = this.ui.items; //.compute = this.ui.compute;\r\n        this.res = res;\r\n        this.inputs = inputs;\r\n        this.none = none;\r\n        this.submitCaption = submitCaption;\r\n        this.arrNewCaption = arrNewCaption;\r\n        this.arrEditCaption = arrEditCaption;\r\n        this.arrTitleNewButton = arrTitleNewButton || <small><FA name=\"plus\" /> 新增</small>;\r\n        if (onSubmit === undefined) this.mode = FormMode.readonly;\r\n        else this.mode = mode;\r\n        this.buildFormValues();\r\n        this.buildBands(options, onSubmit);\r\n        this.onSubmit = onSubmit;\r\n    }\r\n\r\n    ui: FormUI;\r\n    res: any;\r\n    values: any;\r\n    errors: any;\r\n    formItems: FormItems;\r\n    mode: FormMode;\r\n    vFields: {[name:string]:VField} = {};\r\n    vArrs: {[name:string]: VArr} = {};\r\n    vSubmit: VSubmit;\r\n    inputs: FieldInputs;\r\n    none: string;\r\n    submitCaption: string;\r\n    arrNewCaption: string;\r\n    arrEditCaption: string;\r\n    arrTitleNewButton: JSX.Element;\r\n\r\n    private buildBands(options: FormOptions, onSubmit: (values:any)=>Promise<void>) {\r\n        this.bandColl = {};\r\n        let bandsBuilder = new BandsBuilder(this, options, onSubmit);\r\n        this.bands = bandsBuilder.build();\r\n        for (let band of this.bands) {\r\n            this.bandColl[band.key] = band;\r\n            let vFields = band.getVFields();\r\n            if (vFields !== undefined) for (let f of vFields) this.vFields[f.name] = f;\r\n            let vArr = band.getVArr();\r\n            if (vArr !== undefined) this.vArrs[vArr.name] = vArr;\r\n            let vSubmit = band.getVSubmit();\r\n            if (vSubmit !== undefined) this.vSubmit = vSubmit;\r\n        }\r\n    }\r\n\r\n    private onFormSubmit = (event:React.FormEvent<any>) => {\r\n        event.preventDefault();\r\n        return false;\r\n    }\r\n\r\n    protected view = observer(({className}:{className:string}) => {\r\n        return <form className={className} onSubmit={this.onFormSubmit}>\r\n            {this.bands.map(v => v.render())}\r\n        </form>;\r\n    });\r\n\r\n    getBand(name:string) {\r\n        return this.bandColl[name];\r\n    }\r\n\r\n    computeFields() {\r\n        if (this.formItems === undefined) return;\r\n        let values = this.values;\r\n        for (let i in this.formItems) {\r\n            let item = this.formItems[i];\r\n            if (typeof item !== 'function') continue;\r\n            values[i] = item.call(this, values);\r\n        }\r\n    }\r\n\r\n    async submit() {\r\n        if (this.onSubmit === undefined) return;\r\n        await this.onSubmit();\r\n    }\r\n    \r\n    getValues() {\r\n        let ret:any = {};\r\n        let values = this.values;\r\n        for (let f of this.fields) {\r\n            let {name} = f;\r\n            let v = values[name]\r\n            ret[name] =  v !== null && typeof v === 'object' ? v.id : v;\r\n        }\r\n        if (this.arrs !== undefined) {\r\n            for (let arr of this.arrs) {\r\n                let {name, fields, id, order} = arr;\r\n                let list = ret[name] = [];\r\n                let rows = this.vArrs[name].list;\r\n                for (let row of rows) {\r\n                    let item = {} as any;\r\n                    if (id !== undefined) item[id] = row[id];\r\n                    if (order !== undefined) item[order] = row[order];\r\n                    for (let f of fields) {\r\n                        let {name:fn} = f;\r\n                        let v = row[fn]\r\n                        item[fn] =  v !== null && typeof v === 'object' ? v.id : v;\r\n                    }\r\n                    list.push(item);\r\n                }\r\n            }\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    get valueBoxs() {\r\n        let ret:any = {};\r\n        let values = this.values;\r\n        for (let f of this.fields) {\r\n            let {name, _tuid} = f;\r\n            let v = values[name]\r\n            ret[name] =  _tuid === undefined || typeof v === 'object' ? v : _tuid.boxId(v);\r\n        }\r\n        if (this.arrs === undefined) return ret;\r\n        for (let arr of this.arrs) {\r\n            let {name, fields, id, order} = arr;\r\n            let list = ret[name] = this.vArrs[name].list.slice();\r\n            for (let row of list) {\r\n                for (let f of fields) {\r\n                    let {name:fn, _tuid} = f;\r\n                    let v = row[fn]\r\n                    row[fn] =  _tuid === undefined || typeof v === 'object' ? v : _tuid.boxId(v);\r\n                }\r\n            }\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    setValues(initValues:any) {\r\n        if (initValues === undefined) {\r\n            this.reset();\r\n            return;\r\n        }\r\n        let values = this.values;\r\n        let errors = this.errors;\r\n        for (let f of this.fields) {\r\n            let fn = f.name;\r\n            errors[fn] = undefined;\r\n            let v =  initValues[fn];\r\n            values[fn] = v;\r\n        }\r\n        // 还要设置arrs的values\r\n        for (let i in this.vArrs) {\r\n            let list = initValues[i];\r\n            if (list === undefined) continue;\r\n            let arrList = values[i] as IObservableArray<any>;\r\n            arrList.clear();\r\n            arrList.push(...list);\r\n        }\r\n    }\r\n\r\n    @computed get isOk():boolean {\r\n        for (let i in this.vFields) {\r\n            if (this.vFields[i].isOk === false) return false;\r\n        }\r\n        return true;\r\n    }\r\n    reset() {\r\n        let values = this.values;\r\n        let errors = this.errors;\r\n        for (let f of this.fields) {\r\n            let fn = f.name;\r\n            //if (this.compute !== undefined && this.compute[fn] !== undefined) continue;\r\n            values[fn] = null;\r\n            errors[fn] = undefined;\r\n        }\r\n        for (let i in this.vFields) {\r\n            let ctrl = this.vFields[i];\r\n            let cn = ctrl.name;\r\n            if (cn === undefined) continue;\r\n            //if (this.compute !== undefined && this.compute[cn] !== undefined) continue;\r\n            ctrl.setValue(null);\r\n        }\r\n        for (let i in this.vArrs) {\r\n            let vArr = this.vArrs[i];\r\n            vArr.reset();\r\n        }\r\n    }\r\n\r\n    getValue(fieldName: string) {\r\n        return this.values[fieldName];\r\n    }\r\n    setValue(fieldName: string, value: any) { this.values[fieldName] = value }\r\n\r\n    setError(fieldName:string, error:string) {this.errors[fieldName] = error}\r\n\r\n    private buildFieldValues(fields: Field[]):any {\r\n        let v: {[p:string]: any} = {\r\n            valueFromFieldName: function(propName:string) {\r\n                return this[propName];\r\n            }\r\n        };\r\n        for (let f of fields) {\r\n            let fn = f.name;\r\n            v[fn] = null;\r\n        }\r\n        return v;\r\n    }\r\n    private buildObservableValues():IObservableObject {\r\n        let v: {[p:string]: any} = this.buildFieldValues(this.fields);\r\n        if (this.arrs !== undefined) {\r\n            for (let arr of this.arrs) {\r\n                v[arr.name] = observable.array([], {deep:true});\r\n            }\r\n        }\r\n        let ret = observable(v);\r\n        return ret;\r\n    }\r\n    private buildFormValues() {\r\n        this.values = this.buildObservableValues();\r\n        this.errors = observable(this.buildFieldValues(this.fields));\r\n    }\r\n\r\n    render(className:string = \"py-3\"):JSX.Element {\r\n        return <this.view className={className} />\r\n    }\r\n}\r\n","export * from './vForm';\r\n","import {bridgeCenterApi, isBridged} from './appBridge';\r\nimport {FetchError} from '../fetchError';\r\nimport {HttpChannelUI} from './httpChannelUI';\r\nimport {nav} from '../ui/nav';\r\nimport { isDevelopment } from './host';\r\n\r\nexport async function httpGet(url:string, params?:any):Promise<any> {\r\n    let channel = new HttpChannel(false, url, undefined, undefined);\r\n    let ret = await channel.get('', params);\r\n    return ret;\r\n}\r\n\r\nexport async function httpPost(url:string, params?:any):Promise<any> {\r\n    let channel = new HttpChannel(false, url, undefined, undefined);\r\n    let ret = await channel.post('', params);\r\n    return ret;\r\n}\r\n\r\nexport class HttpChannel {\r\n    private isCenter: boolean;\r\n    private hostUrl: string;\r\n    private apiToken: string;\r\n    private ui?: HttpChannelUI;\r\n    private timeout: number;\r\n\r\n    constructor(isCenter: boolean, hostUrl: string, apiToken:string, ui?: HttpChannelUI) {\r\n        this.isCenter = isCenter;\r\n        this.hostUrl = hostUrl;\r\n        this.apiToken = apiToken;\r\n        this.ui = ui;\r\n        this.timeout = isDevelopment === true? 500000:5000;\r\n    }\r\n\r\n    private startWait = () => {\r\n        if (this.ui !== undefined) this.ui.startWait();\r\n    }\r\n\r\n    private endWait = (url?:string, reject?:(reason?:any)=>void) => {\r\n        if (this.ui !== undefined) this.ui.endWait();\r\n        if (reject !== undefined) reject('访问webapi超时 ' + url);\r\n    }\r\n\r\n    private showError = async (error:FetchError) => {\r\n        if (this.ui !== undefined) await this.ui.showError(error);\r\n    }\r\n\r\n    used() {\r\n        this.post('', {});\r\n    }\r\n\r\n    async get(url: string, params: any = undefined): Promise<any> {\r\n        if (params) {\r\n            let keys = Object.keys(params);\r\n            if (keys.length > 0) {\r\n                let c = '?';\r\n                for (let k of keys) {\r\n                    let v = params[k];\r\n                    if (v === undefined) continue;\r\n                    url += c + k + '=' + params[k];\r\n                    c = '&';\r\n                }\r\n            }\r\n        }\r\n        let options = this.buildOptions();\r\n        options.method = 'GET';\r\n        return await this.innerFetch(url, options);\r\n    }\r\n\r\n    async post(url: string, params: any): Promise<any> {\r\n        let options = this.buildOptions();\r\n        options.method = 'POST';\r\n        options.body = JSON.stringify(params);\r\n        return await this.innerFetch(url, options);\r\n    }\r\n\r\n    async put(url: string, params: any): Promise<any> {\r\n        let options = this.buildOptions();\r\n        options.method = 'PUT';\r\n        options.body = JSON.stringify(params);\r\n        return await this.innerFetch(url, options);\r\n    }\r\n\r\n    async delete(url: string, params: any): Promise<any> {\r\n        let options = this.buildOptions();\r\n        options.method = 'DELETE';\r\n        options.body = JSON.stringify(params);\r\n        return await this.innerFetch(url, options);\r\n    }\r\n    async fetch(url: string, options: any, resolve:(value?:any)=>any, reject:(reason?:any)=>void):Promise<void> {\r\n        let that = this;\r\n        this.startWait();\r\n        let path = url;\r\n        function buildError(err: string) {\r\n            return {\r\n                channel: that,\r\n                url: path,\r\n                options: options,\r\n                resolve: resolve,\r\n                reject: reject,\r\n                error: err,\r\n            }\r\n        }\r\n        try {\r\n            console.log('%s %s', options.method, path);\r\n            let timeOutHandler = setTimeout(() => that.endWait(url, reject), this.timeout);\r\n            let res = await fetch(encodeURI(path), options);\r\n            if (res.ok === false) {\r\n                clearTimeout(timeOutHandler);\r\n                that.endWait();\r\n                console.log('call error %s', res.statusText);\r\n                throw res.statusText;\r\n            }\r\n            let ct = res.headers.get('content-type');\r\n            if (ct && ct.indexOf('json')>=0) {\r\n                return res.json().then(async retJson => {\r\n                    clearTimeout(timeOutHandler);\r\n                    that.endWait();\r\n                    if (retJson.ok === true) {\r\n                        return resolve(retJson.res);\r\n                    }\r\n                    if (retJson.error === undefined) {\r\n                        await that.showError(buildError('not valid tonva json'));\r\n                    }\r\n                    else {\r\n                        await that.showError(buildError(retJson.error));\r\n                        reject(retJson.error);\r\n                    }\r\n                    //throw retJson.error;\r\n                }).catch(async error => {\r\n                    await that.showError(buildError(error.message));\r\n                });\r\n            }\r\n            else {\r\n                let text = await res.text();\r\n                clearTimeout(timeOutHandler);\r\n                that.endWait();\r\n                resolve(text);\r\n            }\r\n        }\r\n        catch(error) {\r\n            if (typeof error === 'string') {\r\n                if (error.toLowerCase().startsWith('unauthorized') === true) {\r\n                    nav.logout();\r\n                    return;\r\n                }\r\n            }\r\n            await this.showError(buildError(error.message));\r\n        };\r\n    }\r\n\r\n    private async innerFetch(url: string, options: any): Promise<any> {\r\n        let u = this.hostUrl + url;\r\n        if (this.isCenter === true && this.apiToken === undefined && isBridged())\r\n            return await bridgeCenterApi(u, options.method, options.body);\r\n        return await new Promise<any>(async (resolve, reject) => {\r\n            await this.fetch(u, options, resolve, reject);\r\n        });\r\n    }\r\n\r\n    async callFetch(url:string, method:string, body:any):Promise<any> {\r\n        let options = this.buildOptions();\r\n        options.method = method;\r\n        options.body = body;\r\n        return await new Promise<any>(async (resolve, reject) => {\r\n            await this.fetch(url, options, resolve, reject);\r\n        });\r\n    }\r\n\r\n    private buildOptions(): any {\r\n        let {language, culture} = nav;\r\n        let headers = new Headers();\r\n        //headers.append('Access-Control-Allow-Origin', '*');\r\n        headers.append('Content-Type', 'application/json;charset=UTF-8');\r\n        let lang = language;\r\n        if (culture) lang += '-' + culture;\r\n        headers.append('Accept-Language', lang);\r\n        if (this.apiToken) { \r\n            headers.append('Authorization', this.apiToken); \r\n        }\r\n        let options = {\r\n            headers: headers,\r\n            // cache: 'no-cache',\r\n        };\r\n        return options;\r\n    }\r\n}\r\n","import _ from 'lodash';\r\n\r\nexport interface KeyValueRes {\r\n    [key:string]: any;\r\n}\r\n\r\nexport interface Res<T extends KeyValueRes> {\r\n    [lang:string]: T | {[district:string]: T};\r\n}\r\n\r\nexport const resOptions:{lang:string, district:string} = {\r\n    lang: undefined,\r\n    district: undefined,\r\n}\r\n\r\nexport function setResOptions(lang:string, district:string) {\r\n    resOptions.lang = lang;\r\n    resOptions.district = district;\r\n}\r\n\r\n(function() {\r\n    let lang: string, district: string;\r\n    let language = navigator.languages && navigator.languages[0] || // Chrome / Firefox\r\n        navigator.language; // ||   // All browsers\r\n    //navigator.userLanguage; // IE <= 10\r\n    if (!language) {\r\n        lang = 'zh';\r\n        district = 'CN';\r\n    }\r\n    else {\r\n        let parts = language.split('-');\r\n        lang = parts[0];\r\n        if (parts.length > 1) district = parts[1];\r\n    }\r\n    setResOptions(lang, district);\r\n}());\r\n\r\nexport function resLang<T extends KeyValueRes>(res:Res<T>):T {\r\n    let {lang, district} = resOptions;\r\n    let ret:T = {} as T;\r\n    if (res === undefined) return ret;\r\n    _.merge(ret, res._);\r\n    let l = res[lang];\r\n    if (l === undefined) return ret;\r\n    _.merge(ret, l._);\r\n    let d = l[district];\r\n    if (d === undefined) return ret;\r\n    _.merge(ret, d);\r\n    let {entity} = ret;\r\n    if (entity !== undefined) {\r\n        for (let i in entity) {\r\n            entity[i.toLowerCase()] = entity[i];\r\n        }\r\n    }\r\n    return ret;\r\n}\r\n","export * from './CApp';\r\nexport * from './startApp';\r\nexport * from './uq';\r\nexport * from './action';\r\nexport * from './tuid';\r\nexport * from './sheet';\r\nexport * from './query';\r\nexport * from './map';\r\nexport * from './history';\r\nexport * from './pending';\r\nexport * from './form/viewModel';\r\nexport * from './form';\r\nexport * from './formUI';\r\nexport * from './ControllerUq';\r\nexport * from './CVEntity';\r\nexport * from './link';\r\nexport * from './icons';\r\n","import * as React from 'react';\r\nimport {observable, computed} from 'mobx';\r\nimport * as classNames from 'classnames';\r\nimport * as _ from 'lodash';\r\nimport {FormView} from '../formView';\r\nimport {Field} from '../field';\r\nimport {Face} from '../face';\r\nimport {Rule} from '../rule';\r\n\r\nexport abstract class ControlBase {\r\n    protected formView: FormView;\r\n    constructor(formView:FormView) {\r\n        this.formView = formView;\r\n    }\r\n    render():JSX.Element {\r\n        return <div className=\"col-sm-10\">\r\n            {this.renderControl()}\r\n        </div>;\r\n    }\r\n    protected abstract renderControl():JSX.Element;\r\n    @computed get hasError():boolean {return false;}\r\n    @computed get filled():boolean {return false;}\r\n    clear() {}\r\n    clearErrors() {}\r\n    readValues(values:any):any {}\r\n    setError(fieldName:string, error:string) {}\r\n    setInitValues(values: any) {}\r\n    isOk():boolean {this.validate(); return !this.hasError;}\r\n    protected validate() {}\r\n}\r\n\r\nexport abstract class Control extends ControlBase {\r\n    protected field: Field;\r\n    protected face: Face;\r\n    protected props: any;\r\n    protected rules: Rule[];\r\n\r\n    protected element: HTMLElement;\r\n    @observable protected isOK?: boolean;\r\n    @observable protected error: string;\r\n    @observable protected value: any;\r\n\r\n    constructor(formView:FormView, field:Field, face:Face) {\r\n        super(formView);\r\n        this.field = field;\r\n        this.face = face;\r\n        this.init();\r\n        this.setProps();\r\n    }\r\n    protected ref(element: HTMLElement) {\r\n        this.element = element;\r\n    }\r\n    protected init() {\r\n        this.rules = [];\r\n        let r = this.field.rules;\r\n        if (r !== undefined) {\r\n            if (Array.isArray(r) === true) this.rules.push(...(r as Rule[]));\r\n            else this.rules.push(r as Rule);\r\n        }\r\n    };\r\n    protected setProps():any {\r\n        return this.props = {\r\n            ref: this.ref.bind(this),\r\n            name: this.field.name,\r\n        }\r\n    };\r\n    @computed get hasError():boolean {return this.error !== undefined;}\r\n    @computed get filled():boolean {\r\n        let ret = this.value !== undefined && this.value !== this.field.defaultValue;\r\n        return ret;\r\n    }\r\n    clearValue() { this.value = undefined; }\r\n    clear() { this.clearErrors(); this.clearValue(); }\r\n    clearErrors() { this.isOK = undefined; this.error = undefined; }\r\n    readValues(values:any):any {\r\n        values[this.field.name] = this.value;\r\n    }\r\n    setError(fieldName:string, error:string) {}\r\n    setInitValues(values: any) {}\r\n    protected getValueFromElement():any {return this.value;}\r\n    protected validate() {\r\n        try {\r\n            let v = this.getValueFromElement();\r\n            if (this.rules.length > 0) {\r\n                let isOk:boolean;\r\n                for (let rule of this.rules) {\r\n                    console.log('validate: %s', v);\r\n                    let err = rule(v);\r\n                    console.log('validate: %s err: %s', v, err);\r\n                    if (err === true) {\r\n                        this.error = undefined;\r\n                        isOk = true;\r\n                    }\r\n                    else if (err !== undefined) {\r\n                        //console.log('field %s onBlur v=%s rule=%s err=%s', \r\n                        //    this.field.name, JSON.stringify(v), rule, err);\r\n                        this.error = err;\r\n                        this.isOK = false;\r\n                        return;\r\n                    }\r\n                }\r\n                this.isOK = isOk;\r\n            }\r\n            this.value = v;\r\n        }\r\n        catch (e) {\r\n            this.error = e.message;\r\n        }\r\n    }\r\n    render():JSX.Element {\r\n        let n;\r\n        if (this.face !== undefined) {\r\n            let {notes} = this.face;\r\n            if (notes !== undefined) n = <small className=\"text-muted\">{notes}</small>;\r\n        }\r\n        return <div className=\"col-sm-10\">\r\n            {this.renderControl()}\r\n            {n}\r\n        </div>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {observable} from 'mobx';\r\nimport * as classNames from 'classnames';\r\nimport * as _ from 'lodash';\r\nimport {FormView} from '../formView';\r\nimport {Field} from '../field';\r\nimport {Face} from '../face';\r\nimport {ControlBase} from './control';\r\n\r\nexport class ButtonsControl extends ControlBase {\r\n    constructor(props) {\r\n        super(props);\r\n        this.otherClick = this.otherClick.bind(this);\r\n    }\r\n    private otherClick() {\r\n        let onOther = this.formView.props.onOther;\r\n        if (onOther === undefined) return;\r\n        let values = this.formView.readValues();\r\n        onOther(values);\r\n    }\r\n    renderControl():JSX.Element {\r\n        console.log('buttons.renderControl');\r\n        let nothing = this.formView.nothing;\r\n        let hasError = this.formView.hasError;\r\n        let props = this.formView.props;\r\n        console.log('buttons.renderControl nothing:%s hasError:%s', nothing, hasError);\r\n        let {submitButton, otherButton, onOther} = props;\r\n        let btnOther;\r\n        if (otherButton !== undefined) {\r\n            btnOther = <button className=\"btn btn-outline-info ml-auto\" onClick={this.otherClick}>\r\n                {otherButton}\r\n            </button>\r\n        }\r\n        return <div className=\"d-flex justify-content-start\">\r\n            <button\r\n                className=\"btn btn-primary\"\r\n                type=\"submit\" \r\n                disabled={nothing || hasError}>\r\n                {submitButton || '提交'}\r\n            </button>\r\n            {btnOther}\r\n        </div>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {observable, computed} from 'mobx';\r\nimport * as classNames from 'classnames';\r\nimport * as _ from 'lodash';\r\nimport {FormView} from '../formView';\r\nimport {Field} from '../field';\r\nimport {Face, Placeholder} from '../face';\r\nimport {Control} from './control';\r\n\r\nconst TxtRequired = '必须填入要求内容';\r\n\r\nexport abstract class CharsControl extends Control {\r\n    protected init() {\r\n        super.init();\r\n        if (this.field.required === true) {\r\n            this.rules.push((v) => {\r\n                if (v===null || v===undefined || (v as string).trim().length === 0) return TxtRequired;\r\n                return true;\r\n            });\r\n        }\r\n    }\r\n\r\n    protected element: HTMLInputElement;\r\n    protected getValueFromElement():any {return this.parseValue(this.element.value)}\r\n\r\n    protected setProps() {\r\n        super.setProps();\r\n        _.assign(this.props, {\r\n            onBlur: this.onBlur.bind(this),\r\n            onFocus: this.onFocus.bind(this),\r\n            onChange: this.onChange.bind(this),\r\n        });\r\n        let face = this.face as Placeholder;\r\n        if (face !== undefined) {\r\n            _.assign(this.props, {\r\n                placeholder: face.placeholder,\r\n            });\r\n        }\r\n        return this.props;\r\n    };\r\n    protected parseValue(value?:string):any {return value;}\r\n    private onBlur() {\r\n        //console.log('field %s onBlure', this.field.name);\r\n        this.validate();\r\n    }\r\n    private onChange() {\r\n        console.log('onChange');\r\n        this.validate();\r\n    }\r\n    private onFocus() {\r\n        this.clearErrors();\r\n        //this.error = undefined;\r\n        //this.formView.clearErrors();\r\n    }\r\n    protected className() {\r\n        return classNames({\r\n            \"form-control\": true,\r\n            \"has-success\": this.isOK === true,\r\n            \"is-invalid\": this.error !== undefined,\r\n            \"is-valid\": this.error === undefined && this.isOK === true,\r\n        });\r\n    }\r\n    protected renderInput():JSX.Element {\r\n        return <input className={this.className()} {...this.props} />;\r\n    }\r\n    protected ref(element: HTMLInputElement) {\r\n        super.ref(element);\r\n        if (element) {\r\n            element.value = this.value === undefined? '':this.value;\r\n        }\r\n    }\r\n    protected renderError():JSX.Element {\r\n        //if (this.field.name === 'name') console.log('charsControl renderControl');\r\n        if (this.error === undefined) return null;\r\n        return <div className=\"invalid-feedback\">{this.error}</div>\r\n    }\r\n    clearValue() { super.clearValue(); this.element.value = ''; }\r\n    setError(fieldName:string, error:string) {\r\n        if (this.field.name === fieldName) this.error = error;\r\n    }\r\n    setInitValues(values: any) {\r\n        let v = values[this.field.name];\r\n        if (v === undefined) return;\r\n        //this.element.value = v;\r\n        this.value = v;\r\n    }\r\n    renderControl():JSX.Element {\r\n        return <React.Fragment>\r\n            {this.renderInput()}\r\n            {this.renderError()}\r\n        </React.Fragment>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport * as _ from 'lodash';\r\nimport {CharsControl} from './charsControl';\r\nimport {StringField} from '../field';\r\n\r\nexport class StringControl extends CharsControl {\r\n    protected field: StringField;\r\n    protected setProps() {\r\n        let p = super.setProps();\r\n        _.assign(p, {\r\n            type: 'text',\r\n            maxLength: this.field.maxLength,\r\n        });\r\n        return p;\r\n    };\r\n    protected parseValue(value?:string):any {\r\n        if (value === undefined) return undefined;\r\n        if (value.trim().length === 0) return undefined;\r\n        return value;\r\n    }\r\n}\r\n\r\nexport class PasswordControl extends StringControl {\r\n    protected setProps() {\r\n        let p = super.setProps();\r\n        _.assign(p, {\r\n            type: 'password',\r\n            maxLength: this.field.maxLength,\r\n        });\r\n        return p;\r\n    };\r\n}","import * as React from 'react';\r\nimport * as _ from 'lodash';\r\nimport {IntField, DecField, NumberField} from '../field';\r\nimport {CharsControl} from './charsControl';\r\n\r\nconst ErrInvalidNumber = '无效的数字';\r\nconst ErrMin = '最小值为';\r\nconst ErrMax = '最大值为';\r\n\r\nconst KeyCode_Neg = 45;\r\nconst KeyCode_Dot = 46;\r\n\r\nexport class NumberControl extends CharsControl {\r\n    protected field: IntField | DecField | NumberField;\r\n    protected value: number;\r\n    protected extraChars: number[];\r\n    \r\n    protected init() {\r\n        super.init();\r\n        this.extraChars = [];\r\n        let {min, max} = this.field;\r\n        if (min !== undefined) {\r\n            this.rules.push((v:number) => {if (v === undefined) return; if (v<min) return ErrMin + min; return true;});\r\n            if (min < 0) this.extraChars.push(KeyCode_Neg);\r\n        }\r\n        else {\r\n            this.extraChars.push(KeyCode_Neg);\r\n        }\r\n\r\n        if (max !== undefined) {\r\n            this.rules.push((v:number) => {if (v === undefined) return; if (v>max) return ErrMax + max; return true});\r\n        }\r\n        switch (this.field.type) {\r\n            case 'dec':\r\n            case 'number': this.extraChars.push(KeyCode_Dot); break;\r\n        }\r\n    }\r\n\r\n    protected parseValue(value?:string):any {\r\n        if (value === undefined) return undefined;\r\n        if (value.trim().length === 0) return undefined;\r\n        let n = Number.parseFloat(value);\r\n        if (isNaN(n)) throw new Error(ErrInvalidNumber);\r\n        return n;\r\n    }\r\n\r\n    protected setProps() {\r\n        super.setProps();\r\n        _.assign(this.props, {\r\n            type: 'number',\r\n            step: (this.field as DecField).step,\r\n            onKeyPress: this.onKeyPress.bind(this),\r\n        });\r\n    }\r\n\r\n    onKeyPress(event:KeyboardEvent) {\r\n        let ch = event.charCode;\r\n        if (ch === 8 || ch === 0 || ch === 13 || ch >= 48 && ch <= 57) return;\r\n        if (this.extraChars !== undefined) {\r\n            if (this.extraChars.indexOf(ch) >= 0) {\r\n                switch (ch) {\r\n                    case KeyCode_Dot: this.onKeyDot(); break;\r\n                    case KeyCode_Neg: this.onKeyNeg(); event.preventDefault(); break;\r\n                }\r\n                return;\r\n            }\r\n        }\r\n        event.preventDefault();\r\n    }\r\n\r\n    private onKeyDot() {\r\n        let v = this.element.value;\r\n        let p = v.indexOf('.');\r\n        if (p >= 0) this.element.value = v.replace('.', '');\r\n    }\r\n    private onKeyNeg() {\r\n        let v = this.element.value;\r\n        let p = v.indexOf('-');\r\n        if (p >= 0) v = v.replace('-', '');\r\n        else v = '-'+v;\r\n        this.element.value = v;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {Control, ControlBase} from './control';\r\nimport {FormView} from '../formView';\r\n\r\nexport class UnknownControl extends Control {\r\n    renderControl():JSX.Element {\r\n        return <div className=\"form-control-plaintext\">\r\n            <div className=\"alert alert-primary\" role=\"alert\">\r\n            don't know how to create control<br/>\r\n            field: {JSON.stringify(this.field)} must be object <br/>\r\n            face: {JSON.stringify(this.face)} must be object <br/>\r\n            </div>\r\n        </div>;\r\n    }\r\n}\r\n\r\nexport class EmptyControl extends ControlBase {\r\n    private element:JSX.Element;\r\n    constructor(formView:FormView, element:JSX.Element) {\r\n        super(formView);\r\n        this.element = element;\r\n    }\r\n    renderControl():JSX.Element {\r\n        return <div className=\"form-control-plaintext\">\r\n            {this.element}\r\n        </div>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {observable} from 'mobx';\r\nimport * as classNames from 'classnames';\r\nimport * as _ from 'lodash';\r\nimport {FormView} from '../formView';\r\nimport {Field} from '../field';\r\nimport {Face, IdPickFace} from '../face';\r\nimport {Control} from './control';\r\n\r\nexport class PickIdControl extends Control {\r\n    protected face: IdPickFace;\r\n    @observable private caption: string|JSX.Element;\r\n\r\n    private onClick = async () => {\r\n        let {pick, fromPicked} = this.face;\r\n        let item = await pick(this.face, this.formView.props, this.formView.readValues());\r\n        if (item === undefined) {\r\n            this.value = undefined;\r\n            return;\r\n        }\r\n        if (fromPicked === undefined) {\r\n            this.value = item.id;\r\n            return;\r\n        }\r\n        let {id, caption} = fromPicked(item);\r\n        this.value = id;\r\n        this.caption = caption;\r\n    }\r\n    onPicked = (value: any) => {\r\n        this.value = value.id;\r\n    }\r\n    setInitValues(values: any) {\r\n        let v = values[this.field.name];\r\n        this.value = v;\r\n    }\r\n    private controlContent():string|JSX.Element {\r\n        let {itemFromId, fromPicked, initCaption} = this.face;\r\n        if (this.value === undefined) {\r\n            return initCaption || '请选择Id';\r\n        }\r\n        if (this.caption !== undefined) {\r\n            return this.caption;\r\n        }\r\n        if (itemFromId !== undefined) {\r\n            if (fromPicked !== undefined) {\r\n                let item = itemFromId(this.value);\r\n                if (item) {\r\n                    let ret = fromPicked(item);\r\n                    if (ret !== undefined) return ret.caption;\r\n                }\r\n            }\r\n        }\r\n        return String(this.value);\r\n    }\r\n    /*\r\n    private buildContent():string|JSX.Element {\r\n        let {tuid, input} = this.face;\r\n        if (input === undefined) {\r\n            //return <div>no input on idpick</div>;\r\n            return <div onClick={this.onClick}>{this.controlContent()}</div>;\r\n        }\r\n        return <input.component id={this.value} \r\n            tuid={tuid}\r\n            input={input}\r\n            entitiesUI={this.formView.props.context} \r\n            params={this.formView.readValues()}\r\n            onPicked={this.onPicked} />;\r\n    }*/\r\n    renderControl():JSX.Element {\r\n        let {tuid, input} = this.face;\r\n        if (input === undefined) {\r\n            //return <div>no input on idpick</div>;\r\n            return <div className=\"form-control-plaintext px-2 border text-primary rounded cursor-pointer\"\r\n                onClick={this.onClick}>\r\n                {this.controlContent()}\r\n            </div>;\r\n        }\r\n        return <div className=\"form-control-static \">\r\n            <input.component id={this.value} \r\n                ui={tuid}\r\n                //input={input}\r\n                //entitiesUI={this.formView.props.context} \r\n                //params={this.formView.readValues()}\r\n                //onPicked={this.onPicked}\r\n                />\r\n        </div>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {observable} from 'mobx';\r\nimport * as classNames from 'classnames';\r\nimport * as _ from 'lodash';\r\nimport {FormView} from '../formView';\r\nimport {Field} from '../field';\r\nimport {Face, TuidPickFace} from '../face';\r\nimport {Control} from './control';\r\n\r\nexport class PickTuidControl extends Control {\r\n    protected face: TuidPickFace;\r\n    // protected value: number;\r\n    @observable private caption: string|JSX.Element;\r\n    constructor(formView:FormView, field:Field, face:Face) {\r\n        super(formView, field, face);\r\n        this.onIdChanged = this.onIdChanged.bind(this);\r\n        //this.onClick = this.onClick.bind(this);\r\n    }\r\n    /*\r\n    private async onClick() {\r\n        let {pick, fromPicked} = this.face;\r\n        let item = await pick(this.face, this.formView.props, this.formView.readValues());\r\n        if (item === undefined) {\r\n            this.value = undefined;\r\n            return;\r\n        }\r\n        if (fromPicked === undefined) {\r\n            this.value = item.id;\r\n            return;\r\n        }\r\n        let {id, caption} = fromPicked(item);\r\n        this.value = id;\r\n        this.caption = caption;\r\n    }*/\r\n    onIdChanged(id: any) {\r\n        this.value = id.id;\r\n    }\r\n    setInitValues(values: any) {\r\n        let v = values[this.field.name];\r\n        this.value = v;\r\n    }\r\n    private buildContent():JSX.Element {\r\n        //let {tuid, input} = this.face;\r\n        return <this.face.input.component \r\n            {...this.face}\r\n            id={this.value}\r\n            //ui={this.face.ui}\r\n            //input={input}\r\n            //entitiesUI={this.formView.props.context} \r\n            onFormValues={()=>this.formView.readValues()}\r\n            onIdChanged={this.onIdChanged} />;\r\n    }\r\n    renderControl():JSX.Element {\r\n        return <div className=\"form-control-static \">\r\n            {this.buildContent()}\r\n        </div>;\r\n    }\r\n}\r\n/*\r\n<button className=\"form-control btn btn-outline-info\"\r\ntype=\"button\"\r\nstyle={{textAlign:'left', paddingLeft:'0.75rem'}}\r\nonClick={this.onClick}>\r\n{this.buildContent()}\r\n</button>\r\n*/","import * as React from 'react';\r\nimport {observable} from 'mobx';\r\nimport * as classNames from 'classnames';\r\nimport * as _ from 'lodash';\r\nimport {FormView} from '../formView';\r\nimport {Field} from '../field';\r\nimport {Face, PickFace} from '../face';\r\nimport {Control} from './control';\r\nimport { observer } from 'mobx-react';\r\n\r\nexport class PickControl extends Control {\r\n    protected face: PickFace;\r\n    @observable private caption: string|JSX.Element;\r\n\r\n    private onClick = async () => {\r\n        let {pick, fromPicked} = this.face;\r\n        let item = await pick(this.face, this.formView.props, this.formView.readValues());\r\n        if (item === undefined) {\r\n            this.value = undefined;\r\n            return;\r\n        }\r\n        let {id, caption} = fromPicked(item);\r\n        this.value = id;\r\n        this.caption = caption;\r\n    }\r\n    setInitValues(values: any) {\r\n        let v = values[this.field.name];\r\n        this.value = v;\r\n    }\r\n    /*\r\n    private controlContent():string|JSX.Element {\r\n        let {content: Content} = this.face;\r\n        if (this.value === undefined) {\r\n            return '请选择';\r\n        }\r\n        \r\n        if (this.caption !== undefined) {\r\n            return this.caption;\r\n        }\r\n        return <Content id={this.value} />;\r\n    }*/\r\n    /*\r\n    private buildContent():string|JSX.Element {\r\n        let {tuid, input} = this.face;\r\n        if (input === undefined) {\r\n            //return <div>no input on idpick</div>;\r\n            return <div onClick={this.onClick}>{this.controlContent()}</div>;\r\n        }\r\n        return <input.component id={this.value} \r\n            tuid={tuid}\r\n            input={input}\r\n            entitiesUI={this.formView.props.context} \r\n            params={this.formView.readValues()}\r\n            onPicked={this.onPicked} />;\r\n    }*/\r\n    renderControl():JSX.Element {\r\n        return <this.view />;\r\n        /*\r\n        let {content:Content} = this.face;\r\n        //if (this.value === undefined) {\r\n            //return <div>no input on idpick</div>;\r\n        //}\r\n        //return <div className=\"form-control-static \">\r\n        //    <Content />\r\n        //</div>;\r\n        */\r\n    }\r\n\r\n    private view = observer(() => {\r\n        let content;\r\n        let {content: Content} = this.face;\r\n        if (this.value === undefined || this.value === null) {\r\n            content = '请选择';\r\n        }\r\n        /*\r\n        else if (this.caption !== undefined) {\r\n            content = this.caption;\r\n        }*/\r\n        else {\r\n            content = <Content id={this.value} />;\r\n        } \r\n        return <div\r\n            className=\"form-control-plaintext px-2 border text-primary rounded cursor-pointer bg-light\"\r\n            onClick={this.onClick}>\r\n            {content}\r\n        </div>\r\n    });\r\n}\r\n","export * from './control';\r\nexport * from './buttonsControl';\r\nexport * from './stringControl';\r\nexport * from './numberControl';\r\n\r\nimport {Field} from '../field';\r\nimport {Face} from '../face';\r\nimport {Control, ControlBase} from './control';\r\nimport {ButtonsControl} from './buttonsControl';\r\nimport {CheckControl} from './checkControl';\r\nimport {RadioControl} from './radioControl';\r\nimport {TextAreaControl} from './textAreaControl';\r\nimport {SelectControl} from './selectControl';\r\nimport {UnknownControl, EmptyControl} from './unknownControl';\r\nimport {StringControl, PasswordControl} from './stringControl';\r\nimport {NumberControl} from './numberControl';\r\n\r\nimport {FormView, FormRow, GroupRow, FieldRow, LabelFormRow} from '../formView';\r\nimport { PickIdControl } from './pickIdControl';\r\nimport { PickTuidControl } from './pickTuidControl';\r\nimport { PickControl } from './pickControl';\r\n\r\nexport type CreateControl = (form:FormView, row: FormRow) => ControlBase\r\n\r\nexport const createControl:CreateControl = (form:FormView, row: LabelFormRow):ControlBase => {\r\n    let label = row.label;\r\n    if ((<GroupRow>row).group !== undefined)\r\n        return createGroupControl(form, label, row as GroupRow);\r\n    if ((<FieldRow>row).field !== undefined)\r\n        return createFieldControl(form, label, row as FieldRow);\r\n    return new EmptyControl(form, row.help);\r\n}\r\n\r\nconst controls:{[type:string]: new (formView:FormView, field:Field, face:Face) => Control} = {\r\n    \"string\": StringControl,\r\n    \"password\": PasswordControl,\r\n    \"number\": NumberControl,\r\n    \"checkbox\": CheckControl,\r\n    \"radiobox\": RadioControl,\r\n    \"select\": SelectControl,\r\n    \"pick-id\": PickIdControl,\r\n    \"pick-tuid\": PickTuidControl,\r\n    \"textarea\": TextAreaControl,\r\n    \"pick\": PickControl,\r\n};\r\nconst defaultFaces:{[type:string]: Face} = {\r\n    \"string\": {type:'string'},\r\n    \"number\": {type:'number'},\r\n    \"int\": {type:'number'},\r\n    \"dec\": {type:'number'},\r\n    \"bool\": {type:'checkbox'},\r\n}\r\nfunction createFieldControl(form:FormView, label:string, fieldRow: FieldRow):Control {\r\n    let {field, face} = fieldRow;\r\n    switch (typeof field) {\r\n        case 'string':\r\n            field = {\r\n                name: (field as any) as string,\r\n                type: 'string',\r\n            }\r\n            break;\r\n        case 'object':\r\n            break;\r\n        default:\r\n            return new UnknownControl(form, field, face);\r\n    }\r\n    let fieldType = field.type || 'string';\r\n    if (face === undefined) {\r\n        face = defaultFaces[fieldType];\r\n        if (face === undefined) return new UnknownControl(form, field, face);\r\n    }\r\n    else if (face.type === undefined) {\r\n        let f = defaultFaces[fieldType];\r\n        face.type = f===undefined? 'string' : f.type;\r\n    }\r\n    let control = controls[face.type || fieldType] || UnknownControl;\r\n    return new control(form, field, face);\r\n}\r\n\r\nfunction createGroupControl(form:FormView, label:string, groupRow: GroupRow):Control {\r\n    return new UnknownControl(form, groupRow as any, undefined);\r\n}\r\n","import * as React from 'react';\r\nimport {observable} from 'mobx';\r\nimport * as classNames from 'classnames';\r\nimport * as _ from 'lodash';\r\nimport {FormView} from '../formView';\r\nimport {Field, BoolField} from '../field';\r\nimport {Face, CheckBoxFace} from '../face';\r\nimport {Control} from './control';\r\n\r\nexport class CheckControl extends Control {    \r\n    protected element: HTMLInputElement;\r\n    protected field: BoolField;\r\n    protected face: CheckBoxFace;\r\n    private trueValue: any;\r\n    private falseValue: any;\r\n\r\n    protected init() {\r\n        super.init();\r\n        let {trueValue, falseValue} = this.field;\r\n        if (trueValue === undefined) this.trueValue = 1;\r\n        if (falseValue === undefined) this.falseValue = 0;\r\n    }\r\n\r\n    setProps() {\r\n        super.setProps();\r\n        _.assign(this.props, {\r\n            onChange: this.onChange.bind(this),\r\n        });\r\n    }\r\n\r\n    clearValue() {\r\n        this.element.checked = this.field.defaultValue === this.trueValue;\r\n        this.value = this.getValueFromElement();\r\n    }\r\n\r\n    setInitValues(values: any) {\r\n        let v = values[this.field.name];\r\n        if (v === undefined) {\r\n            v = this.field.defaultValue;\r\n        }\r\n        if (v !== undefined) {\r\n            //this.element.checked = v === this.trueValue;\r\n            //this.value = this.getValueFromElement();\r\n        }\r\n    }\r\n\r\n    protected getValueFromElement():any { return this.element.checked? this.trueValue:this.falseValue; }\r\n\r\n    private onChange() {\r\n        this.value = this.getValueFromElement();\r\n    }\r\n\r\n    renderControl():JSX.Element {\r\n        return <div className=\"form-control-static\">\r\n            <label className=\"form-control\">\r\n                <label className=\"custom-control custom-checkbox mb-0\">\r\n                    <input type='checkbox'\r\n                        name={this.field.name}\r\n                        ref={this.props.ref}\r\n                        onChange={this.props.onChange}\r\n                        className=\"custom-control-input\" />\r\n                    <span className=\"custom-control-indicator\" />\r\n                    <span className=\"custom-control-description\">{this.face.label}</span>\r\n                </label>\r\n            </label>\r\n        </div>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {observable} from 'mobx';\r\nimport * as classNames from 'classnames';\r\nimport * as _ from 'lodash';\r\nimport {FormView} from '../formView';\r\nimport {Field} from '../field';\r\nimport {Face, RadioFace} from '../face';\r\nimport {Control} from './control';\r\n\r\nexport class RadioControl extends Control {\r\n    protected face: RadioFace;\r\n    renderControl():JSX.Element {\r\n        return <div className=\"form-control-static\">\r\n            <div className=\"form-control\">\r\n            {\r\n                this.face.list.map((item, index) => {\r\n                    let t, v;\r\n                    if (typeof item !== 'object') t = v = item;\r\n                    else {\r\n                        t = item.text;\r\n                        v = item.value;\r\n                    }\r\n                    return <label key={index} className=\"custom-control custom-radio w-25\">\r\n                        <input type='radio'\r\n                            name={this.field.name} \r\n                            className=\"custom-control-input\" />\r\n                        <span className=\"custom-control-indicator\"></span>\r\n                        <span className=\"custom-control-description\">{t}</span>\r\n                    </label>;\r\n                })\r\n            }\r\n            </div>\r\n        </div>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {observable} from 'mobx';\r\nimport * as classNames from 'classnames';\r\nimport * as _ from 'lodash';\r\nimport {FormView} from '../formView';\r\nimport {Field} from '../field';\r\nimport {Face, SelectFace} from '../face';\r\nimport {Control} from './control';\r\n\r\nexport class SelectControl extends Control {\r\n    constructor (formView:FormView, field:Field, face:Face) {\r\n        super(formView, field, face);\r\n        this.ref = this.ref.bind(this);\r\n    }\r\n    protected face: SelectFace;\r\n    protected element: HTMLSelectElement;\r\n    protected getValueFromElement():any {\r\n        let {selectedIndex, selectedOptions} = this.element;\r\n        let v:any = selectedOptions[0].value;\r\n        switch (this.field.type) {\r\n            case 'number': v = Number(v); break;\r\n            case 'date': v = new Date(v); break;\r\n            case 'bool': \r\n                if (typeof v === 'string') {\r\n                    v = ((v as string).toLowerCase() === 'true');\r\n                }\r\n                break;\r\n        }\r\n        return v;\r\n    }\r\n    renderControl():JSX.Element {\r\n        let {list} = this.face;\r\n        let def = this.face.default;\r\n        let options: any[] = [];\r\n        if (def === undefined)\r\n            options.push(<option key={-1} value={undefined}>请选择</option>);\r\n        options.push(...list.map((item, index) => {\r\n            let t, v;\r\n            if (typeof item !== 'object') t = v = item;\r\n            else {\r\n                t = item.text;\r\n                v = item.value;\r\n            }\r\n            return <option key={index} value={v}>{t}</option>;\r\n        }));\r\n        return <div className=\"form-control-static\">\r\n            <select name={this.field.name} className=\"form-control\" ref={this.ref}>\r\n                {options}\r\n            </select>\r\n        </div>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport * as _ from 'lodash';\r\nimport {CharsControl} from './charsControl';\r\nimport {StringField} from '../field';\r\nimport {TextAreaFace} from '../face';\r\n\r\nexport class TextAreaControl extends CharsControl {\r\n    protected field: StringField;\r\n    protected face: TextAreaFace;\r\n    private el: HTMLTextAreaElement;\r\n    protected setProps() {\r\n        let p = super.setProps();\r\n        let {maxLength} = this.field;\r\n        let {rows} = this.face;\r\n        _.assign(p, {\r\n            maxLength: maxLength,\r\n            rows: rows,\r\n        });\r\n        return p;\r\n    };\r\n    protected renderInput():JSX.Element {\r\n        return <textarea ref={t=>{this.el = t;if (t!==undefined) t.value=''}} className={this.className()} {...this.props} />;\r\n    }\r\n}\r\n","import { Entities, Field, ArrFields, FieldMap } from './entities';\r\nimport { TuidMain, Tuid } from './tuid';\r\n\r\nconst tab = '\\t';\r\nconst ln = '\\n';\r\n\r\nexport abstract class Entity {\r\n    protected entities: Entities;\r\n    protected schema: any;\r\n    private jName: string;\r\n    sys?: boolean;\r\n    readonly name: string;\r\n    readonly typeId: number;\r\n    abstract get typeName(): string;\r\n    get sName():string {return this.jName || this.name}\r\n    fields: Field[];\r\n    arrFields: ArrFields[];\r\n    returns: ArrFields[];\r\n\r\n    constructor(entities:Entities, name:string, typeId:number) {\r\n        this.entities = entities;\r\n        this.name = name;\r\n        this.typeId = typeId;\r\n        this.sys = this.name.indexOf('$') >= 0;\r\n    }\r\n\r\n    public face: any;           // 对应字段的label, placeHolder等等的中文，或者语言的翻译\r\n\r\n    protected get tvApi() {return this.entities.uqApi;}\r\n    getApiFrom() {return this.entities.uqApi;}\r\n\r\n    private fieldMaps: {[arr:string]: FieldMap} = {};\r\n    fieldMap(arr?:string): FieldMap {\r\n        if (arr === undefined) arr = '$';\r\n        let ret = this.fieldMaps[arr];\r\n        if (ret === undefined) {\r\n            let fields:Field[];\r\n            if (arr === '$') fields = this.fields;\r\n            else if (this.arrFields !== undefined) {\r\n                let arrFields = this.arrFields.find(v => v.name === arr);\r\n                if (arrFields !== undefined) fields = arrFields.fields;\r\n            }\r\n            else if (this.returns !== undefined) {\r\n                let arrFields = this.returns.find(v => v.name === arr);\r\n                if (arrFields !== undefined) fields = arrFields.fields;\r\n            }\r\n            if (fields === undefined) return {};\r\n            ret = {};\r\n            for (let f of fields) ret[f.name] = f;\r\n            this.fieldMaps[arr] = ret;\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    public async loadSchema():Promise<void> {\r\n        if (this.schema !== undefined) return;\r\n        let schema = await this.entities.uqApi.schema(this.name);\r\n        this.setSchema(schema);\r\n        this.buildFieldsTuid();\r\n    }\r\n\r\n    public setSchema(schema:any) {\r\n        if (schema === undefined) return;\r\n        if (this.schema !== undefined) return;\r\n        this.schema = schema;\r\n        let {name} = schema;\r\n        if (name !== this.name) this.jName = name;\r\n        this.buildFieldsTuid();\r\n    }\r\n\r\n    public buildFieldsTuid() {\r\n        let {fields, arrs, returns} = this.schema;\r\n        this.entities.buildFieldTuid(this.fields = fields);\r\n        this.entities.buildArrFieldsTuid(this.arrFields = arrs, fields);\r\n        this.entities.buildArrFieldsTuid(this.returns = returns, fields);\r\n        //this.newMain = this.buildCreater(fields);\r\n        //this.newArr = this.buildArrCreater(arrs);\r\n        //this.newRet = this.buildArrCreater(returns);\r\n    }\r\n\r\n    schemaStringify():string {\r\n        return JSON.stringify(this.schema, (key:string, value:any) => {\r\n            if (key === '_tuid') return undefined;\r\n            return value;\r\n        }, 4);\r\n    }\r\n\r\n    tuidFromField(field:Field):Tuid {\r\n        let {_tuid, tuid} = field;\r\n        if (tuid === undefined) return;\r\n        if (_tuid !== undefined) return _tuid;\r\n        return field._tuid = this.entities.getTuid(tuid, undefined);\r\n    }\r\n\r\n    tuidFromName(fieldName:string, arrName?:string):Tuid {\r\n        if (this.schema === undefined) return;\r\n        let {fields, arrs} = this.schema;\r\n        let entities = this.entities;\r\n        function getTuid(fn:string, fieldArr:Field[]) {\r\n            if (fieldArr === undefined) return;\r\n            let f = fieldArr.find(v => v.name === fn);\r\n            if (f === undefined) return;\r\n            return entities.getTuid(f.tuid, undefined);\r\n        }\r\n        let fn = fieldName.toLowerCase();\r\n        if (arrName === undefined) return getTuid(fn, fields);\r\n        if (arrs === undefined) return;\r\n        let an = arrName.toLowerCase();\r\n        let arr = (arrs as ArrFields[]).find(v => v.name === an);\r\n        if (arr === undefined) return;\r\n        return getTuid(fn, arr.fields);\r\n    }\r\n\r\n    protected buildParams(params:any):any {\r\n        let result = {};\r\n        let fields = this.fields;\r\n        if (fields !== undefined) this.buildFieldsParams(result, fields, params);\r\n        let arrs = this.arrFields;\r\n        if (arrs !== undefined) {\r\n            for (let arr of arrs) {\r\n                let {name, fields} = arr;\r\n                let paramsArr:any[] = params[name];\r\n                if (paramsArr === undefined) continue;\r\n                let arrResult = [];\r\n                result[name] = arrResult;\r\n                for (let pa of params) {\r\n                    let rowResult = {};\r\n                    this.buildFieldsParams(rowResult, fields, pa);\r\n                    arrResult.push(rowResult);\r\n                }\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n\r\n    private buildFieldsParams(result:any, fields:Field[], params:any) {\r\n        for (let field of fields) {\r\n            let {name} = field;\r\n            let d = params[name];\r\n            let val:any;\r\n            switch (typeof d) {\r\n                default: val = d; break;\r\n                case 'object':\r\n                    let tuid = field._tuid;\r\n                    if (tuid === undefined) val = d.id;\r\n                    else val = tuid.getIdFromObj(d);\r\n                    break;\r\n            }\r\n            result[name] = val;\r\n        }\r\n    }\r\n\r\n    pack(data:any):string {\r\n        let ret:string[] = [];\r\n        let fields = this.fields;\r\n        if (fields !== undefined) this.packRow(ret, fields, data);\r\n        let arrs = this.arrFields; //schema['arrs'];\r\n        if (arrs !== undefined) {\r\n            for (let arr of arrs) {\r\n                this.packArr(ret, arr.fields, data[arr.name]);\r\n            }\r\n        }\r\n        return ret.join('');\r\n    }\r\n\r\n    private escape(row:any, field:Field):any {\r\n        let d = row[field.name];\r\n        switch (typeof d) {\r\n            default: return d;\r\n            case 'object':\r\n                let tuid = field._tuid;\r\n                if (tuid === undefined) return d.id;\r\n                return tuid.getIdFromObj(d);\r\n            case 'string':\r\n                let len = d.length;\r\n                let r = '', p = 0;\r\n                for (let i=0;i<len;i++) {\r\n                    let c = d.charCodeAt(i);\r\n                    switch(c) {\r\n                        case 9: r += d.substring(p, i) + '\\\\t'; p = i+1; break;\r\n                        case 10: r += d.substring(p, i) + '\\\\n'; p = i+1; break;\r\n                    }\r\n                }\r\n                return r + d.substring(p);\r\n            case 'undefined': return '';\r\n        }\r\n    }\r\n\r\n    private packRow(result:string[], fields:Field[], data:any) {\r\n        let len = fields.length;\r\n        if (len === 0) return;\r\n        let ret = '';\r\n        ret += this.escape(data, fields[0]);\r\n        for (let i=1;i<len;i++) {\r\n            let f = fields[i];\r\n            ret += tab + this.escape(data, f);\r\n        }\r\n        result.push(ret + ln);\r\n    }\r\n\r\n    private packArr(result:string[], fields:Field[], data:any[]) {\r\n        if (data !== undefined) {\r\n            for (let row of data) {\r\n                this.packRow(result, fields, row);\r\n            }\r\n        }\r\n        result.push(ln);\r\n    }\r\n\r\n    unpackSheet(data:string):any {\r\n        let ret = {} as any; //new this.newMain();\r\n        //if (schema === undefined || data === undefined) return;\r\n        let fields = this.fields;\r\n        let p = 0;\r\n        if (fields !== undefined) p = this.unpackRow(ret, fields, data, p);\r\n        let arrs = this.arrFields; //schema['arrs'];\r\n        if (arrs !== undefined) {\r\n            for (let arr of arrs) {\r\n                p = this.unpackArr(ret, arr, data, p);\r\n            }\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    unpackReturns(data:string):any {\r\n        let ret = {} as any;\r\n        //if (schema === undefined || data === undefined) return;\r\n        //let fields = schema.fields;\r\n        let p = 0;\r\n        //if (fields !== undefined) p = unpackRow(ret, schema.fields, data, p);\r\n        let arrs = this.returns; //schema['returns'];\r\n        if (arrs !== undefined) {\r\n            for (let arr of arrs) {\r\n                //let creater = this.newRet[arr.name];\r\n                p = this.unpackArr(ret, arr, data, p);\r\n            }\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    protected unpackRow(ret:any, fields:Field[], data:string, p:number):number {\r\n        let ch0 = 0, ch = 0, c = p, i = 0, len = data.length, fLen = fields.length;\r\n        for (;p<len;p++) {\r\n            ch0 = ch;\r\n            ch = data.charCodeAt(p);\r\n            if (ch === 9) {\r\n                let f = fields[i];\r\n                let {name} = f;\r\n                if (ch0 !== 8) {\r\n                    if (p>c) {\r\n                        let v = data.substring(c, p);\r\n                        ret[name] = this.to(ret, v, f);\r\n                    }\r\n                }\r\n                else {\r\n                    ret[name] = null;\r\n                }\r\n                c = p+1;\r\n                ++i;\r\n                if (i>=fLen) {\r\n                    p = data.indexOf('\\n', c);\r\n                    if (p >= 0) ++p;\r\n                    else p = len;\r\n                    break;\r\n                }\r\n            }\r\n            else if (ch === 10) {\r\n                let f = fields[i];\r\n                let {name} = f;\r\n                if (ch0 !== 8) {\r\n                    if (p>c) {\r\n                        let v = data.substring(c, p);\r\n                        ret[name] = this.to(ret, v, f);\r\n                    }\r\n                }\r\n                else {\r\n                    ret[name] = null;\r\n                }\r\n                ++p;\r\n                ++i;\r\n                break;\r\n            }\r\n        }\r\n        return p;\r\n    }\r\n\r\n    private to(ret:any, v:string, f:Field):any {\r\n        switch (f.type) {\r\n            default: return v;\r\n            case 'datetime':\r\n            case 'date':\r\n            case 'time':\r\n                let date = new Date(Number(v));\r\n                return date;\r\n            case 'id':\r\n            case 'tinyint':\r\n            case 'smallint':\r\n            case 'int':\r\n            case 'dec': return Number(v);\r\n            case 'bigint':\r\n                let id = Number(v);\r\n                let {_tuid} = f;\r\n                if (_tuid === undefined) return id;\r\n                _tuid.useId(id, true);\r\n                return _tuid.boxId(id);\r\n        }\r\n    }\r\n\r\n    private unpackArr(ret:any, arr:ArrFields, data:string, p:number):number {\r\n        let vals:any[] = [], len = data.length;\r\n        let {name, fields} = arr;\r\n        while (p<len) {\r\n            let ch = data.charCodeAt(p);\r\n            if (ch === 10) {\r\n                ++p;\r\n                break;\r\n            }\r\n            let val = {} as any; //new creater();\r\n            vals.push(val);\r\n            p = this.unpackRow(val, fields, data, p);\r\n        }\r\n        ret[name] = vals;\r\n        return p;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {observable} from 'mobx';\r\nimport _ from 'lodash';\r\nimport { Entity } from './entity';\r\nimport { Entities, Field, ArrFields } from './entities';\r\nimport { isNumber } from 'util';\r\nimport { CUq, CTuidMain, CTuidEdit, CTuidInfo, CTuidSelect } from '../controllers';\r\n\r\nexport class BoxId {\r\n    id: number;\r\n    obj?: any;\r\n    content: (templet?:(values?:any, x?:any)=>JSX.Element, x?:any)=>JSX.Element;\r\n    valueFromFieldName: (fieldName:string)=>BoxId|any;\r\n    _$com?: any;\r\n    _$tuid?: Tuid;\r\n    getObj: ()=>any;\r\n}\r\n\r\nconst maxCacheSize = 1000;\r\nexport abstract class Tuid extends Entity {\r\n    private BoxId: ()=>void;\r\n    get typeName(): string { return 'tuid';}\r\n    private queue: number[] = [];               // 每次使用，都排到队头\r\n    private waitingIds: number[] = [];          // 等待loading的\r\n    private cache = observable.map({}, {deep: false});    // 已经缓冲的\r\n    idName: string;\r\n    owner: TuidMain;                    // 用这个值来区分是不是TuidArr\r\n    unique: string[];\r\n    schemaFrom: {owner:string; uq:string};\r\n\r\n    constructor(entities:Entities, owner:TuidMain, name:string, typeId:number) {\r\n        super(entities, name, typeId);\r\n        this.owner = owner;\r\n        //this.buildIdBoxer();\r\n    }\r\n\r\n    abstract get Main():Tuid;\r\n\r\n    private buildIdBoxer() {\r\n        if (this.BoxId !== undefined) return;\r\n        this.BoxId = function():void {};\r\n        let prototype = this.BoxId.prototype;\r\n        Object.defineProperty(prototype, '_$tuid', {\r\n            value: this.from(),\r\n            writable: false,\r\n            enumerable: false,\r\n        });\r\n        Object.defineProperty(prototype, 'obj', {\r\n            enumerable: false,\r\n            get: function() {\r\n                if (this.id === undefined || this.id<=0) return undefined;\r\n                return this._$tuid.valueFromId(this.id);\r\n            }\r\n        });\r\n        prototype.valueFromFieldName = function(fieldName:string):BoxId|any {\r\n            let t:Tuid = this._$tuid;\r\n            return t.valueFromFieldName(fieldName, this.obj);\r\n        };\r\n        prototype.getObj = function():any {\r\n            if (this._$tuid !== undefined) {\r\n                return this._$tuid.getCacheValue(this.id);\r\n            }\r\n        };\r\n        prototype.toJSON = function() {return this.id};\r\n    }\r\n    boxId(id:number):BoxId {\r\n        if (typeof id === 'object') return id as any;\r\n        this.useId(id);\r\n        this.buildIdBoxer();\r\n        let ret:BoxId = new this.BoxId();\r\n        ret.id = id;\r\n        return ret;\r\n    }\r\n    getTuidContent() {\r\n        return this.entities.cUq.getTuidContent(this);\r\n    }\r\n    getIdFromObj(item:any):number {\r\n        return item[this.idName];\r\n    }\r\n\r\n    setSchema(schema:any) {\r\n        super.setSchema(schema);\r\n        let {id, unique} = schema;\r\n        this.idName = id;\r\n        this.unique = unique;\r\n        this.schemaFrom = this.schema.from;\r\n    }\r\n    public buildFieldsTuid() {\r\n        super.buildFieldsTuid();\r\n        let {mainFields} = this.schema;\r\n        if (mainFields !== undefined) {\r\n            for (let mf of mainFields) {\r\n                let f = this.fields.find(v => v.name === mf.name);\r\n                if (f === undefined) continue;\r\n                mf._tuid = f._tuid;\r\n            }\r\n        }\r\n    }\r\n    private moveToHead(id:number) {\r\n        let index = this.queue.findIndex(v => v === id);\r\n        this.queue.splice(index, 1);\r\n        this.queue.push(id);\r\n    }\r\n\r\n    valueFromId(id:number|BoxId):any {\r\n        let _id:number;\r\n        let tId = typeof id;\r\n        switch (typeof id) {\r\n            case 'object': _id = (id as BoxId).id; break;\r\n            case 'number': _id = id as number; break;\r\n            default: return;\r\n        }\r\n        return this.getCacheValue(_id);\r\n    }\r\n    getCacheValue(id:number) {\r\n        let v = this.cache.get(id);\r\n        if (this.owner !== undefined && typeof v === 'object') {\r\n            v.$owner = this.owner.boxId(v.owner); // this.owner.valueFromId(v.owner);\r\n        }\r\n        return v;\r\n    }\r\n    valueFromFieldName(fieldName:string, obj:any):BoxId|any {\r\n        if (obj === undefined) return;\r\n        if (this.fields === undefined) return;\r\n        let f = this.fields.find(v => v.name === fieldName);\r\n        if (f === undefined) return;\r\n        let v = obj[fieldName];\r\n        let {_tuid} = f;\r\n        if (_tuid === undefined) return v;\r\n        return _tuid.valueFromId(v);\r\n    }\r\n    resetCache(id:number) {\r\n        this.cache.delete(id);\r\n        let index = this.queue.findIndex(v => v === id);\r\n        this.queue.splice(index, 1);\r\n        this.useId(id);\r\n    }\r\n    useId(id:number, defer?:boolean) {\r\n        if (id === undefined || id === 0) return;\r\n        if (isNumber(id) === false) return;        \r\n        if (this.cache.has(id) === true) {\r\n            this.moveToHead(id);\r\n            return;\r\n        }\r\n        this.entities.cacheTuids(defer===true?70:20);\r\n        //let idVal = this.createID(id);\r\n        this.cache.set(id, id);\r\n        if (this.waitingIds.findIndex(v => v === id) >= 0) {\r\n            this.moveToHead(id);\r\n            return;\r\n        }\r\n\r\n        if (this.queue.length >= maxCacheSize) {\r\n            // 缓冲已满，先去掉最不常用的\r\n            let r = this.queue.shift();\r\n            if (r === id) {\r\n                // 如果移除的，正好是现在用的，则插入\r\n                this.queue.push(r);\r\n                return;\r\n            }\r\n\r\n            //let rKey = String(r);\r\n            if (this.cache.has(r) === true) {\r\n                // 如果移除r已经缓存\r\n                this.cache.delete(r);\r\n            }\r\n            else {\r\n                // 如果移除r还没有缓存\r\n                let index = this.waitingIds.findIndex(v => v === r);\r\n                this.waitingIds.splice(index, 1);\r\n            }\r\n        }\r\n        this.waitingIds.push(id);\r\n        this.queue.push(id);\r\n        return;\r\n    }\r\n    async proxied(name:string, id:number):Promise<any> {\r\n        let proxyTuid = this.entities.getTuid(name, undefined);\r\n        proxyTuid.useId(id);\r\n        let proxied = await this.tvApi.proxied(this.name, name, id);\r\n        this.cacheValue(proxied);\r\n        return proxied;\r\n    }\r\n    cacheValue(val:any):boolean {\r\n        if (val === undefined) return false;\r\n        let id = this.getIdFromObj(val);\r\n        if (id === undefined) return false;\r\n        let index = this.waitingIds.findIndex(v => v === id);\r\n        if (index>=0) this.waitingIds.splice(index, 1);\r\n        //let cacheVal = this.createID(id, val);\r\n        this.cache.set(id, val);\r\n        // 下面的代码应该是cache proxy id, 需要的时候再写吧\r\n        /*\r\n        let {tuids, fields} = this.schema;\r\n        if (tuids !== undefined && fields !== undefined) {\r\n            for (let f of fields) {\r\n                let {name, tuid} = f;\r\n                if (tuid === undefined) continue;\r\n                let t = this.entities.tuid(tuid);\r\n                if (t === undefined) continue;\r\n                t.useId(val[name]);\r\n            }\r\n        }*/\r\n        return true;\r\n    }\r\n    protected afterCacheId(tuidValue:any) {\r\n        if (this.fields === undefined) return;\r\n        for (let f of this.fields) {\r\n            let {_tuid} = f;\r\n            if (_tuid === undefined) continue;\r\n            _tuid.useId(tuidValue[f.name]);\r\n        }\r\n    }\r\n    from(): Tuid {return;}\r\n    private unpackTuidIds(values:any[]|string):any[] {\r\n        if (this.schemaFrom === undefined) {\r\n            let {mainFields} = this.schema;\r\n            if (mainFields === undefined) return values as any[];\r\n            let ret:any[] = []\r\n            let len = (values as string).length;\r\n            let p = 0;\r\n            while (p<len) {\r\n                let ch = (values as string).charCodeAt(p);\r\n                if (ch === 10) {\r\n                    ++p;\r\n                    break;\r\n                }\r\n                let row = {};\r\n                p = this.unpackRow(row, mainFields, values as string, p);\r\n                ret.push(row);\r\n            }\r\n            return ret;\r\n        }\r\n        else {\r\n            let tuidMain = this.from();\r\n            let ret = tuidMain.unpackTuidIds(values);\r\n            return ret;\r\n        }\r\n    }\r\n    async cacheIds():Promise<void> {\r\n        if (this.waitingIds.length === 0) return;\r\n        let name:string, arr:string;\r\n        if (this.owner === undefined) {\r\n            name = this.name;\r\n        }\r\n        else {\r\n            name = this.owner.name;\r\n            arr = this.name;\r\n        }\r\n        let api = this.getApiFrom();\r\n        let tuids = await api.tuidIds(name, arr, this.waitingIds);\r\n        tuids = this.unpackTuidIds(tuids);\r\n        for (let tuidValue of tuids) {\r\n            if (this.cacheValue(tuidValue) === false) continue;\r\n            this.cacheTuidFieldValues(tuidValue);\r\n            this.afterCacheId(tuidValue);\r\n        }\r\n        await this.cacheDivIds();\r\n    }\r\n    protected async cacheDivIds():Promise<void> {\r\n    }\r\n    async load(id:number):Promise<any> {\r\n        if (id === undefined || id === 0) return;\r\n        let api = this.getApiFrom();\r\n        let values = await api.tuidGet(this.name, id);\r\n        if (values === undefined) return;\r\n        values._$tuid = this;\r\n        this.cacheValue(values);\r\n        this.cacheTuidFieldValues(values);\r\n        return values;\r\n    }\r\n    getDiv(divName:string):TuidDiv {return;}\r\n    private cacheTuidFieldValues(values:any) {\r\n        let {fields, arrs} = this.schema;\r\n        this.cacheFieldsInValue(values, fields);\r\n        if (arrs !== undefined) {\r\n            for (let arr of arrs as ArrFields[]) {\r\n                let {name, fields} = arr;\r\n                let arrValues = values[name];\r\n                if (arrValues === undefined) continue;\r\n                let tuidDiv = this.getDiv(name);\r\n                for (let row of arrValues) {\r\n                    row._$tuid = tuidDiv;\r\n                    row.$owner = this.boxId(row.owner);\r\n                    tuidDiv.cacheValue(row);\r\n                    this.cacheFieldsInValue(row, fields);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    private cacheFieldsInValue(values:any, fields:Field[]) {\r\n        for (let f of fields as Field[]) {\r\n            let {name, _tuid} = f;\r\n            if (_tuid === undefined) continue;\r\n            let id = values[name];\r\n            //_tuid.useId(id);\r\n            values[name] = _tuid.boxId(id);\r\n        }\r\n    }\r\n    async save(id:number, props:any) {\r\n        let params = _.clone(props);\r\n        params[\"$id\"] = id;\r\n        let ret = await this.tvApi.tuidSave(this.name, params);\r\n        /*\r\n        let {id:retId, inId} = ret;\r\n        if (retId === undefined) {\r\n            params.id = id;\r\n            this.cacheValue(params);\r\n        }\r\n        else if (retId > 0) {\r\n            params.id = retId;\r\n            this.cacheValue(params);\r\n        }\r\n        */\r\n        return ret;\r\n    }\r\n    async search(key:string, pageStart:string|number, pageSize:number):Promise<any> {\r\n        let ret:any[] = await this.searchArr(undefined, key, pageStart, pageSize);\r\n        return ret;\r\n    }\r\n    async searchArr(owner:number, key:string, pageStart:string|number, pageSize:number):Promise<any> {\r\n        let {fields} = this.schema;\r\n        let name:string, arr:string;\r\n        if (this.owner !== undefined) {\r\n            name = this.owner.name;\r\n            arr = this.name;\r\n        }\r\n        else {\r\n            name = this.name;\r\n            arr = undefined;\r\n        }\r\n        let api = this.getApiFrom();\r\n        let ret = await api.tuidSearch(name, arr, owner, key, pageStart, pageSize);\r\n        for (let row of ret) {\r\n            this.cacheFieldsInValue(row, fields);\r\n            if (this.owner !== undefined) row.$owner = this.owner.boxId(row.owner);\r\n        }\r\n        return ret;\r\n    }\r\n    async loadArr(arr:string, owner:number, id:number):Promise<any> {\r\n        if (id === undefined || id === 0) return;\r\n        let api = this.getApiFrom();\r\n        return await api.tuidArrGet(this.name, arr, owner, id);\r\n    }\r\n    /*\r\n    async loadArrAll(owner:number):Promise<any[]> {\r\n        return this.all = await this.tvApi.tuidGetAll(this.name);\r\n    }*/\r\n    async saveArr(arr:string, owner:number, id:number, props:any) {\r\n        let params = _.clone(props);\r\n        params[\"$id\"] = id;\r\n        return await this.tvApi.tuidArrSave(this.name, arr, owner, params);\r\n    }\r\n    async posArr(arr:string, owner:number, id:number, order:number) {\r\n        return await this.tvApi.tuidArrPos(this.name, arr, owner, id, order);\r\n    }\r\n\r\n    // cache放到Tuid里面之后，这个函数不再需要公开调用了\r\n    //private async ids(idArr:number[]) {\r\n    //    return await this.tvApi.tuidIds(this.name, idArr);\r\n    //}\r\n    async showInfo(id:number) {\r\n        await this.entities.cUq.showTuid(this, id);\r\n    }\r\n}\r\n\r\nexport class TuidMain extends Tuid {\r\n    get Main() {return this}\r\n    get uqApi() {return this.entities.uqApi};\r\n\r\n    divs: {[name:string]: TuidDiv};\r\n    //proxies: {[name:string]: TuidMain};\r\n\r\n    public setSchema(schema:any) {\r\n        super.setSchema(schema);\r\n        let {arrs} = schema;\r\n        if (arrs !== undefined) {\r\n            this.divs = {};\r\n            for (let arr of arrs) {\r\n                let {name} = arr;\r\n                let tuidDiv = new TuidDiv(this.entities, this, name, this.typeId);\r\n                this.divs[name] = tuidDiv;\r\n                tuidDiv.setSchema(arr);\r\n            }\r\n        }\r\n    }\r\n    getDiv(divName:string):TuidDiv {return this.divs[divName];}\r\n    /* 努力回避async里面的super调用，edge不兼容\r\n    async cacheIds():Promise<void> {\r\n        await super.cacheIds();\r\n        if (this.divs === undefined) return;\r\n        for (let i in this.divs) {\r\n            await this.divs[i].cacheIds();\r\n        }\r\n    }\r\n    */\r\n    protected async cacheDivIds():Promise<void> {\r\n        if (this.divs === undefined) return;\r\n        for (let i in this.divs) {\r\n            await this.divs[i].cacheIds();\r\n        }\r\n    }\r\n\r\n    cUqFrom(): CUq {\r\n        if (this.schemaFrom === undefined) return this.entities.cUq;\r\n        let {owner, uq} = this.schemaFrom;\r\n        let cUq = this.entities.cUq;\r\n        let cApp = cUq.cApp;\r\n        if (cApp === undefined) return cUq;\r\n        let cUqFrm = cApp.getImportUq(owner, uq);\r\n        if (cUqFrm === undefined) {\r\n            console.error(`${owner}/${uq} 不存在`);\r\n            debugger;\r\n            return cUq;\r\n        }\r\n        /*\r\n        let retErrors = await cUqFrm.loadSchema();\r\n        if (retErrors !== undefined) {\r\n            console.error('cUq.loadSchema: ' + retErrors);\r\n            debugger;\r\n            return cUq;\r\n        }*/\r\n        return cUqFrm;\r\n    }\r\n\r\n    getApiFrom() {\r\n        let from = this.from();\r\n        if (from !== undefined) {\r\n            return from.entities.uqApi;\r\n        }\r\n        return this.entities.uqApi;\r\n    }\r\n\r\n    from(): TuidMain {\r\n        if (this.schemaFrom === undefined) return this;\r\n        let cUq = this.cUqFrom();\r\n        return cUq.tuid(this.name);\r\n    }\r\n\r\n    cFrom(): CTuidMain {\r\n        let cUq = this.cUqFrom();\r\n        return cUq.cTuidMainFromName(this.name);\r\n    }\r\n\r\n    cEditFrom(): CTuidEdit {\r\n        let cUq = this.cUqFrom();\r\n        return cUq.cTuidEditFromName(this.name);\r\n    }\r\n\r\n    cInfoFrom(): CTuidInfo {\r\n        let cUq = this.cUqFrom();\r\n        return cUq.cTuidInfoFromName(this.name);\r\n    }\r\n\r\n    cSelectFrom(): CTuidSelect {\r\n        let cUq = this.cUqFrom();\r\n        if (cUq === undefined) return;\r\n        return cUq.cTuidSelectFromName(this.name);\r\n    }\r\n    /*\r\n    protected afterCacheId(tuidValue:any) {\r\n        super.afterCacheId(tuidValue);\r\n        if (this.proxies === undefined) return;\r\n        let {type, $proxy} = tuidValue;\r\n        let pTuid = this.proxies[type];\r\n        pTuid.useId($proxy);\r\n    }*/\r\n}\r\n\r\nexport class TuidDiv extends Tuid {\r\n    get Main() {return this.owner}\r\n    from(): Tuid {\r\n        let from = this.owner.from();\r\n        return from.getDiv(this.name);\r\n    }\r\n    getApiFrom() {\r\n        return this.owner.getApiFrom();\r\n    }\r\n}\r\n","import {Entity} from './entity';\r\n\r\nexport class Action extends Entity {\r\n    get typeName(): string { return 'action';}\r\n    async submit(data:object) {\r\n        await this.loadSchema();\r\n        let text = this.pack(data);\r\n        return await this.tvApi.action(this.name, {data:text});\r\n    }\r\n}\r\n\r\n","import {observable, IObservableArray} from 'mobx';\r\nimport {Entity} from './entity';\r\nimport { PageItems } from 'tonva-tools';\r\n\r\nexport interface SheetState {\r\n    name: string;\r\n    actions: SheetAction[];\r\n}\r\n\r\nexport interface SheetAction {\r\n    name: string;\r\n}\r\n\r\nexport interface StateCount {\r\n    state: string;\r\n    count: number;\r\n}\r\n\r\nexport class Sheet extends Entity {\r\n    get typeName(): string { return 'sheet';}\r\n    states: SheetState[];\r\n\r\n    /*\r\n    setStates(states: SheetState[]) {\r\n        for (let state of states) {\r\n            this.setStateAccess(this.states.find(s=>s.name==state.name), state);\r\n        }\r\n    }*/\r\n    setSchema(schema:any) {\r\n        super.setSchema(schema);\r\n        this.states = schema.states;\r\n    }\r\n    build(obj:any) {\r\n        this.states = [];\r\n        for (let op of obj.ops) {\r\n            this.states.push({name: op, actions:undefined});\r\n        }\r\n        /*\r\n        for (let p in obj) {\r\n            switch(p) {\r\n                case '#':\r\n                case '$': continue;\r\n                default: this.states.push(this.createSheetState(p, obj[p])); break;\r\n            }\r\n        }*/\r\n    }\r\n    private createSheetState(name:string, obj:object):SheetState {\r\n        let ret:SheetState = {name:name, actions:[]};\r\n        let actions = ret.actions;\r\n        for (let p in obj) {\r\n            let action:SheetAction = {name: p};\r\n            actions.push(action);\r\n        }\r\n        return ret;\r\n    }\r\n    /*\r\n    private setStateAccess(s:SheetState, s1:SheetState) {\r\n        if (s === undefined) return;\r\n        for (let action of s1.actions) {\r\n            let acn = action.name;\r\n            let ac = s.actions.find(a=>a.name === acn);\r\n            if (ac === undefined) continue;\r\n            s.actions.push(action);\r\n        }\r\n    }*/\r\n    async save(discription:string, data:any):Promise<any> {\r\n        await this.loadSchema();\r\n        let {appId} = this.entities;\r\n        let text = this.pack(data);\r\n\r\n        let ret = await this.tvApi.sheetSave(this.name, {app: appId, discription: discription, data:text});\r\n        return ret;\r\n        /*\r\n        let {id, state} = ret;\r\n        if (id > 0) this.changeStateCount(state, 1);\r\n        return ret;\r\n        */\r\n    }\r\n    async action(id:number, flow:number, state:string, action:string) {\r\n        await this.loadSchema();\r\n        return await this.tvApi.sheetAction(this.name, {id:id, flow:flow, state:state, action:action});\r\n    }\r\n    private async unpack(data:any):Promise<any> {\r\n        //if (this.schema === undefined) await this.loadSchema();\r\n        let ret = data[0];\r\n        let brief = ret[0];\r\n        let sheetData = this.unpackSheet(brief.data);\r\n        let flows = data[1];\r\n        return {\r\n            brief: brief,\r\n            data: sheetData,\r\n            flows: flows,\r\n        }\r\n    }\r\n    async getSheet(id:number):Promise<any> {\r\n        await this.loadSchema();\r\n        let ret = await this.tvApi.getSheet(this.name, id);\r\n        if (ret[0].length === 0) return await this.getArchive(id);\r\n        return await this.unpack(ret);\r\n    }\r\n    async getArchive(id:number):Promise<any> {\r\n        await this.loadSchema();\r\n        let ret = await this.tvApi.sheetArchive(this.name, id)\r\n        return await this.unpack(ret);\r\n    }\r\n\r\n    async getArchives(pageStart:number, pageSize:number) {\r\n        await this.loadSchema();\r\n        let ret = await this.tvApi.sheetArchives(this.name, {pageStart:pageStart, pageSize:pageSize});\r\n        return ret;\r\n    }\r\n\r\n    async getStateSheets(state:string, pageStart:number, pageSize:number):Promise<any[]> {\r\n        await this.loadSchema();\r\n        let ret = await this.tvApi.stateSheets(this.name, {state:state, pageStart:pageStart, pageSize:pageSize});\r\n        return ret;\r\n    }\r\n    createPageStateItems<T>(): PageStateItems<T> {return new PageStateItems<T>(this);}\r\n\r\n    async stateSheetCount():Promise<StateCount[]> {\r\n        await this.loadSchema();\r\n        let ret:StateCount[] = await this.tvApi.stateSheetCount(this.name);\r\n        return this.states.map(s => {\r\n            let n = s.name, count = 0;\r\n            let r = ret.find(v => v.state === n);\r\n            if (r !== undefined) count = r.count;\r\n            return {state: n, count: count} \r\n        });\r\n    }\r\n\r\n    async mySheets(state:string, pageStart:number, pageSize:number):Promise<any[]> {\r\n        await this.loadSchema();\r\n        let ret = await this.tvApi.mySheets(this.name, {state:state, pageStart:pageStart, pageSize:pageSize});\r\n        return ret;\r\n    }\r\n}\r\n\r\nexport class PageStateItems<T> extends PageItems<T> {\r\n    private sheet: Sheet;\r\n    constructor(sheet: Sheet) {\r\n        super(true);\r\n        this.sheet = sheet;\r\n        this.pageSize = 10;\r\n    }\r\n    protected async load(param:any, pageStart:any, pageSize:number):Promise<any[]> {\r\n        let ret = await this.sheet.getStateSheets(param, pageStart, pageSize);\r\n        return ret;\r\n    }\r\n    protected setPageStart(item:any) {\r\n        this.pageStart = item === undefined? 0 : item.id;\r\n    }\r\n}\r\n","import {observable, IObservableArray} from 'mobx';\r\nimport {Field, ArrFields} from './entities';\r\nimport {Entity} from './entity';\r\n\r\nexport type QueryPageApi = (name:string, pageStart:any, pageSize:number, params:any) => Promise<string>;\r\nexport class Query extends Entity {\r\n    get typeName(): string { return 'query';}\r\n    private pageStart: any;\r\n    private pageSize:number;\r\n    private params:any;\r\n    private more: boolean;\r\n    private startField: Field;\r\n    @observable list:IObservableArray; // = observable.array([], {deep: false});\r\n    returns: ArrFields[];\r\n    isPaged: boolean;\r\n\r\n    setSchema(schema:any) {\r\n        super.setSchema(schema);\r\n        let {returns} = schema;\r\n        this.returns = returns;\r\n        this.isPaged = (returns as any[]).find(v => v.name === '$page') !== undefined;\r\n    }\r\n\r\n    resetPage(size:number, params:any) {\r\n        this.pageStart = undefined;\r\n        this.pageSize = size;\r\n        this.params = params;\r\n        this.more = false;\r\n        this.list = undefined;\r\n    }\r\n    get hasMore() {return this.more;}\r\n    async loadPage():Promise<void> {\r\n        if (this.pageSize === undefined) {\r\n            throw 'call resetPage(size:number, params:any) first';\r\n        }\r\n        let pageStart:any;\r\n        if (this.pageStart !== undefined) {\r\n            switch (this.startField.type) {\r\n                default: pageStart = this.pageStart; break;\r\n                case 'date':\r\n                case 'time':\r\n                case 'datetime': pageStart = (this.pageStart as Date).getTime(); break;\r\n            }\r\n        }\r\n        let page = await this.page(this.params, pageStart, this.pageSize+1);\r\n        /*\r\n        await this.loadSchema();\r\n        let res = await this.tvApi.page(this.name, pageStart, this.pageSize+1, this.params);\r\n        let data = await this.unpackReturns(res);\r\n        let page = data['$page'] as any[];\r\n        */\r\n        this.list = observable.array([], {deep: false});\r\n        if (page !== undefined) {\r\n            if (page.length > this.pageSize) {\r\n                this.more = true;\r\n                page.pop();\r\n                let ret = this.returns.find(r => r.name === '$page');\r\n                this.startField = ret.fields[0];\r\n                this.pageStart = page[page.length-1][this.startField.name];\r\n            }\r\n            else {\r\n                this.more = false;\r\n            }\r\n            this.list.push(...page);\r\n        }\r\n        //this.loaded = true;\r\n    }\r\n\r\n    async page(params:any, pageStart:any, pageSize:number):Promise<any[]> {\r\n        await this.loadSchema();\r\n        let res = await this.tvApi.page(this.name, pageStart, pageSize+1, this.buildParams(params));\r\n        let data = await this.unpackReturns(res);\r\n        return data.$page;// as any[];\r\n    }\r\n    async query(params:any):Promise<any> {\r\n        await this.loadSchema();\r\n        let res = await this.tvApi.query(this.name, this.buildParams(params));\r\n        let data = await this.unpackReturns(res);\r\n        return data;\r\n    }\r\n    async table(params:any): Promise<any[]> {\r\n        let ret = await this.query(params);\r\n        for (let i in ret) {\r\n            return ret[i];\r\n        }\r\n    }\r\n    async obj(params:any):Promise<any> {\r\n        let ret = await this.table(params);\r\n        if (ret.length > 0) return ret[0];\r\n    }\r\n    async scalar(params:any):Promise<any> {\r\n        let ret = await this.obj(params);\r\n        for (let i in ret) return ret[i];\r\n    }\r\n}\r\n","import {Query} from './query';\r\n\r\nexport class Book extends Query {\r\n    get typeName(): string { return 'book';}\r\n    protected queryApiName = 'book';\r\n}\r\n","import {Query} from './query';\r\n\r\nexport class History extends Query {\r\n    get typeName(): string { return 'history';}\r\n    protected queryApiName = 'history';\r\n}\r\n","import { Entity } from './entity';\r\nimport { Action } from './action';\r\nimport { Query } from './query';\r\nimport { Field } from './entities';\r\n\r\ninterface MapActions {\r\n    add: Action;\r\n    del: Action;\r\n}\r\ninterface MapQueries {\r\n    all: Query;\r\n    page: Query;\r\n    query: Query;\r\n}\r\n\r\nexport class Map extends Entity {\r\n    get typeName(): string { return 'map';}\r\n    keys: Field[];\r\n    actions: MapActions = {} as any;\r\n    queries: MapQueries = {} as any;\r\n    schemaFrom: {owner:string; uq:string};\r\n\r\n    setSchema(schema:any) {\r\n        super.setSchema(schema);\r\n        this.schemaFrom = this.schema.from;\r\n        let {actions, queries, keys} = schema;\r\n        this.entities.buildFieldTuid(this.keys = keys);\r\n        //let t = this.schemaStringify();\r\n        for (let i in actions) {\r\n            let schema = actions[i];\r\n            let {name} = schema;\r\n            let action = this.entities.newAction(name, undefined);\r\n            action.setSchema(schema);\r\n            this.actions[i] = action;\r\n        }\r\n        for (let i in queries) {\r\n            let schema = queries[i];\r\n            let {name} = schema;\r\n            let query = this.entities.newQuery(name, undefined);\r\n            query.setSchema(schema);\r\n            this.queries[i] = query;\r\n        }\r\n    }\r\n\r\n    async add(param:any) {\r\n        await this.loadSchema();\r\n        return await this.actions.add.submit(param);\r\n    }\r\n\r\n    async del(param:any) {\r\n        await this.loadSchema();\r\n        return await this.actions.del.submit(param);\r\n    }\r\n\r\n    async all() {\r\n        await this.loadSchema();\r\n        return await this.queries.all.query({});\r\n    }\r\n\r\n    async page(param:any, pageStart:any, pageSize: number) {\r\n        await this.loadSchema();\r\n        return await this.queries.page.page(param, pageStart, pageSize);\r\n    }\r\n\r\n    async query(param:any) {\r\n        await this.loadSchema();\r\n        return await this.queries.query.query(param);\r\n    }\r\n    async table(params:any): Promise<any[]> {\r\n        let ret = await this.query(params);\r\n        for (let i in ret) {\r\n            return ret[i];\r\n        }\r\n    }\r\n    async obj(params:any):Promise<any> {\r\n        let ret = await this.table(params);\r\n        if (ret.length > 0) return ret[0];\r\n    }\r\n    async scalar(params:any):Promise<any> {\r\n        let ret = await this.obj(params);\r\n        for (let i in ret) return ret[i];\r\n    }\r\n}\r\n","import {Query} from './query';\r\n\r\nexport class Pending extends Query {\r\n    get typeName(): string { return 'pending';}\r\n    protected queryApiName = 'pending';\r\n}\r\n","import {TuidMain, Tuid} from './tuid';\r\nimport {Action} from './action';\r\nimport {Sheet, SheetState, SheetAction} from './sheet';\r\nimport {Query} from './query';\r\nimport {Book} from './book';\r\nimport {History} from './history';\r\nimport { UqApi } from 'tonva-tools';\r\nimport { Map } from './map';\r\nimport { Pending } from './pending';\r\nimport { CUq } from '../controllers';\r\n\r\nexport type FieldType = 'id' | 'tinyint' | 'smallint' | 'int' | 'bigint' | 'dec' | 'char' | 'text'\r\n    | 'datetime' | 'date' | 'time';\r\n\r\nexport function fieldDefaultValue(type:FieldType) {\r\n    switch (type) {\r\n        case 'tinyint':\r\n        case 'smallint':\r\n        case 'int':\r\n        case 'bigint':\r\n        case 'dec':\r\n            return 0;\r\n        case 'char':\r\n        case 'text':\r\n            return '';\r\n        case 'datetime':\r\n        case 'date':\r\n            return '2000-1-1';\r\n        case 'time':\r\n            return '0:00';\r\n    }\r\n}\r\n\r\nexport interface Field {\r\n    name: string;\r\n    type: FieldType;\r\n    tuid?: string;\r\n    arr?: string;\r\n    url?: string;\r\n    null?: boolean;\r\n    size?: number;\r\n    owner?: string;\r\n    _ownerField: Field;\r\n    _tuid: Tuid;\r\n}\r\nexport interface ArrFields {\r\n    name: string;\r\n    fields: Field[];\r\n    id?: string;\r\n    order?: string;\r\n}\r\nexport interface FieldMap {\r\n    [name:string]: Field;\r\n}\r\n\r\nexport class Entities {\r\n    private tuids: {[name:string]: TuidMain} = {};\r\n    private actions: {[name:string]: Action} = {};\r\n    private sheets: {[name:string]: Sheet} = {};\r\n    private queries: {[name:string]: Query} = {};\r\n    private books: {[name:string]: Book} = {};\r\n    private maps: {[name:string]: Map} = {};\r\n    private histories: {[name:string]: History} = {};\r\n    private pendings: {[name:string]: Pending} = {};\r\n    private cacheTimer: any;\r\n    cUq: CUq;\r\n    uqApi: UqApi;\r\n    appId: number;\r\n    uqId: number;\r\n\r\n    constructor(cUq: CUq, uqApi:UqApi, appId: number) {\r\n        this.cUq = cUq;\r\n        this.uqApi = uqApi;\r\n        this.appId = appId;\r\n    }\r\n\r\n    tuid(name:string):TuidMain {return this.tuids[name.toLowerCase()]}\r\n    action(name:string):Action {return this.actions[name.toLowerCase()]}\r\n    sheet(name:string):Sheet {return this.sheets[name.toLowerCase()]}\r\n    query(name:string):Query {return this.queries[name.toLowerCase()]}\r\n    book(name:string):Book {return this.books[name.toLowerCase()]}\r\n    map(name:string):Map {return this.maps[name.toLowerCase()]}\r\n    history(name:string):History {return this.histories[name.toLowerCase()]}\r\n    pending(name:string):Pending {return this.pendings[name.toLowerCase()]}\r\n\r\n    sheetFromTypeId(typeId:number):Sheet {\r\n        for (let i in this.sheets) {\r\n            let sheet = this.sheets[i];\r\n            if (sheet.typeId === typeId) return sheet;\r\n        }\r\n    }\r\n\r\n    tuidArr: TuidMain[] = [];\r\n    actionArr: Action[] = [];\r\n    sheetArr: Sheet[] = [];\r\n    queryArr: Query[] = [];\r\n    bookArr: Book[] = [];\r\n    mapArr: Map[] = [];\r\n    historyArr: History[] = [];\r\n    pendingArr: Pending[] = [];\r\n\r\n    async loadAccess() {\r\n        let accesses = await this.uqApi.loadAccess();\r\n        if (accesses === undefined) return;\r\n        this.buildEntities(accesses);\r\n    }\r\n\r\n    async loadEntities() {\r\n        let accesses = await this.uqApi.loadEntities();\r\n        this.buildEntities(accesses);\r\n    }\r\n\r\n    private buildEntities(entities:any) {\r\n        if (entities === undefined) {\r\n            debugger;\r\n        }\r\n        let {access, tuids} = entities;\r\n        this.buildTuids(tuids);\r\n        this.buildAccess(access);\r\n    }\r\n\r\n    getTuid(name:string, div?:string, tuidUrl?:string): Tuid {\r\n        let tuid = this.tuids[name];\r\n        if (tuid === undefined) return;\r\n        if (div === undefined) return tuid;\r\n        return tuid.divs[div];\r\n    }\r\n\r\n    cacheTuids(defer:number) {\r\n        this.clearCacheTimer();\r\n        this.cacheTimer = setTimeout(this.loadIds, defer);\r\n    }\r\n    private clearCacheTimer() {\r\n        if (this.cacheTimer === undefined) return;\r\n        clearTimeout(this.cacheTimer);\r\n        this.cacheTimer = undefined;\r\n    }\r\n    private loadIds = () => {\r\n        this.clearCacheTimer();\r\n        for (let i in this.tuids) {\r\n            let tuid = this.tuids[i];\r\n            tuid.cacheIds();\r\n        }\r\n    }\r\n\r\n    private buildTuids(tuids:any) {\r\n        //let proxyColl = {} as any;\r\n        for (let i in tuids) {\r\n            let schema = tuids[i];\r\n            let {name, typeId/*, proxies*/} = schema;\r\n            let tuid = this.newTuid(i, typeId);\r\n            tuid.sys = true;\r\n            //tuid.setSchema(schema);\r\n            //if (proxies !== undefined) proxyColl[i] = proxies;\r\n        }\r\n        for (let i in tuids) {\r\n            let schema = tuids[i];\r\n            let {name} = schema;\r\n            let tuid = this.getTuid(i);\r\n            //tuid.sys = true;\r\n            tuid.setSchema(schema);\r\n        }\r\n        /*\r\n        for (let i in proxyColl) {\r\n            let proxies:string[] = proxyColl[i];\r\n            let tuid = this.tuids[i];\r\n            tuid.proxies = {};\r\n            for (let p of proxies) {\r\n                tuid.proxies[p] = this.tuids[p];\r\n            }\r\n        }*/\r\n        for (let i in this.tuids) {\r\n            let tuid = this.tuids[i];\r\n            tuid.buildFieldsTuid();\r\n        }\r\n    }\r\n\r\n    private buildAccess(access:any) {\r\n        for (let a in access) {\r\n            let v = access[a];\r\n            switch (typeof v) {\r\n                case 'string': this.fromType(a, v); break;\r\n                case 'object': this.fromObj(a, v); break;\r\n            }\r\n        }\r\n        /*\r\n        for (let tuid of this.tuidArr) {\r\n            tuid.setProxies(this);\r\n        }*/\r\n    }\r\n\r\n    newAction(name:string, id:number):Action {\r\n        let action = this.actions[name];\r\n        if (action !== undefined) return action;\r\n        action = this.actions[name] = new Action(this, name, id)\r\n        this.actionArr.push(action);\r\n        return action;\r\n    }\r\n    newTuid(name:string, id:number):TuidMain {\r\n        let tuid = this.tuids[name];\r\n        if (tuid !== undefined) return tuid;\r\n        tuid = this.tuids[name] = new TuidMain(this, undefined, name, id);\r\n        this.tuidArr.push(tuid);\r\n        return tuid;\r\n    }\r\n    newQuery(name:string, id:number):Query {\r\n        let query = this.queries[name];\r\n        if (query !== undefined) return query;\r\n        query = this.queries[name] = new Query(this, name, id)\r\n        this.queryArr.push(query);\r\n        return query;\r\n    }\r\n    newBook(name:string, id:number):Book {\r\n        let book = this.books[name];\r\n        if (book !== undefined) return book;\r\n        book = this.books[name] = new Book(this, name, id);\r\n        this.bookArr.push(book);\r\n        return book;\r\n    }\r\n    newMap(name:string, id:number):Map {\r\n        let map = this.maps[name];\r\n        if (map !== undefined) return map;\r\n        map = this.maps[name] = new Map(this, name, id)\r\n        this.mapArr.push(map);\r\n        return map;\r\n    }\r\n    newHistory(name:string, id:number):History {\r\n        let history = this.histories[name];\r\n        if (history !== undefined) return;\r\n        history = this.histories[name] = new History(this, name, id)\r\n        this.historyArr.push(history);\r\n        return history;\r\n    }\r\n    newPending(name:string, id:number):Pending {\r\n        let pending = this.pendings[name];\r\n        if (pending !== undefined) return;\r\n        pending = this.pendings[name] = new Pending(this, name, id)\r\n        this.pendingArr.push(pending);\r\n        return pending;\r\n    }\r\n    newSheet(name:string, id:number):Sheet {\r\n        let sheet = this.sheets[name];\r\n        if (sheet !== undefined) return sheet;\r\n        sheet = this.sheets[name] = new Sheet(this, name, id);\r\n        this.sheetArr.push(sheet);\r\n        return sheet;\r\n    }\r\n    private fromType(name:string, type:string) {\r\n        let parts = type.split('|');\r\n        type = parts[0];\r\n        let id = Number(parts[1]);\r\n        switch (type) {\r\n            case 'uq': this.uqId = id; break;\r\n            case 'tuid':\r\n                let tuid = this.newTuid(name, id);\r\n                tuid.sys = false;\r\n                break;\r\n            case 'action': this.newAction(name, id); break;\r\n            case 'query': this.newQuery(name, id); break;\r\n            case 'book': this.newBook(name, id); break;\r\n            case 'map': this.newMap(name, id); break;\r\n            case 'history': this.newHistory(name, id); break;\r\n            case 'sheet':this.newSheet(name, id); break;\r\n            case 'pending': this.newPending(name, id); break;\r\n        }\r\n    }\r\n    private fromObj(name:string, obj:any) {\r\n        switch (obj['$']) {\r\n            case 'sheet': this.buildSheet(name, obj); break;\r\n        }\r\n    }\r\n    private buildSheet(name:string, obj:any) {\r\n        let sheet = this.sheets[name];\r\n        if (sheet === undefined) sheet = this.newSheet(name, obj.id);\r\n        sheet.build(obj);\r\n        /*\r\n        let states = sheet.states;\r\n        for (let p in obj) {\r\n            switch(p) {\r\n                case '#':\r\n                case '$': continue;\r\n                default: states.push(this.createSheetState(p, obj[p])); break;\r\n            }\r\n        }*/\r\n    }\r\n    /*\r\n    private createSheetState(name:string, obj:object):SheetState {\r\n        let ret:SheetState = {name:name, actions:[]};\r\n        let actions = ret.actions;\r\n        for (let p in obj) {\r\n            let action:SheetAction = {name: p};\r\n            actions.push(action);\r\n        }\r\n        return ret;\r\n    }*/\r\n    buildFieldTuid(fields:Field[], mainFields?:Field[]) {\r\n        if (fields === undefined) return;\r\n        for (let f of fields) {\r\n            let {tuid, arr, url} = f;\r\n            if (tuid === undefined) continue;\r\n            f._tuid = this.getTuid(tuid, arr, url);\r\n        }\r\n        for (let f of fields) {\r\n            let {owner} = f;\r\n            if (owner === undefined) continue;\r\n            let ownerField = fields.find(v => v.name === owner);\r\n            if (ownerField === undefined) {\r\n                if (mainFields !== undefined) {\r\n                    ownerField = mainFields.find(v => v.name === owner);\r\n                }\r\n                if (ownerField === undefined) {\r\n                    throw `owner field ${owner} is undefined`;\r\n                }\r\n            }\r\n            f._ownerField = ownerField;\r\n            let {arr, url} = f;\r\n            f._tuid = this.getTuid(ownerField._tuid.name, arr, url);\r\n            if (f._tuid === undefined) throw 'owner field ${owner} is not tuid';\r\n        }\r\n    }\r\n    buildArrFieldsTuid(arrFields:ArrFields[], mainFields:Field[]) {\r\n        if (arrFields === undefined) return;\r\n        for (let af of arrFields) {\r\n            let {fields} = af;\r\n            if (fields === undefined) continue;\r\n            this.buildFieldTuid(fields, mainFields);\r\n        }\r\n    }\r\n}\r\n","export * from './entities';\r\nexport * from './entity';\r\nexport * from './action';\r\nexport * from './query';\r\nexport * from './sheet';\r\nexport * from './tuid';\r\nexport * from './book';\r\nexport * from './map';\r\nexport * from './history';\r\nexport * from './pending';\r\n","import * as React from 'react';\r\nimport {FormView, FormRow, FieldRow, GroupRow, LabelFormRow} from '../formView';\r\nimport {Control, ControlBase, createControl, CreateControl} from '../control';\r\n\r\nexport type CreateRow = (form:FormView, row: FormRow)=>RowContainer;\r\n\r\nexport abstract class RowContainer {\r\n    protected form:FormView;\r\n    protected row: FormRow;\r\n    protected control: ControlBase;\r\n    constructor(form:FormView, row: FormRow) {\r\n        this.form = form;\r\n        this.row = row;\r\n        if ((row as JSX.Element).type === undefined) {\r\n            let cc:CreateControl = (row as LabelFormRow).createControl;\r\n            if (cc === undefined) cc = form.createControl;\r\n            if (cc === undefined) cc = createControl;\r\n            this.control = cc(form, row);\r\n        }\r\n    }\r\n    abstract render(key:string):JSX.Element;\r\n    \r\n    isOk():boolean {\r\n        if (this.control === undefined) return true;\r\n        return this.control.isOk();\r\n    }\r\n\r\n    contains(fieldName:string):boolean {\r\n        let field = (this.row as FieldRow).field;\r\n        if (field !== undefined) return fieldName === field.name;\r\n        let group = (this.row as GroupRow).group;\r\n        if (group !== undefined) return group.find(g => g.field.name === fieldName)!==undefined;\r\n        return false;\r\n    }\r\n    get hasError():boolean {return this.control.hasError;}\r\n    get filled():boolean {return this.control.filled;}\r\n    clear() {\r\n        if (this.control !== undefined) this.control.clear();\r\n    }\r\n    clearErrors() {\r\n        if (this.control !== undefined) this.control.clearErrors();\r\n    }\r\n    readValues(values:any):any {\r\n        if (this.control !== undefined) this.control.readValues(values);\r\n    }\r\n    setError(fieldName:string, error:string) {\r\n        if (this.control !== undefined) this.control.setError(fieldName, error);\r\n    }\r\n    setInitValues(values:any) {\r\n        if (this.control !== undefined) this.control.setInitValues(values);\r\n    }\r\n}\r\n\r\nclass ElementRowContainer extends RowContainer {\r\n    render(key:string):JSX.Element {\r\n        return <div key={key} className=\"form-group\">{this.row as JSX.Element}</div>;\r\n    }\r\n    get hasError():boolean {return false;}\r\n    get filled():boolean {return false;}\r\n}\r\n\r\nclass BootStrapRowContainer extends RowContainer {\r\n    render(key:string):JSX.Element {\r\n        return <div key={key} className='form-group row'>\r\n            <label className='col-sm-2 col-form-label'>\r\n                {(this.row as LabelFormRow).label}\r\n            </label>\r\n            {this.control.render()}\r\n        </div>;\r\n\r\n        //has-success is-valid\r\n    }\r\n}\r\n\r\nexport function bootstrapCreateRow(form:FormView, row: FormRow):RowContainer {\r\n    return new BootStrapRowContainer(form, row);\r\n}\r\n\r\nexport function elementCreateRow(form:FormView, row: FormRow):RowContainer {\r\n    return new ElementRowContainer(form, row);\r\n}\r\n","//import {isDevelopment} from '../local';\r\nimport {HttpChannel} from './httpChannel';\r\n\r\nexport async function refetchApi(channel:HttpChannel, url, options, resolve, reject) {\r\n    await channel.fetch(url, options, resolve, reject);\r\n}\r\n\r\nexport abstract class ApiBase {\r\n    protected token: string;\r\n    protected path: string;\r\n    protected showWaiting: boolean;\r\n\r\n    constructor(path: string, showWaiting: boolean) {\r\n        this.path = path || '';\r\n        this.showWaiting = showWaiting;\r\n    }\r\n\r\n    protected abstract async getHttpChannel(): Promise<HttpChannel>;\r\n\r\n    public async call(url:string, method:string, body:any):Promise<any> {\r\n        let channel = await this.getHttpChannel();\r\n        return await channel.callFetch(url, method, body);\r\n    }\r\n\r\n    public async get(path:string, params:any=undefined): Promise<any> {\r\n        let channel = await this.getHttpChannel();\r\n        return await channel.get(this.path + path, params);\r\n    }\r\n\r\n    public async post(path:string, params:any): Promise<any> {\r\n        let channel = await this.getHttpChannel();\r\n        return await channel.post(this.path + path, params);\r\n    }\r\n\r\n    public async put(path:string, params:any): Promise<any> {\r\n        let channel = await this.getHttpChannel();\r\n        return await channel.put(this.path + path, params);\r\n    }\r\n\r\n    public async delete(path:string, params:any): Promise<any> {\r\n        let channel = await this.getHttpChannel();\r\n        return await channel.delete(this.path + path, params);\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport _ from 'lodash';\r\nimport {nav, mobileHeaderStyle} from './nav';\r\n\r\nexport interface TitleBarProps {\r\n    back?: 'back' | 'close' | 'none';\r\n    center: string | JSX.Element;\r\n    right?: JSX.Element;\r\n    logout?: boolean | (()=>Promise<void>);\r\n}\r\nexport interface TitleBarState {\r\n    hasBack: boolean;\r\n}\r\nexport class TitleBar extends React.Component<TitleBarProps, TitleBarState> {\r\n    constructor(props: TitleBarProps) {\r\n        super(props);\r\n        this.navChange = this.navChange.bind(this);\r\n        this.state = {\r\n            hasBack: false,\r\n        };\r\n    }\r\n    navChange() {\r\n        this.setState({\r\n            hasBack: nav.level > 1\r\n        })\r\n    }\r\n    componentWillMount() {\r\n        this.navChange();\r\n        //this.navChangeHandler = nav.events.add('change', this.navChange);\r\n    }\r\n    componentWillUnmount() {\r\n        //nav.events.remove('change', this.navChangeHandler);\r\n    }\r\n    async back() {\r\n        await nav.back(); // 这个才会显示confirm box，在dataForm里面，如果输入了数据的话\r\n    }\r\n    openWindow() {\r\n        window.open(document.location.href);\r\n    }\r\n    private logoutClick = () => {\r\n        nav.showLogout(this.logout);\r\n        /*\r\n        nav.push(<Page header=\"安全退出\" back=\"close\">\r\n            <div className=\"m-5 border border-info bg-white rounded p-3 text-center\">\r\n                <div>退出当前账号不会删除任何历史数据，下次登录依然可以使用本账号</div>\r\n                <div className=\"mt-3\">\r\n                    <button className=\"btn btn-danger\" onClick={()=>this.logout()}>退出</button>\r\n                </div>\r\n            </div>\r\n        </Page>);\r\n        */\r\n    }\r\n    private logout = async () => {\r\n        let {logout} = this.props;\r\n        if (typeof logout === 'function') {\r\n            await logout(); \r\n        }\r\n        await nav.logout(undefined);\r\n    }\r\n    render() {\r\n        let b = this.state.hasBack || self != top;\r\n        let {right, center, logout} = this.props;\r\n        let back, pop, debugLogout;\r\n        if (logout !== undefined && self === top) {\r\n            if (typeof logout === 'boolean' && logout === true\r\n                || typeof logout === 'function')\r\n            {\r\n                let {user} = nav;\r\n                if (user !== undefined) {\r\n                    let {nick, name} = user;\r\n                    debugLogout = <div className=\"d-flex align-items-center\">\r\n                        <small className=\"text-light\">{nick || name}</small>\r\n                        <a className=\"dropdown-toggle btn btn-secondary btn-sm ml-2\"\r\n                            role=\"button\"\r\n                            onClick={this.logoutClick}>\r\n                            <i className=\"fa fa-sign-out\" />\r\n                        </a>\r\n                    </div>;\r\n                }\r\n            }\r\n        }\r\n        if (b) {\r\n            switch (this.props.back) {\r\n                case 'none': back = undefined; break;\r\n                default:\r\n                case 'back': back = <nav onClick={this.back}><i className=\"fa fa-arrow-left\" /></nav>; break;\r\n                case 'close': back = <nav onClick={this.back}><i className=\"fa fa-close\" /></nav>; break;\r\n            }\r\n        }\r\n        if (self != top) {\r\n            console.log(document.location.href);\r\n            pop = <header onClick={this.openWindow} />;\r\n        }\r\n        let rightView;\r\n        if (right || debugLogout) rightView = <aside>{right} {debugLogout}</aside>;\r\n        return (\r\n        <header style={mobileHeaderStyle}>\r\n            {pop}\r\n            {back}\r\n            <div>{center}</div>\r\n            {rightView}\r\n        </header>\r\n        );\r\n    }\r\n}\r\n","import React from 'react';\r\nimport { jsonStringify } from '../../tools';\r\n\r\nexport const DefaultRow = (values) => <div className=\"px-3 py-2\">{jsonStringify(values)}</div>;\r\n","import * as React from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport { List, FA } from 'tonva-react-form';\r\nimport { Page, nav } from 'tonva-tools';\r\nimport { TuidMain, Query, Entity } from '../../entities';\r\nimport { VForm } from '../form';\r\nimport { VEntity } from '../CVEntity';\r\nimport { QueryUI, CQuery } from './cQuery';\r\nimport { DefaultRow } from './defaultRow';\r\n\r\nexport class VQueryMain extends VEntity<Query, QueryUI, CQuery> {\r\n    protected vForm: VForm;\r\n    private row: React.StatelessComponent;\r\n\r\n    async open(param?:any):Promise<void> {\r\n        this.vForm = this.createForm(this.onSubmit, param);\r\n        let {row, queryRow} = this.ui;\r\n        this.row = queryRow || row || DefaultRow;\r\n        this.openPage(this.view);\r\n    }\r\n\r\n    onSubmit = async () => {\r\n        let params = this.vForm.getValues();\r\n        if (this.entity.isPaged === true) {\r\n            await this.entity.resetPage(30, params);\r\n            await this.entity.loadPage();\r\n            this.replacePage(this.pageResult);\r\n        }\r\n        else {\r\n            let data = await this.entity.query(params);\r\n            this.replacePage(this.queryResult, data);\r\n        }\r\n    }\r\n\r\n    again = () => {\r\n        this.vForm.reset();\r\n        this.replacePage(this.view);\r\n    }\r\n\r\n    renderExtra() {\r\n        return;\r\n    }\r\n\r\n    renderRow = (item:any, index:number) => <this.row {...item} />;\r\n\r\n    protected view = () => <Page header={this.label}>\r\n        {this.vForm.render('mx-3 my-2')}\r\n        {this.renderExtra()}\r\n    </Page>;\r\n\r\n    protected pageResult = () => {\r\n        let {name, list} = this.entity;\r\n        let rightClose = <button\r\n            className=\"btn btn-outline-success\"\r\n            onClick={this.again}>\r\n            <FA name=\"search\" /> 再查询\r\n        </button>;\r\n        return <Page header={this.label} right={rightClose}>\r\n            <List items={list} item={{render: this.renderRow}} />\r\n        </Page>;\r\n    }\r\n\r\n    protected queryResult = observer((result:any) => {\r\n        let rightClose = <button\r\n            className=\"btn btn-outline-success\"\r\n            onClick={this.again}>\r\n            <FA name=\"search\" /> 再查询\r\n        </button>;\r\n        return <Page header={this.label} right={rightClose}>\r\n            <pre>{JSON.stringify(result, undefined, '\\t')}</pre>\r\n        </Page>;\r\n    })\r\n}\r\n","import * as React from 'react';\r\nimport { FA, SearchBox, List } from 'tonva-react-form';\r\nimport { Page, PageItems } from 'tonva-tools';\r\nimport { Query } from '../../entities';\r\nimport { VEntity } from '../CVEntity';\r\nimport { QueryUI, CQuerySelect } from './cQuery';\r\nimport { DefaultRow } from './defaultRow';\r\n\r\nexport class VQuerySelect extends VEntity<Query, QueryUI, CQuerySelect> {\r\n    private row: React.StatelessComponent;\r\n\r\n    PageItems:QueryPageItems;\r\n    ownerId: number;\r\n\r\n    async open(param?:any) {\r\n        let {row, selectRow} = this.ui;\r\n        this.row = selectRow || row || DefaultRow;\r\n        //this.entity = this.controller.entity;\r\n        this.PageItems = new QueryPageItems(this.entity);\r\n        await this.onSearch(param);\r\n        this.openPage(this.view);\r\n    }\r\n    onSearch = async (key:string) => {\r\n        await this.PageItems.first(key);\r\n    }\r\n\r\n    renderRow = (item:any, index:number) => <this.row {...item} />;\r\n\r\n    private callOnSelected(item:any) {\r\n       this.closePage();\r\n       this.returnCall(item);\r\n    }\r\n    clickRow = (item:any) => {\r\n        this.callOnSelected(item);\r\n    }\r\n\r\n    view = () => {\r\n        let header = <SearchBox className=\"mx-1 w-100\"\r\n            initKey={''}\r\n            onSearch={this.onSearch} placeholder={'搜索'+this.label} />;\r\n        return <Page header={header}>\r\n            <List\r\n                items={this.PageItems.items}\r\n                item={{render: this.renderRow, onClick: this.clickRow}}\r\n                before={'搜索'+this.label+'资料'} />\r\n        </Page>;\r\n    };\r\n}\r\n\r\nexport class QueryPageItems extends PageItems<any> {\r\n    private query: Query;\r\n    constructor(query: Query) {\r\n        super();\r\n        this.query = query;\r\n    }\r\n    protected async load():Promise<any[]> {\r\n        await  this.query.loadSchema();\r\n        let ret:any[];\r\n        if (this.query.isPaged === true)\r\n            ret = await this.query.page(this.param, this.pageStart, this.pageSize);\r\n        else {\r\n            let data = await this.query.query(this.param);\r\n            //let data = await this.query.unpackReturns(res);\r\n            ret = data[this.query.returns[0].name];\r\n        }\r\n        return ret;\r\n    }\r\n    protected setPageStart(item:any) {\r\n        if (item === undefined) this.pageStart = 0;\r\n    }\r\n}\r\n","import { StatelessComponent } from \"react\";\r\nimport { CEntity, EntityUI } from \"../CVEntity\";\r\nimport { Query } from \"../../entities\";\r\nimport { VQueryMain } from \"./vQueryMain\";\r\nimport { VQuerySelect } from \"./vQuerySelect\";\r\n\r\nexport interface QueryUI extends EntityUI {\r\n    CQuery?: typeof CQuery;\r\n    CQuerySelect?: typeof CQuerySelect;\r\n    main?: typeof VQueryMain;\r\n    row?: StatelessComponent;\r\n    queryRow?: StatelessComponent;\r\n    selectRow?: StatelessComponent;\r\n}\r\n\r\nexport abstract class CQueryBase extends CEntity<Query, QueryUI> {\r\n}\r\n\r\nexport class CQuery extends CQueryBase {\r\n    protected async internalStart() {\r\n        await this.openVPage(this.VQueryMain);\r\n    }\r\n\r\n    protected get VQueryMain():typeof VQueryMain {return this.ui && this.ui.main || VQueryMain}\r\n}\r\n\r\nexport class CQuerySelect extends CQueryBase {\r\n    protected async internalStart(param?:any) {\r\n        await this.openVPage(this.VQuerySelect, param);\r\n    }\r\n\r\n    protected get VQuerySelect():typeof VQuerySelect {return VQuerySelect}\r\n}\r\n","export * from './cQuery';\r\nexport * from './vQueryMain';\r\nexport * from './vQuerySelect';","import * as React from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport { observable } from 'mobx';\r\nimport { Schema, UiSchema, ItemSchema, UiItem, UiTextItem } from '../schema';\r\nimport { ResUploader } from '../resUploader';\r\nimport { Image } from '../image';\r\nimport { nav } from '../nav';\r\nimport { Page } from '../page';\r\nimport { ItemEdit } from './itemEdit';\r\n\r\nexport class ImageItemEdit extends ItemEdit {\r\n    protected uiItem: UiTextItem;\r\n    private resUploader: ResUploader;\r\n    @observable private resId: string;\r\n    @observable private overSize: boolean = false;\r\n\r\n    protected async internalStart():Promise<any> {\r\n        this.resId = this.value;        \r\n        return new Promise<any>((resolve, reject) => {\r\n            nav.push(React.createElement(this.page, {resolve:resolve, reject:reject}), ()=>reject());\r\n        });\r\n    }\r\n\r\n    private upload = async () => {\r\n        if (!this.resUploader) return;\r\n        let ret = await this.resUploader.upload();\r\n        if (ret === null) {\r\n            this.overSize = true;\r\n            setTimeout(() => this.overSize = false, 3000);\r\n            return;\r\n        }\r\n        this.resId = ret;\r\n        this.isChanged = (this.resId != this.value);\r\n    }\r\n\r\n    private page = observer((props:{resolve:(value:any)=>void, reject: (resean?:any)=>void}):JSX.Element => {\r\n        let {resolve} = props;\r\n        let right = <button\r\n            className=\"btn btn-sm btn-success\"\r\n            disabled={!this.isChanged}\r\n            onClick={()=>resolve(this.resId)}>保存</button>;\r\n        let overSize:any;\r\n        if (this.overSize === true) {\r\n            overSize = <div className=\"text-danger\">\r\n                <i className=\"fa fa-times-circle\" /> 图片文件大小超过2M，无法上传\r\n            </div>;\r\n        }\r\n        return <Page header={'更改' + this.label} right={right}>\r\n            <div className=\"my-3 px-3 py-3 bg-white\">\r\n                <div>\r\n                    <div>上传图片：</div>\r\n                    <div className=\"my-3\">\r\n                        <ResUploader ref={v=>this.resUploader=v} multiple={false} maxSize={2048} />\r\n                    </div>\r\n                    <div>\r\n                        <button className=\"btn btn-primary\" onClick={this.upload}>上传</button>\r\n                    </div>\r\n                </div>\r\n                {overSize}\r\n                <div className=\"small muted my-4\">支持JPG、GIF、PNG格式图片，不超过2M。</div>\r\n                <div className=\"d-flex\">\r\n                    <div className=\"w-12c h-12c mr-4\"\r\n                        style={{border: '1px dotted gray', padding: '8px'}}>\r\n                        <Image className=\"w-100 h-100\" src={this.resId} />\r\n                    </div>\r\n                    <div>\r\n                        <div className=\"small\">图片预览</div>\r\n                        <Image className=\"w-4c h-4c mt-3\" src={this.resId} />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </Page>;\r\n    })\r\n}\r\n","import * as React from 'react';\r\n\r\nexport function Loading() {\r\n    return <div className=\"d-flex h-100 align-items-center justify-content-center\">\r\n        <i className=\"fa fa-spinner fa-spin fa-2x fa-fw text-info\" />\r\n    </div>;\r\n}\r\n\r\n/*\r\nexport function Loading() {\r\n    return <div style={{height:'100%'}} className=\"d-flex flex-fill align-items-center justify-content-center\">\r\n    <div className=\"d-flex align-items-center justify-content-center slide text-info\" style={{width:'5em', height:'2em'}}>\r\n        加载中...\r\n    </div>\r\n    </div>\r\n}\r\n*/\r\n\r\n\r\n","import * as React from 'react';\r\nimport { nav } from './nav';\r\n\r\nexport interface ResUploaderProps {\r\n    className?: string;\r\n    multiple?: boolean;\r\n    maxSize?: number;\r\n    onFilesChange?: (evt: React.ChangeEvent<HTMLInputElement>) => void;\r\n}\r\n\r\nexport class ResUploader extends React.Component<ResUploaderProps> {\r\n    private fileInput: HTMLInputElement;\r\n\r\n    upload = async ():Promise<string> => {\r\n        let {maxSize} = this.props;\r\n        if (maxSize === undefined || maxSize <= 0) \r\n            maxSize = 100000000000;\r\n        else\r\n            maxSize = maxSize * 1024;\r\n        let resUrl = nav.resUrl + 'upload';\r\n        var files:FileList = this.fileInput.files;\r\n        var data = new FormData();\r\n        let len = files.length;\r\n        for (let i=0; i<len; i++) {\r\n            let file = files[i];\r\n            if (file.size > maxSize) return null;\r\n            data.append('files[]', file, file.name);\r\n        }\r\n  \r\n        try {\r\n            let abortController = new AbortController();\r\n            let res = await fetch(resUrl, {\r\n                method: \"POST\",\r\n                body: data,\r\n                signal: abortController.signal,\r\n            });\r\n            let json = await res.json();\r\n            return ':' + json.res.id;\r\n        }\r\n        catch (err) {\r\n            console.error('%s %s', resUrl, err);\r\n        }\r\n    }\r\n    render() {\r\n        let {className, multiple, onFilesChange} = this.props;\r\n        return <input \r\n            className={className}\r\n            ref={t=>this.fileInput=t} \r\n            onChange={onFilesChange}\r\n            type='file' name='file' multiple={multiple} />\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport _ from 'lodash';\r\nimport { Page, loadAppUqs, nav, appInFrame, Controller, TypeVPage, VPage, resLang, getExHash, isDevelopment, NavSettings, App} from 'tonva-tools';\r\nimport { List, LMR, FA } from 'tonva-react-form';\r\nimport { CUq, UqUI } from './uq';\r\nimport { centerApi } from '../centerApi';\r\n\r\nexport interface RoleAppUI {\r\n    CApp?: typeof CApp;\r\n    CUq?: typeof CUq;\r\n    main?: TypeVPage<CApp>;\r\n    uqs: {[uq:string]: UqUI | (()=>Promise<UqUI>)};\r\n    res?: any;\r\n}\r\n\r\nexport interface AppUI extends RoleAppUI, NavSettings {\r\n    appName: string; // 格式: owner/appName\r\n    roles?: {[role:string]: RoleAppUI | (()=>Promise<RoleAppUI>)};\r\n}\r\n\r\nexport class CApp extends Controller {\r\n    private appOwner:string;\r\n    private appName:string;\r\n    private cImportUqs: {[uq:string]: CUq} = {};\r\n    protected ui:AppUI;\r\n    id: number;\r\n    appUnits:any[];\r\n\r\n    constructor(ui:AppUI) {\r\n        super(resLang(ui && ui.res));\r\n        nav.setSettings(ui);\r\n        let tonvaApp = ui.appName;\r\n        if (tonvaApp === undefined) {\r\n            throw 'appName like \"owner/app\" must be defined in UI';\r\n        }\r\n        let parts = tonvaApp.split('/');\r\n        if (parts.length !== 2) {\r\n            throw 'tonvaApp name must be / separated, owner/app';\r\n        }\r\n        this.appOwner = parts[0];\r\n        this.appName = parts[1];\r\n        if (ui.uqs === undefined) ui.uqs = {};\r\n        this.ui = ui;\r\n        this.caption = this.res.caption || 'Tonva';\r\n    }\r\n    \r\n    readonly caption: string; // = 'View Model 版的 Uq App';\r\n    cUqCollection: {[uq:string]: CUq} = {};\r\n\r\n    async startDebug() {\r\n        let appName = this.appOwner + '/' + this.appName;\r\n        let cApp = new CApp({appName: appName, uqs:{}} );\r\n        let keepNavBackButton = true;\r\n        await cApp.start(keepNavBackButton);    \r\n    }\r\n\r\n    protected async loadUqs(app:App): Promise<string[]> {\r\n        let retErrors:string[] = [];\r\n        let unit = appInFrame.unit;\r\n        //let app = await loadAppUqs(this.appOwner, this.appName);\r\n        let {id, uqs} = app;\r\n        this.id = id;\r\n\r\n        let promises: PromiseLike<string>[] = [];\r\n        let promiseChecks: PromiseLike<boolean>[] = [];\r\n        let roleAppUI = await this.buildRoleAppUI();\r\n        this.ui = roleAppUI;\r\n        for (let appUq of uqs) {\r\n            let {id:uqId, uqOwner, uqName, access} = appUq;\r\n            let uq = uqOwner + '/' + uqName;\r\n            let uqUI = roleAppUI && roleAppUI.uqs && roleAppUI.uqs[uq];\r\n            let cUq = this.newCUq(uq, uqId, access, uqUI || {});\r\n            this.cUqCollection[uq] = cUq;\r\n            promises.push(cUq.loadSchema());\r\n            promiseChecks.push(cUq.entities.uqApi.checkAccess());\r\n        }\r\n        let results = await Promise.all(promises);\r\n        Promise.all(promiseChecks).then((checks) => {\r\n            for (let c of checks) {\r\n                if (c === false) {\r\n                    //debugger;\r\n                    //nav.start();\r\n                    //return;\r\n                }\r\n            }\r\n        });\r\n        for (let result of results)\r\n        {\r\n            let retError = result; // await cUq.loadSchema();\r\n            if (retError !== undefined) {\r\n                retErrors.push(retError);\r\n                continue;\r\n            }\r\n        }\r\n        if (retErrors.length === 0) return;\r\n        return retErrors;\r\n    }\r\n\r\n    private async buildRoleAppUI():Promise<AppUI> {\r\n        if (!this.ui) return undefined;\r\n        let {hashParam} = nav;\r\n        if (!hashParam) return this.ui;\r\n        let {roles} = this.ui;\r\n        let roleAppUI = roles && roles[hashParam];\r\n        if (!roleAppUI) return this.ui;\r\n        let ret:AppUI = {} as any;\r\n        for (let i in this.ui) {\r\n            if (i === 'roles') continue;\r\n            ret[i] = this.ui[i];\r\n        }\r\n        if (typeof roleAppUI === 'function') roleAppUI = await roleAppUI();\r\n        _.merge(ret, roleAppUI);\r\n        return ret;\r\n    }\r\n\r\n    getImportUq(uqOwner:string, uqName:string):CUq {\r\n        let uq = uqOwner + '/' + uqName;\r\n        let cUq = this.cImportUqs[uq];\r\n        if (cUq !== undefined) return cUq;\r\n        let ui = this.ui && this.ui.uqs && this.ui.uqs[uq];\r\n        let uqId = -1; // unknown\r\n        this.cImportUqs[uq] = cUq = this.getCUq(uq);\r\n        //this.newCUq(uq, uqId, undefined, ui || {});\r\n        /*\r\n        let retError = await cUq.loadSchema();\r\n        if (retError !== undefined) {\r\n            console.error(retError);\r\n            debugger;\r\n            return;\r\n        }\r\n        */\r\n        return cUq;\r\n    }\r\n\r\n    protected newCUq(uq:string, uqId:number, access:string, ui:any) {\r\n        let cUq = new (this.ui.CUq || CUq)(this, uq, this.id, uqId, access, ui);        \r\n        Object.setPrototypeOf(cUq.x, this.x);\r\n        return cUq;\r\n    }\r\n\r\n    get cUqArr():CUq[] {\r\n        let ret:CUq[] = [];\r\n        for (let i in this.cUqCollection) {\r\n            ret.push(this.cUqCollection[i]);\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    getCUq(uq:string):CUq {\r\n        return this.cUqCollection[uq];\r\n    }\r\n\r\n    protected get VAppMain():TypeVPage<CApp> {return (this.ui&&this.ui.main) || VAppMain}\r\n    protected async beforeStart():Promise<boolean> {\r\n        try {\r\n            let app = await loadAppUqs(this.appOwner, this.appName);\r\n            // if (isDevelopment === true) {\r\n            // 这段代码原本打算只是在程序员调试方式下使用，实际上，也可以开放给普通用户，production方式下\r\n                let {predefinedUnit} = appInFrame;\r\n                let {id} = app;\r\n                this.id = id;\r\n                let {user} = nav;\r\n                if (user !== undefined && user.id > 0) {\r\n                    this.appUnits = await centerApi.userAppUnits(this.id);\r\n                    switch (this.appUnits.length) {\r\n                        case 0:\r\n                            this.showUnsupport(predefinedUnit);\r\n                            return false;\r\n                        case 1:\r\n                            let appUnit = this.appUnits[0].id;\r\n                            if (appUnit === undefined || appUnit < 0 || \r\n                                predefinedUnit !== undefined && appUnit != predefinedUnit)\r\n                            {\r\n                                this.showUnsupport(predefinedUnit);\r\n                                return false;\r\n                            }\r\n                            appInFrame.unit = appUnit;\r\n                            break;\r\n                        default:\r\n                            if (predefinedUnit>0 && this.appUnits.find(v => v.id===predefinedUnit) !== undefined) {\r\n                                appInFrame.unit = predefinedUnit;\r\n                                break;\r\n                            }\r\n                            nav.push(<this.selectUnitPage />)\r\n                            return false;\r\n                    }\r\n                }\r\n            //}\r\n\r\n            let retErrors = await this.loadUqs(app);\r\n            if (retErrors !== undefined) {\r\n                this.openPage(<Page header=\"ERROR\">\r\n                    <div className=\"m-3\">\r\n                        <div>Load Uqs 发生错误：</div>\r\n                        {retErrors.map((r, i) => <div key={i}>{r}</div>)}\r\n                    </div>\r\n                </Page>);\r\n                return false;\r\n            }\r\n            return true;\r\n        }\r\n        catch (err) {\r\n            nav.push(<Page header=\"App start error!\">\r\n                <pre>\r\n                    {typeof err === 'string'? err : err.message}\r\n                </pre>\r\n            </Page>);\r\n            return false;\r\n        }\r\n    }\r\n\r\n    protected async internalStart(param:any) {\r\n        if (param !== true) {\r\n            this.clearPrevPages();\r\n        }\r\n        await this.showMainPage();\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        return this.renderView(this.VAppMain);\r\n    }\r\n\r\n    // 如果是独立app，删去显示app之前的页面。\r\n    // 如果非独立app，则不删\r\n    protected clearPrevPages() {\r\n        nav.clear();\r\n    }\r\n\r\n    private showUnsupport(predefinedUnit: number) {\r\n        this.clearPrevPages();\r\n        let {user} = nav;\r\n        let userName:string = user? user.name : '[未登录]';\r\n        this.openPage(<Page header=\"APP无法运行\" logout={true}>\r\n            <div className=\"m-3 text-danger container\">\r\n                <div className=\"form-group row\">\r\n                    <div className=\"col-2\">登录用户: </div>\r\n                    <div className=\"col\">{userName}</div>\r\n                </div>\r\n                <div className=\"form-group row\">\r\n                    <div className=\"col-2\">App:</div>\r\n                    <div className=\"col\">{`${this.appOwner}/${this.appName}`}</div>\r\n                </div>\r\n                <div className=\"form-group row\">\r\n                    <div className=\"col-2\">预设小号:</div>\r\n                    <div className=\"col\">{predefinedUnit || <small className=\"text-muted\">[无预设小号]</small>}</div>\r\n                </div>\r\n                <div className=\"form-group row\">\r\n                    <div className=\"col-2\">\r\n                        <FA name=\"exclamation-triangle\" />\r\n                    </div>\r\n                    <div className=\"col\">\r\n                        <div className=\"text-muted\">无法运行可能原因：</div>\r\n                        <ul className=\"p-0\">\r\n                            <li>没有小号运行 {this.ui.appName}</li>\r\n                            <li>用户 <b>{userName}</b> 没有加入任何一个运行{this.ui.appName}的小号</li>\r\n                            {\r\n                                predefinedUnit && \r\n                                <li>预设小号 <b>{predefinedUnit}</b> 没有运行App {this.ui.appName}</li>\r\n                            }\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n                {\r\n                    predefinedUnit || \r\n                    <div className=\"form-group row\">\r\n                    <div className=\"col-2\"></div>\r\n                    <div className=\"col\">\r\n                        预设小号定义在 public/unit.json 文件中。\r\n                        定义了这个文件的程序，只能由url直接启动。\r\n                        用户第一次访问app之后，会缓存在localStorage里。<br/>\r\n                        如果要删去缓存的预定义Unit，logout然后再login。\r\n                    </div>\r\n                </div>\r\n                }\r\n            </div>\r\n        </Page>)\r\n    }\r\n\r\n    private async showMainPage() {\r\n        // #tv-RwPBwMef-23-sheet-api-108\r\n        let exHash = getExHash();\r\n        if (exHash !== undefined) {\r\n            let parts = exHash.split('-');\r\n            if (parts.length > 3) {\r\n                let action = parts[3];\r\n                // sheet_debug 表示centerUrl是debug方式的\r\n                if (action === 'sheet' || action === 'sheet_debug') {\r\n                    let uqId = Number(parts[4]);\r\n                    let sheetTypeId = Number(parts[5]);\r\n                    let sheetId = Number(parts[6]);\r\n                    let cUq = this.getCUqFromId(uqId);\r\n                    if (cUq === undefined) {\r\n                        alert('unknown uqId: ' + uqId);\r\n                        return;\r\n                    }\r\n                    this.clearPrevPages();\r\n                    await cUq.navSheet(sheetTypeId, sheetId);\r\n                    return;\r\n                }\r\n            }\r\n        }\r\n        this.openVPage(this.VAppMain);\r\n    }\r\n\r\n    private getCUqFromId(uqId:number): CUq {\r\n        for (let i in this.cUqCollection) {\r\n            let cUq = this.cUqCollection[i];\r\n            if (cUq.id === uqId) return cUq;\r\n        }\r\n        return;\r\n    }\r\n\r\n    renderRow = (item: any, index: number):JSX.Element => {\r\n        let {id, nick, name} = item;\r\n        return <LMR className=\"px-3 py-2\" right={'id: ' + id}>\r\n            <div>{nick || name}</div>\r\n        </LMR>;\r\n    }\r\n    onRowClick = async (item: any) => {\r\n        appInFrame.unit = item.id; // 25;\r\n        await this.start();\r\n    }\r\n\r\n    protected selectUnitPage = () => {\r\n        return <Page header=\"选择小号\" logout={true}>\r\n            <List items={this.appUnits} item={{render: this.renderRow, onClick: this.onRowClick}}/>\r\n        </Page>\r\n    }\r\n}\r\n\r\nclass VAppMain extends VPage<CApp> {\r\n    async open(param?:any) {\r\n        this.openPage(this.appPage);\r\n    }\r\n\r\n    render(param?:any) {\r\n        return this.appContent();\r\n    }\r\n\r\n    protected appPage = () => {\r\n        let {caption} = this.controller;\r\n        return <Page header={caption} logout={async()=>{appInFrame.unit = undefined}}>\r\n            {this.appContent()}\r\n        </Page>;\r\n    }\r\n\r\n    protected appContent = () => {\r\n        let {cUqArr} = this.controller;\r\n        let content:any;\r\n        if (cUqArr.length === 0) {\r\n            content = <div className=\"text-danger\">\r\n                <FA name=\"\" /> 此APP没有绑定任何的UQ\r\n            </div>;\r\n        }\r\n        else {\r\n            content = cUqArr.map((v,i) => <div key={i}>{v.render()}</div>);\r\n        }\r\n        return <>{content}</>;\r\n    };\r\n}\r\n","export * from './rule';\r\nexport * from './field';\r\nexport * from './face';\r\nexport * from './rowContainer';\r\nexport * from './formView';\r\nexport * from './TonvaForm';\r\nexport {ControlBase} from './control';\r\n","import * as React from 'react';\r\nimport {FormEvent} from 'react';\r\nimport {computed} from 'mobx';\r\nimport {uid} from '../uid';\r\nimport {Rule} from './rule';\r\nimport {Field} from './field';\r\nimport {Face} from './face';\r\nimport {CreateControl, ButtonsControl} from './control';\r\nimport {RowContainer, CreateRow, bootstrapCreateRow, elementCreateRow} from './rowContainer';\r\n\r\nexport interface FieldView {\r\n    field: Field;\r\n    face?: Face;\r\n}\r\n\r\nexport interface LabeledRow {\r\n    label?: string;\r\n    createRow?: CreateRow;\r\n    createControl?: CreateControl;\r\n    help?: JSX.Element;\r\n}\r\n\r\nexport interface FieldRow extends LabeledRow, FieldView {\r\n}\r\n\r\nexport interface GroupRow extends LabeledRow {\r\n    group: FieldView[];\r\n}\r\n\r\nexport type LabelFormRow = FieldRow|GroupRow|LabeledRow;\r\nexport type FormRow = LabelFormRow|JSX.Element;\r\n\r\nexport interface SubmitResult {\r\n    success: boolean;\r\n    message?: string\r\n    result?: any;\r\n}\r\n\r\nexport interface FormProps {\r\n    formRows: FormRow[];\r\n    //context?: any;              // form context，比如，可以是EntitiesUI\r\n    rules?: Rule | Rule[];\r\n    onSubmit: (values:any) => Promise<SubmitResult|undefined>;\r\n    submitButton?: string|JSX.Element;\r\n    otherButton?: string|JSX.Element;\r\n    onOther?: (values:any) => void;\r\n    createRow?: CreateRow;\r\n    createControl?: CreateControl;\r\n    readOnly?: boolean;\r\n}\r\n\r\nexport class FormView {\r\n    uid:string;\r\n    private rows: RowContainer[] = [];\r\n    private buttonsRow: RowContainer;\r\n    props: FormProps;\r\n    createControl?: CreateControl;\r\n    constructor(props:FormProps) {\r\n        this.uid = uid();\r\n        this.props = props;\r\n        this.buildRows(props);\r\n        this.createControl = props.createControl;\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n    }\r\n\r\n    @computed get hasError():boolean {\r\n        let ret = this.rows.map((v, index) => index + ': ' + v.hasError + '\\n');\r\n        console.log(ret);\r\n        return this.rows.some(row => row.hasError);\r\n    }\r\n    @computed get nothing():boolean {\r\n        let ret = this.rows.every(row => !row.filled);\r\n        return ret;\r\n    }\r\n\r\n    readValues():any {\r\n        let values = {} as any;\r\n        for (let row of this.rows) {\r\n            row.readValues(values);\r\n        }\r\n        return values;\r\n    }\r\n\r\n    clear() {\r\n        for (let row of this.rows) {\r\n            row.clear();\r\n        }\r\n    }\r\n\r\n    clearErrors() {\r\n        for (let row of this.rows) {\r\n            row.clearErrors();\r\n        }\r\n    }\r\n\r\n    setError(fieldName:string, error:string) {\r\n        for (let row of this.rows) {\r\n            row.setError(fieldName, error);\r\n        }\r\n    }\r\n\r\n    setInitValues(initValues:any) {\r\n        if (initValues === undefined) return;\r\n        for (let row of this.rows) {\r\n            row.setInitValues(initValues);\r\n        }\r\n    }\r\n\r\n    private buildRows(props:FormProps) {\r\n        let {formRows, createRow} = props;\r\n        if (formRows !== undefined) {\r\n            for (let row of formRows) {\r\n                this.rows.push(this.buildRow(row, createRow));\r\n            }\r\n            if (this.props.readOnly !== true) {\r\n                this.buttonsRow = this.buildRow({createControl:this.createButtons.bind(this)}, undefined);\r\n            }\r\n        }\r\n        else {\r\n            this.rows.push(elementCreateRow(this, <div className=\"text-warning\">TonvaForm need formRows defined</div>));\r\n        }\r\n    }\r\n\r\n    private buildRow(formRow: FormRow, formRowCreator: CreateRow):RowContainer {\r\n        let createRow:CreateRow;\r\n        let type = (formRow as JSX.Element).type;\r\n        if (type !== undefined) {\r\n            createRow = elementCreateRow;\r\n        }\r\n        else {\r\n            createRow = (formRow as (FieldRow | GroupRow | LabeledRow)).createRow;\r\n            if (createRow === undefined) {\r\n                createRow = formRowCreator;\r\n                if (createRow === undefined) createRow = bootstrapCreateRow;\r\n            }\r\n        }\r\n        let row = createRow(this, formRow);\r\n        return row;\r\n    }\r\n\r\n    private createButtons(form:FormView, row: FormRow) {\r\n        return new ButtonsControl(form);\r\n    }\r\n\r\n    private isOk():boolean {\r\n        let isOk = true;\r\n        for (let row of this.rows) {\r\n            if (!row.isOk()) isOk = false;\r\n        }\r\n        return isOk;\r\n    }\r\n\r\n    render():JSX.Element {\r\n        return <form onSubmit={this.onSubmit}>\r\n            {this.rows.map((row,index) => row.render(this.uid + index))}\r\n            {this.buttons()}\r\n        </form>;\r\n    }\r\n\r\n    buttons():JSX.Element {\r\n        if (this.buttonsRow === undefined) return;\r\n        return this.buttonsRow.render(this.uid + this.rows.length);\r\n    }\r\n    \r\n    async onSubmit(event:FormEvent<HTMLFormElement>) {\r\n        event.preventDefault();\r\n        if (!this.isOk()) return;\r\n        let values = this.readValues();\r\n        await this.props.onSubmit(values);\r\n    }\r\n}\r\n","import React from 'react';\r\nimport { FA } from \"tonva-react-form\";\r\n\r\nfunction icon(className:string, name:string) {\r\n    return <FA className={className} name={name} fixWidth={true} />;\r\n}\r\n/*\r\nexport interface EntityRes {\r\n    caption: string;\r\n    icon: JSX.Element;\r\n}\r\n*/\r\n\r\nexport const entityIcons:{[type:string]:JSX.Element} = {\r\n    tuid: icon('text-info', 'list-alt'),\r\n    action: icon('text-info', 'hand-o-right'),\r\n    map: icon('text-muted', 'list-ul'),\r\n    book: icon('text-muted', 'book'),\r\n    query: icon('text-warning', 'search'),\r\n    history: icon('text-info', 'hand-o-right'),\r\n    pending: icon('text-info', 'forward'),\r\n    sheet: icon('text-primary', 'wpforms'),\r\n};\r\n","import { Controller } from \"tonva-tools\";\r\nimport { CUq } from \"./uq\";\r\n\r\nexport abstract class ControllerUq extends Controller {\r\n    constructor(cUq: CUq, res:any) {\r\n        super(res);\r\n        this.cUq = cUq;\r\n    }\r\n    cUq: CUq;\r\n}\r\n","import {CenterApi as CenterApiBase} from 'tonva-tools';\r\n\r\n//\r\n\r\nexport class CenterApi extends CenterApiBase {\r\n    async userAppUnits(app:number):Promise<any[]> {\r\n        return await this.get('tie/user-app-units', {app:app});\r\n    }\r\n}\r\n\r\nexport const centerApi = new CenterApi('tv/', undefined);\r\n","import * as React from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport { Page } from 'tonva-tools';\r\nimport { List, Muted, LMR } from 'tonva-react-form';\r\nimport { VEntity } from '../CVEntity';\r\nimport { Sheet } from '../../entities';\r\nimport { CSheet, SheetUI } from './cSheet';\r\n\r\nexport class VSheetMain extends VEntity<Sheet, SheetUI, CSheet> {\r\n    async open() {\r\n        this.openPage(this.view);\r\n    }\r\n\r\n    newClick = () => this.event('new');\r\n    schemaClick = () => this.event('schema'); \r\n    archivesClick = () => this.event('archives');\r\n    sheetStateClick = (state) => this.event('state', state);\r\n\r\n    renderState = (item:any, index:number) => {\r\n        let {state, count} = item;\r\n        if (count === 0) return null;\r\n        let badge = <span className=\"badge badge-success ml-5 align-self-end\">{count}</span>;\r\n        return <LMR className=\"px-3 py-2\" left={this.controller.getStateLabel(state)} right={badge} />;\r\n    }\r\n\r\n    protected view = observer(() => {\r\n        let list = this.controller.statesCount.filter(row=>row.count);\r\n        let right = <button className=\"btn btn-outline-primary\" onClick={this.archivesClick}>已归档</button>;\r\n        let templet:any;\r\n        if (this.isDev === true) {\r\n            templet = <button className=\"btn btn-primary mr-2\" color=\"primary\" onClick={this.schemaClick}>模板</button>;\r\n        }\r\n        return <Page header={this.label}>\r\n            <LMR\r\n                className=\"mx-3 my-2\"\r\n                right={right}>\r\n                <button className=\"btn btn-primary mr-2\" color=\"primary\" onClick={this.newClick}>新建</button>\r\n                {templet}\r\n            </LMR>\r\n            <List className=\"my-2\"\r\n                header={<Muted className=\"mx-3 my-1\">待处理{this.label}</Muted>}\r\n                none=\"[ 无 ]\"\r\n                items={list}\r\n                item={{render:this.renderState, onClick:this.sheetStateClick}} />\r\n        </Page>;\r\n    });\r\n}\r\n","import * as React from 'react';\r\nimport { Page } from 'tonva-tools';\r\nimport { FA } from 'tonva-react-form';\r\nimport { Sheet } from '../../entities';\r\nimport { VForm } from '../form';\r\nimport { VEntity } from '../CVEntity';\r\nimport { SheetUI, CSheet } from './cSheet';\r\n\r\nexport class VSheetNew extends VEntity<Sheet, SheetUI, CSheet> {\r\n    vForm: VForm;\r\n\r\n    async open(param?:any) {\r\n        this.vForm = this.createForm(this.onSubmit, param);\r\n        this.openPage(this.view);\r\n    }\r\n\r\n    private onSubmit = async ():Promise<void> => {\r\n        let values = this.vForm.getValues();\r\n        let valuesWithBox = this.vForm.values;\r\n        //let ret = \r\n        await this.controller.onSave(values, valuesWithBox);\r\n        /*\r\n        this.ceasePage();\r\n        //this.openPage(this.finishedPage);\r\n        await this.controller.showSaved(ret);\r\n        */\r\n    }\r\n\r\n    protected view = () => <Page header={this.label}>\r\n        {this.vForm.render()}\r\n    </Page>;\r\n}\r\n","import * as React from 'react';\r\nimport {List, Muted, LMR, EasyDate, FA} from 'tonva-react-form';\r\nimport { Sheet } from '../../entities';\r\nimport { VForm } from '../form';\r\nimport { VEntity } from '../CVEntity';\r\nimport { CSheet, SheetUI, SheetData } from './cSheet';\r\n\r\nconst leftFlowStyle = {width: '8rem'};\r\n\r\nexport abstract class VSheetView extends VEntity<Sheet, SheetUI, CSheet> {\r\n    protected vForm: VForm;\r\n    protected sheetData: SheetData;\r\n    //data: any;\r\n    //state: string;\r\n    //flows:any[];\r\n\r\n    flowRow = (item:any, index:number):JSX.Element => {\r\n        let {date, user, preState, state, action} = item;\r\n        if (action === undefined) action = <><FA className=\"text-primary\" name=\"pencil-square-o\" /> 制单</>;\r\n        let to;\r\n        switch (state) {\r\n            case '$': break;\r\n            case '#': to = <><FA className=\"text-success\" name=\"file-archive-o\" /></>; break;\r\n            default: to = <><FA className=\"text-muted\" name=\"arrow-right\" /> &nbsp; {state}</>; break;\r\n        }\r\n        /*\r\n        return <div className=\"row\">\r\n            <div className=\"col-sm\"></div>\r\n            <div className=\"col-sm\"><div className=\"p-2\">{to}</div></div>\r\n            <div className=\"col-sm text-right\"><div className=\"p-2\"><Muted><EasyDate date={date} /></Muted></div></div>\r\n        </div>;\r\n        */\r\n        return <LMR \r\n            left={<div className=\"pl-3 py-2\" style={leftFlowStyle}>{action}</div>}\r\n            right={<div className=\"p-2\"><Muted><EasyDate date={date} /></Muted></div>}>\r\n            <div className=\"p-2\">{to}</div>\r\n        </LMR>;\r\n    }\r\n\r\n    protected sheetView = () => {\r\n        let {brief, flows} = this.sheetData;\r\n        let removed;\r\n        if (brief.state === '-')\r\n            removed = <div className=\"mx-3 my-2\" style={{color:'red'}}>本单据作废</div>;\r\n        return <div>\r\n            {removed}\r\n            {this.vForm.render()}\r\n    \r\n            <List header={<Muted className=\"mx-3 my-1\">流程</Muted>}\r\n                items={flows}\r\n                item={{render:this.flowRow}}/>\r\n        </div>;\r\n    };\r\n}\r\n","import * as React from 'react';\r\nimport { Page } from 'tonva-tools';\r\nimport { VForm, FormMode } from '../form';\r\nimport { VSheetView } from './vSheetView';\r\nimport { SheetData } from './cSheet';\r\n\r\nexport class VSheetEdit extends VSheetView { //VEntity<Sheet, SheetUI, CSheet> {\r\n    protected sheetData: SheetData;\r\n    async open(param: SheetData) {\r\n        this.sheetData = param;\r\n        this.vForm = this.createForm(this.onSubmit, param.data, FormMode.edit);\r\n        this.openPage(this.view);\r\n    }\r\n\r\n    onSubmit = async ():Promise<void> => {\r\n        let values = this.vForm.getValues();\r\n        await this.controller.saveSheet(values, this.vForm.values);\r\n        this.closePage();\r\n        this.returnCall(this.vForm.values);\r\n    }\r\n\r\n    protected view = () => <Page header={this.label}>\r\n        {this.vForm.render()}\r\n    </Page>;\r\n}\r\n","import React from 'react';\r\nimport classNames from 'classnames';\r\nimport { nav, Page } from 'tonva-tools';\r\nimport { FA } from 'tonva-react-form';\r\nimport { VSheetView } from './vSheetView';\r\nimport { SheetData } from './cSheet';\r\n\r\nexport class VSheetAction extends VSheetView { \r\n    async open(sheetData:SheetData) {\r\n        this.sheetData = sheetData;\r\n        //let {brief, data, flows} = await this.controller.getSheetData(sheetId);\r\n        //this.brief = brief;\r\n        //this.flows = flows;\r\n        //this.data = data;\r\n        //this.state = this.brief.state;\r\n        this.vForm = this.createForm(undefined, sheetData.data);\r\n        this.openPage(this.page);\r\n    }\r\n\r\n    actionClick = async (action:any) => {\r\n        let {id, flow, state} = this.sheetData.brief;\r\n        let res = await this.controller.action(id, flow, state, action.name);\r\n        this.ceasePage();\r\n        this.openPage(this.acted);\r\n        //alert(jsonStringify(res));\r\n        //await this.backPage();\r\n    }\r\n\r\n    deleteClick = async () => {\r\n        alert('单据作废：程序正在设计中');\r\n    }\r\n\r\n    editClick = async () => {\r\n        //alert('修改单据：程序正在设计中');\r\n        let values = await this.controller.editSheet(this.sheetData);\r\n        this.vForm.setValues(values);\r\n    }\r\n\r\n    protected page = () => {\r\n        let {brief} = this.sheetData;\r\n        let {state, no} = brief;\r\n        let stateLabel = this.controller.getStateLabel(state);\r\n        let {states} = this.entity;\r\n        let s = states.find(v => v.name === state);\r\n        let actionButtons, startButtons;\r\n        if (s === undefined) {\r\n            let text:string, cn:string;\r\n            switch (state) {\r\n                default:\r\n                    text = '不认识的单据状态\\'' + state + '\\'';\r\n                    cn = 'text-info';\r\n                    break;\r\n                case '-': \r\n                    text = '已作废';\r\n                    cn = 'text-danger';\r\n                    break;\r\n                case '#':\r\n                    text = '已归档';\r\n                    cn = 'text-success';\r\n                    break;\r\n            }\r\n            actionButtons = <div className={classNames(cn)}>[{text}]</div>;\r\n        }\r\n        else {\r\n            actionButtons = <div className=\"flex-grow-1\">{s.actions.map((v,index) => \r\n                <button\r\n                    key={index}\r\n                    className=\"btn btn-primary mr-2\"\r\n                    onClick={()=>this.actionClick(v)}\r\n                >\r\n                    {this.controller.getActionLabel(state, v.name)}\r\n                </button>)}\r\n            </div>;\r\n            if (state === '$') {\r\n                startButtons = <div>\r\n                    <button className=\"btn btn-outline-info ml-2\" onClick={this.editClick}>修改</button>\r\n                    <button className=\"btn btn-outline-danger ml-2\" onClick={this.deleteClick}>作废</button>\r\n                </div>\r\n            }\r\n        };\r\n        return <Page header={this.label + ':' + stateLabel + '-' + no}>\r\n            <div className=\"mb-2\">\r\n                <div className=\"d-flex px-3 py-2 border-bottom bg-light\">\r\n                    {actionButtons}\r\n                    {startButtons}\r\n                </div>\r\n                <this.sheetView />\r\n            </div>\r\n        </Page>;\r\n    }\r\n\r\n    private acted = () => {\r\n        let {discription} = this.sheetData.brief;\r\n        return <Page header=\"已处理\" back=\"close\">\r\n            <div className=\"p-3 d-flex flex-column align-items-center\">\r\n                <div className=\"p-3\">{discription}</div>\r\n                <div className=\"text-success\"><FA name=\"check-circle-o\" /> 单据已处理！</div>\r\n                <div className=\"p-3\">\r\n                    <button className=\"btn btn-outline-info\" onClick={()=>this.backPage()}>返回</button>\r\n                </div>\r\n            </div>\r\n        </Page>\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { Page } from 'tonva-tools';\r\nimport { VEntity } from '../CVEntity';\r\nimport { Sheet } from '../../entities';\r\nimport { SheetUI, CSheet } from './cSheet';\r\n\r\nexport class VSheetSchema extends VEntity<Sheet, SheetUI, CSheet> {\r\n    async open(param?:any) {\r\n        this.openPage(this.view);\r\n    }\r\n\r\n    protected view = () => <Page header={this.label + \"模板\"}>\r\n        <pre className=\"mx-3 my-2\">{this.entity.schemaStringify()}</pre>\r\n    </Page>;\r\n}\r\n\r\n","import * as React from 'react';\r\nimport { Page } from 'tonva-tools';\r\nimport {List, LMR, FA, EasyDate, Muted} from 'tonva-react-form';\r\nimport { VEntity } from '../CVEntity';\r\nimport { Sheet } from '../../entities';\r\nimport { SheetUI, CSheet } from './cSheet';\r\n\r\nexport class VArchives extends VEntity<Sheet, SheetUI, CSheet> {\r\n    list: any[];\r\n\r\n    async open() {\r\n        this.list = await this.entity.getArchives(undefined, 10);\r\n        this.openPage(this.view);\r\n    }\r\n\r\n    archiveClick = async (brief:any) => {\r\n        if (brief.processing===1) return;\r\n        this.event('archived', brief);\r\n    }\r\n    archiveRow = (row:any, index:number) => {\r\n        let {id, no, discription, date} = row;\r\n        let left = <>\r\n            {row.processing===1? '... ' : ''}\r\n            {row.no} &nbsp; {row.discription}\r\n        </>;\r\n        let right = <Muted><EasyDate date={date} /></Muted>;\r\n        return <LMR className=\"px-3 py-2\" left={left} right={right} />\r\n    }\r\n\r\n    protected view = () => {\r\n        return <Page header={'已归档' + this.label}>\r\n            <List items={this.list} item={{render:this.archiveRow, onClick:this.archiveClick}} />\r\n        </Page>;\r\n    };\r\n}\r\n","import * as React from 'react';\r\nimport { Page, nav } from 'tonva-tools';\r\nimport { List, Muted, FA, LMR, EasyDate } from 'tonva-react-form';\r\nimport { VEntity } from '../CVEntity';\r\nimport { Sheet } from '../../entities';\r\nimport { CSheet, SheetUI } from './cSheet';\r\n\r\nexport class VSheetList extends VEntity<Sheet, SheetUI, CSheet> {\r\n    protected row: (values) => JSX.Element;\r\n    stateName: string;\r\n    stateLabel: string;\r\n\r\n    async open(item:any) {\r\n        this.row = this.ui.listRow || this.rowContent;\r\n        this.stateName = item.state;\r\n        this.stateLabel = this.controller.getStateLabel(this.stateName);\r\n        //await this.controller.getStateSheets(this.stateName, 0, 10);\r\n        await this.controller.pageStateItems.first(this.stateName);\r\n        this.openPage(this.view);\r\n    }\r\n\r\n    rowClick = async (brief:any) => {\r\n        if (brief.processing===1) {\r\n            this.event('processing', brief.id);\r\n            return;\r\n        }\r\n        this.event('action', brief.id);\r\n    }\r\n\r\n    private onScrollBottom = () => {\r\n        console.log('onScrollBottom');\r\n        this.controller.pageStateItems.more();\r\n    }\r\n\r\n    protected rowContent = (row:any):JSX.Element => {\r\n        let {id, no, discription, date, processing} = row;\r\n        let left = <>            \r\n            {no} &nbsp; <Muted>{discription}</Muted> {processing===1? '...' : ''}\r\n        </>;\r\n        let right = <Muted><EasyDate date={date} /></Muted>;\r\n        return <LMR className=\"px-3 py-2\" left={left} right={right} />;\r\n    }\r\n\r\n    private renderRow = (row:any, index:number) => <this.row {...row} />\r\n\r\n    protected view = () => {\r\n        //let sheets = this.controller.stateSheets;\r\n        let {pageStateItems} = this.controller;\r\n        return <Page header={this.label + ' - ' + this.stateLabel} onScrollBottom={this.onScrollBottom}>\r\n            <List items={pageStateItems} item={{render:this.renderRow, onClick:this.rowClick}} />\r\n        </Page>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {Page} from 'tonva-tools';\r\nimport { VSheetView } from './vSheetView';\r\nimport { CSheet, SheetUI, SheetData } from './cSheet';\r\n\r\nexport interface State {\r\n    flows: any;\r\n    data: any;\r\n}\r\nexport class VArchived extends VSheetView {\r\n    //protected controller: CSheet;\r\n    //brief: any;\r\n\r\n    async open(sheetData:SheetData) {\r\n        this.sheetData = sheetData;\r\n        /*\r\n        let {brief, data, flows} = await this.controller.getArchived(inBrief.id);\r\n        this.brief = brief;\r\n        this.data = data;\r\n        this.flows = flows;\r\n        */\r\n        this.vForm = this.createForm(undefined, this.sheetData.data);\r\n        this.openPage(this.view);\r\n    }\r\n\r\n    protected view = () => {\r\n        let {brief} = this.sheetData;\r\n        return <Page header={this.label + ':' + '-' + brief.no}>\r\n            <this.sheetView />\r\n        </Page>;\r\n    };\r\n}\r\n","import { Sheet } from \"../../entities\";\r\nimport { SheetUI, CSheet } from \"./cSheet\";\r\nimport { VEntity } from \"../CVEntity\";\r\n\r\nexport abstract class VSheet extends VEntity<Sheet, SheetUI, CSheet> {\r\n}\r\n","import * as React from 'react';\r\nimport { Page } from 'tonva-tools';\r\nimport { FA } from 'tonva-react-form';\r\nimport { VSheet } from \"./vSheet\";\r\n\r\nexport class VSheetSaved extends VSheet {\r\n    private brief: any;\r\n    async open(brief?:any) {\r\n        this.brief = brief;\r\n        this.openPage(this.view);\r\n    }\r\n\r\n    private restart = async () => {\r\n        this.ceasePage();\r\n        await this.event('new');\r\n    }\r\n\r\n    actionClick = async (action:any) => {\r\n        this.ceasePage();\r\n        let {id, flow, state} = this.brief;\r\n        let res = await this.controller.action(id, flow, state, action.name);\r\n        this.openPage(this.acted);\r\n    }\r\n\r\n    private buttons = <>\r\n        <button className=\"btn btn-outline-primary mr-3\" onClick={this.restart}>继续开单</button>\r\n        <button className=\"btn btn-outline-info\" onClick={()=>this.backPage()}>返回</button>\r\n    </>;\r\n\r\n    private view = () => {\r\n        let {states} = this.entity;\r\n        const state = '$';\r\n        let s = states.find(v => v.name === state);\r\n        let actionButtons = <>{s.actions.map((v,index) => \r\n            <button\r\n                key={index}\r\n                className=\"btn btn-primary mr-3\"\r\n                onClick={()=>this.actionClick(v)}\r\n            >\r\n                {this.controller.getActionLabel(state, v.name)}\r\n            </button>)}\r\n        </>;\r\n        return <Page header=\"已保存\" back=\"close\">\r\n            <div className=\"p-3 d-flex flex-column align-items-center\">\r\n                <div className=\"text-success\"><FA name=\"check-circle-o\" /> 单据已保存！系统尚未处理</div>\r\n                <div className=\"p-3\">\r\n                    {actionButtons}\r\n                    {this.buttons}\r\n                </div>\r\n            </div>\r\n        </Page>;\r\n    }\r\n\r\n    private acted = () => {\r\n        return <Page>\r\n            <div className=\"p-3 d-flex flex-column align-items-center\">\r\n                <div className=\"text-success\"><FA name=\"check-circle-o\" /> 单据已处理！</div>\r\n                <div className=\"p-3\">\r\n                    {this.buttons}\r\n                </div>\r\n            </div>\r\n        </Page>\r\n    }\r\n}\r\n","import React from 'react';\r\nimport { nav, Page } from 'tonva-tools';\r\nimport { VSheetView } from './vSheetView';\r\nimport { SheetData } from './cSheet';\r\n\r\nexport class VSheetProcessing extends VSheetView { \r\n    async open(sheetData:SheetData) {\r\n        this.sheetData = sheetData;\r\n        //let {brief, data, flows} = await this.controller.getSheetData(sheetId);\r\n        //this.brief = brief;\r\n        //this.flows = flows;\r\n        //this.data = data;\r\n        //this.state = this.brief.state;\r\n        this.vForm = this.createForm(undefined, sheetData.data);\r\n        this.openPage(this.page);\r\n    }\r\n\r\n    protected page = () => {\r\n        let {brief} = this.sheetData;\r\n        let {state, no} = brief;\r\n        let stateLabel = this.controller.getStateLabel(state);\r\n        return <Page header={this.label + ':' + stateLabel + '-' + no}>\r\n            <div className=\"mb-2\">\r\n                <div className=\"d-flex px-3 py-2 border-bottom bg-light\">\r\n                    正在处理中...\r\n                </div>\r\n                <this.sheetView />\r\n            </div>\r\n        </Page>;\r\n    }\r\n}\r\n","import { IObservableArray, observable } from \"mobx\";\r\nimport { TypeVPage, VPage, PageItems, postWsToTop } from 'tonva-tools';\r\nimport { Sheet, StateCount } from \"../../entities\";\r\nimport { CEntity, EntityUI, VEntity } from \"../CVEntity\";\r\nimport { VSheetMain } from \"./vMain\";\r\nimport { VSheetNew } from \"./vNew\";\r\nimport { VSheetEdit } from \"./vEdit\";\r\nimport { VSheetAction } from \"./vSheetAction\";\r\nimport { VSheetSchema } from \"./vSchema\";\r\nimport { VArchives } from \"./vArchives\";\r\nimport { VSheetList } from \"./vList\";\r\nimport { VArchived } from \"./vArchived\";\r\nimport { VSheetSaved } from \"./vSaved\";\r\nimport { VSheetProcessing } from \"./vSheetProcessing\";\r\n\r\nexport interface SheetActionUI {\r\n    label: string;\r\n}\r\n\r\nexport interface StateUI {\r\n    label: string;\r\n    actions: {[name:string]: SheetActionUI}\r\n}\r\n\r\nexport interface SheetUI extends EntityUI {\r\n    CSheet?: typeof CSheet;\r\n    states?: {[name:string]: StateUI};\r\n    main?: TypeVPage<CSheet>;\r\n    sheetNew?: TypeVPage<CSheet>;\r\n    sheetSaved?: TypeVPage<CSheet>;\r\n    sheetEdit?: TypeVPage<CSheet>;\r\n    sheetAction?: TypeVPage<CSheet>;\r\n    listRow?: (row:any) => JSX.Element;\r\n    sheetTitle?: (sheetValues:any, x:any) => string;      // 返回单据的描述\r\n}\r\n\r\nexport interface SheetData {\r\n    brief: any;\r\n    data: any;\r\n    flows: any[];\r\n}\r\n\r\nexport class CSheet extends CEntity<Sheet, SheetUI> {\r\n    statesCount:IObservableArray<StateCount> = observable.array<StateCount>([], {deep:true});\r\n    curState:string;\r\n    pageStateItems: PageItems<any>;\r\n\r\n    protected async internalStart() {\r\n        await this.loadStateSheetCount();\r\n        this.pageStateItems = this.entity.createPageStateItems();\r\n        await this.openVPage(this.VSheetMain);\r\n    }\r\n\r\n    protected async onMessage(msg: any):Promise<void> {\r\n        let {type, body, from, to, push} = msg;\r\n        if (type === 'sheet') this.onSheet(from, to, body);\r\n    }\r\n    private onSheet(from:number, to:number[], sheetData:any) {\r\n        let me = this.user.id;\r\n        let {id, preState, state} = sheetData;\r\n        console.log({$:'onMessage sheet', from:from, to:to.join(','), id:id, preState:preState, state:state, me:me, sheetData:sheetData})\r\n        if (from === me) {\r\n            this.sheetActPreState(id, preState);\r\n        }\r\n        if (to.find(v=>v===me) !== undefined) {\r\n            this.sheetActState(id, state, sheetData);\r\n        }\r\n    }\r\n    private sheetActPreState(id:number, preState:string) {\r\n        this.changeStateCount(preState, -1);\r\n        if (this.curState === undefined || this.curState !== preState) return;\r\n        /*\r\n        let index = this.stateSheets.findIndex(v => v.id === id);\r\n        if (index>=0) {\r\n            this.stateSheets.splice(index, 1);\r\n        }*/\r\n        let index = this.pageStateItems.items.findIndex(v => v.id === id);\r\n        if (index>=0) {\r\n            this.pageStateItems.items.splice(index, 1);\r\n        }\r\n    }\r\n\r\n    private sheetActState(id:number, state:string, msg:any) {\r\n        this.changeStateCount(state, 1);\r\n        if (this.curState === undefined || this.curState !== state) return;\r\n        /*\r\n        if (this.stateSheets.findIndex(v => v.id === id) < 0) {\r\n            this.stateSheets.push(msg);\r\n        }\r\n        */\r\n        if (this.pageStateItems.items.findIndex(v => v.id === id) < 0) {\r\n            this.pageStateItems.items.push(msg);\r\n        }\r\n    }\r\n\r\n    private changeStateCount(state:string, delta:number) {\r\n        if (state === undefined) return;\r\n        let index = this.statesCount.findIndex(v => v.state === state);\r\n        console.log({$:'changeState', state: state, delta: delta, index: index});\r\n        if (index < 0) return;\r\n        let stateCount = this.statesCount[index];\r\n        stateCount.count += delta;\r\n        if (stateCount.count < 0) stateCount.count = 0;\r\n    }\r\n\r\n    protected get VSheetMain():TypeVPage<CSheet> {return (this.ui&&this.ui.main) || VSheetMain}\r\n    protected get VSheetNew(): TypeVPage<CSheet> {return this.ui.sheetNew || VSheetNew}\r\n    protected get VSheetSaved(): TypeVPage<CSheet> {return this.ui.sheetSaved || VSheetSaved}\r\n    protected get VSheetEdit(): TypeVPage<CSheet> {return this.ui.sheetEdit || VSheetEdit}\r\n    protected get VSheetSchema(): TypeVPage<CSheet> {return VSheetSchema}\r\n    protected get VArchives(): TypeVPage<CSheet> {return VArchives}\r\n    protected get VArchived(): TypeVPage<CSheet> {return VArchived}\r\n    protected get VSheetList(): TypeVPage<CSheet> {return VSheetList}\r\n    protected get VSheetAction(): TypeVPage<CSheet> {return this.ui.sheetAction || VSheetAction}\r\n    protected get VSheetProcessing(): TypeVPage<CSheet> {return VSheetProcessing}\r\n    protected async onEvent(type:string, value:any) {\r\n        let c: TypeVPage<CSheet>;\r\n        switch (type) {\r\n            default: return;\r\n            case 'new': c = this.VSheetNew; break;\r\n            case 'schema': c = this.VSheetSchema; break;\r\n            case 'archives': c = this.VArchives; break;\r\n            case 'state':\r\n                this.curState = value.state;\r\n                c = this.VSheetList;\r\n                break;\r\n            case 'archived':\r\n                await this.showArchived(value); return;\r\n            case 'action':\r\n                await this.showAction(value); return;\r\n            case 'processing':\r\n                await this.showProcessing(value); return;\r\n        }\r\n        await this.openVPage(c, value);\r\n    }\r\n\r\n    async startSheet(sheetId:number) {\r\n        if (await this.beforeStart() === false) return;\r\n        await this.onEvent('action', sheetId);\r\n    }\r\n\r\n    async showAction(sheetId:number) {\r\n        let sheetData:SheetData = await this.getSheetData(sheetId);\r\n        postWsToTop({\r\n            body: {\r\n                $type: 'msg',\r\n                action: '$sheet',\r\n                msg: {\r\n                    id: sheetId,\r\n                    uq: this.cUq.id,\r\n                    state: sheetData.brief.state\r\n                }\r\n            }\r\n        });\r\n        await this.openVPage(this.VSheetAction, sheetData);\r\n    }\r\n\r\n    async showProcessing(sheetId:number) {\r\n        let sheetData:SheetData = await this.getSheetData(sheetId);\r\n        await this.openVPage(this.VSheetProcessing, sheetData);\r\n    }\r\n\r\n    async editSheet(sheetData:SheetData):Promise<any> {\r\n        //alert('修改单据：程序正在设计中');\r\n        let values = await this.vCall(this.VSheetEdit, sheetData);\r\n        return values;\r\n    }\r\n\r\n    async showArchived(inBrief:any) {\r\n        let sheetData = await this.getArchived(inBrief.id);\r\n        await this.openVPage(this.VArchived, sheetData);\r\n    }\r\n\r\n    onSave = async (values:any, valuesWithBox:any):Promise<void> => {\r\n        //let values = this.vForm.getValues();\r\n        //let ret = await this.controller.saveSheet(values, this.vForm.values);\r\n        let ret = await this.saveSheet(values, valuesWithBox);\r\n        this.ceasePage();\r\n        //this.openPage(this.finishedPage);\r\n        await this.showSaved(ret);\r\n    }\r\n\r\n    async showSaved(sheetData:any) {\r\n        await this.openVPage(this.VSheetSaved, sheetData);\r\n    }\r\n\r\n    private getStateUI(stateName:string) {\r\n        let {states} = this.res;\r\n        if (states === undefined) return;\r\n        return states[stateName];\r\n    }\r\n    getStateLabel(stateName:string) {\r\n        let state = this.getStateUI(stateName);\r\n        let ret = (state && state.label) || stateName;\r\n        switch (ret) {\r\n            default: return ret;\r\n            case '$': return '新单';\r\n        }\r\n    }\r\n    getActionLabel(stateName:string, actionName:string) {\r\n        let state = this.getStateUI(stateName);\r\n        if (state === undefined) return actionName;\r\n        let actions = state.actions;\r\n        if (actions === undefined) return actionName;\r\n        let action = actions[actionName];\r\n        return (action && action.label) || actionName;\r\n    }\r\n\r\n    private async loadStateSheetCount():Promise<void> {\r\n        this.statesCount.clear();\r\n        let statesCount = await this.entity.stateSheetCount();\r\n        this.statesCount.splice(0, 0, ...statesCount);\r\n    }\r\n\r\n    async getSheetData(sheetId:number):Promise<SheetData> {\r\n        return await this.entity.getSheet(sheetId);\r\n    }\r\n\r\n    async getArchived(sheetId:number):Promise<SheetData> {\r\n        return await this.entity.getArchive(sheetId);\r\n    }\r\n\r\n    async saveSheet(values:any, valuesWithBox:any):Promise<any> {\r\n        let {sheetTitle} = this.ui;\r\n        let disc = sheetTitle === undefined? this.label : sheetTitle(valuesWithBox, this.x);\r\n        let ret = await this.entity.save(disc, values);\r\n        //let {id, state} = ret;\r\n        //if (id > 0) this.changeStateCount(state, 1);\r\n        return ret;\r\n    }\r\n\r\n    async action(id:number, flow:number, state:string, actionName:string):Promise<any> {\r\n        return await this.entity.action(id, flow, state, actionName);\r\n    }\r\n}\r\n","export * from './cSheet';\r\nexport * from './vSheet';\r\nexport * from './vMain';\r\nexport * from './vNew';\r\nexport * from './vEdit';\r\nexport * from './vList';\r\nexport * from './vSheetAction';\r\nexport * from './vSchema';\r\nexport * from './vArchived';\r\nexport * from './vSheetView';\r\n","import * as React from 'react';\r\nimport { TuidMain, Book, Entity } from '../../entities';\r\nimport { Page } from 'tonva-tools';\r\nimport { VEntity } from '../CVEntity';\r\nimport { CBook, BookUI } from './cBook';\r\n\r\nexport class VBookMain extends VEntity<Book, BookUI, CBook> {\r\n    async open(param?:any):Promise<void> {\r\n        this.openPage(this.view);\r\n    }\r\n\r\n    protected view = () => <Page header={this.label}>\r\n        Book\r\n    </Page>;\r\n}\r\n","import { CEntity, EntityUI } from \"../CVEntity\";\r\nimport { Book } from \"../../entities\";\r\nimport { VBookMain } from \"./vBookMain\";\r\n\r\nexport interface BookUI extends EntityUI {\r\n    CBook?: typeof CBook;\r\n    main: typeof VBookMain,\r\n}\r\n\r\nexport class CBook extends CEntity<Book, BookUI> {\r\n    protected async internalStart() {\r\n        await this.openVPage(this.VBookMain);\r\n    }\r\n\r\n    protected get VBookMain():typeof VBookMain {return VBookMain}\r\n}\r\n","import React from \"react\";\r\nimport { View } from \"tonva-tools\";\r\nimport { List, Muted } from \"tonva-react-form\";\r\nimport { Entity } from \"../../entities\";\r\nimport { CLink } from \"../link\";\r\nimport { CUq } from \"./cUq\";\r\n\r\nexport class VUq extends View<CUq> {\r\n    protected isSysVisible = false;\r\n    protected tuidLinks: CLink[];\r\n    protected mapLinks: CLink[];\r\n    protected sheetLinks: CLink[];\r\n    protected actionLinks: CLink[];\r\n    protected queryLinks: CLink[];\r\n    protected bookLinks: CLink[];\r\n    protected historyLinks: CLink[];\r\n    protected pendingLinks: CLink[];\r\n\r\n    constructor(cUq: CUq) {\r\n        super(cUq);\r\n        let {tuidArr, mapArr, sheetArr, actionArr, queryArr, bookArr, historyArr, pendingArr} = cUq.entities;\r\n        this.tuidLinks = tuidArr.filter(v => this.isVisible(v)).map(v => new CLink(this.controller.cTuidMain(v)));\r\n        this.mapLinks = mapArr.filter(v => this.isVisible(v)).map(v => new CLink(this.controller.cMap(v)));\r\n        this.sheetLinks = sheetArr.filter(v => this.isVisible(v)).map(v => new CLink(this.controller.cSheet(v)));\r\n        this.actionLinks = actionArr.filter(v => this.isVisible(v)).map(v => new CLink(this.controller.cAction(v)));\r\n        this.queryLinks = queryArr.filter(v => this.isVisible(v)).map(v => new CLink(this.controller.cQuery(v)));\r\n        this.bookLinks = bookArr.filter(v => this.isVisible(v)).map(v => new CLink(this.controller.cBook(v)));\r\n        this.historyLinks = historyArr.filter(v => this.isVisible(v)).map(v => new CLink(this.controller.cHistory(v)));\r\n        this.pendingLinks = pendingArr.filter(v => this.isVisible(v)).map(v => new CLink(this.controller.cPending(v)));\r\n    }\r\n    protected isVisible(entity: Entity):boolean {\r\n        return entity.sys !== true || this.isSysVisible;\r\n    }\r\n    render(param?:any) {\r\n        if (this.view === undefined) return <div>??? viewModel 必须定义 view ???</div>\r\n        return React.createElement(this.view);\r\n    }\r\n\r\n    protected view = () => {\r\n        let {res, uq, error} = this.controller;\r\n        let linkItem = {\r\n            render: (cLink:CLink, index:number):JSX.Element => cLink.render(), \r\n            onClick: undefined, \r\n        };\r\n        let lists = [\r\n            {\r\n                header: res.tuid || 'TUID',\r\n                items: this.tuidLinks,\r\n            },\r\n            {\r\n                cn: 'my-2',\r\n                header: res.map || 'MAP',\r\n                items: this.mapLinks,\r\n            },\r\n            {\r\n                cn: 'my-2',\r\n                header: res.sheet || 'SHEET',\r\n                items: this.sheetLinks\r\n            },\r\n            {\r\n                cn: 'my-2',\r\n                header: res.action || 'ACTION',\r\n                items: this.actionLinks\r\n            },\r\n            {\r\n                cn: 'my-2',\r\n                header: res.query || 'QUERY',\r\n                items: this.queryLinks\r\n            },\r\n            {\r\n                cn: 'mt-2 mb-4',\r\n                header: res.book || 'BOOK',\r\n                items: this.bookLinks\r\n            },\r\n            {\r\n                cn: 'mt-2 mb-4',\r\n                header: res.history || 'HISTORY',\r\n                items: this.historyLinks\r\n            },\r\n            {\r\n                cn: 'mt-2 mb-4',\r\n                header: res.pending || 'PENDING',\r\n                items: this.pendingLinks\r\n            }\r\n        ];\r\n        let content;\r\n        if (error !== undefined) {\r\n            content = <div className=\"p-3 text-danger\">连接错误: {error}</div>;\r\n        }\r\n        else {\r\n            content = lists.map(({cn, header, items},index) => items.length > 0 && <List\r\n                key={index}\r\n                className={cn}\r\n                header={<div className=\"px-3 py-1 bg-light\"><Muted>{header}</Muted></div>}\r\n                items={items}\r\n                item={linkItem} />\r\n            );\r\n        }\r\n        return <>\r\n            <div className=\"px-3 py-1 small\">{res.uq || uq}</div>\r\n            {content}\r\n        </>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport _ from 'lodash';\r\nimport { UqApi, Controller, UnitxApi, appInFrame, resLang, nav } from 'tonva-tools';\r\nimport { Entities, TuidMain, Action, Sheet, Query, Book, Map, Entity, Tuid, History, Pending } from '../../entities';\r\nimport { CLink } from '../link';\r\nimport { CBook, BookUI } from '../book';\r\nimport { CSheet, SheetUI } from '../sheet';\r\nimport { ActionUI, CAction } from '../action';\r\nimport { QueryUI, CQuery, CQuerySelect } from '../query';\r\nimport { CTuidMain, TuidUI, CTuid, CTuidInfo, CTuidSelect, CTuidEdit, CTuidList } from '../tuid';\r\nimport { MapUI, CMap } from '../map';\r\nimport { CEntity, EntityUI } from '../CVEntity';\r\nimport { PureJSONContent } from '../form/viewModel';\r\nimport { VUq } from './vUq';\r\nimport { CHistory, HistoryUI } from '../history';\r\nimport { CPending, PendingUI } from '../pending';\r\nimport { CApp } from '../CApp';\r\n\r\nexport type EntityType = 'sheet' | 'action' | 'tuid' | 'query' | 'book' | 'map' | 'history' | 'pending';\r\n\r\nexport interface UqUI {\r\n    CTuidMain?: typeof CTuidMain;\r\n    CTuidEdit?: typeof CTuidEdit;\r\n    CTuidList?: typeof CTuidList;\r\n    CTuidSelect?: typeof CTuidSelect;\r\n    CTuidInfo?: typeof CTuidInfo;\r\n    CQuery?: typeof CQuery;\r\n    CQuerySelect?: typeof CQuerySelect;\r\n    CMap?: typeof CMap;\r\n    CAction?: typeof CAction;\r\n    CSheet?: typeof CSheet;\r\n    CBook?: typeof CBook;\r\n    CHistory?: typeof CHistory;\r\n    CPending?: typeof CPending;\r\n    tuid?: {[name:string]: TuidUI};\r\n    sheet?: {[name:string]: SheetUI};\r\n    action?: {[name:string]: ActionUI};\r\n    map?: {[name:string]: MapUI};\r\n    query?: {[name:string]: QueryUI};\r\n    book?: {[name:string]: BookUI};    \r\n    history?: {[name:string]: HistoryUI};\r\n    pending?: {[name:string]: PendingUI};\r\n    res?: any;\r\n}\r\n\r\nfunction lowerPropertyName(entities: {[name:string]: EntityUI}) {\r\n    if (entities === undefined) return;\r\n    for (let i in entities) entities[i.toLowerCase()] = entities[i];\r\n}\r\n\r\nexport class CUq extends Controller /* implements Uq*/ {\r\n    private ui:any;\r\n    private CTuidMain: typeof CTuidMain;\r\n    private CTuidEdit: typeof CTuidEdit;\r\n    private CTuidList: typeof CTuidList;\r\n    private CTuidSelect: typeof CTuidSelect;\r\n    private CTuidInfo: typeof CTuidInfo;\r\n    private CQuery: typeof CQuery;\r\n    private CQuerySelect: typeof CQuerySelect;\r\n    private CMap: typeof CMap;\r\n    private CAction: typeof CAction;\r\n    private CSheet: typeof CSheet;\r\n    private CBook: typeof CBook;\r\n    private CHistory: typeof CHistory;\r\n    private CPending: typeof CPending;\r\n\r\n    constructor(cApp:CApp, uq:string, appId:number, uqId:number, access:string, ui:UqUI) {\r\n        super(resLang(ui.res));\r\n        this.cApp = cApp;\r\n        this.uq = uq;\r\n        this.id = uqId;\r\n        // 每一个ui都转换成小写的key的版本\r\n        lowerPropertyName(ui.tuid);\r\n        lowerPropertyName(ui.sheet);\r\n        lowerPropertyName(ui.map);\r\n        lowerPropertyName(ui.query);\r\n        lowerPropertyName(ui.action);\r\n        lowerPropertyName(ui.book);\r\n        lowerPropertyName(ui.history);\r\n        lowerPropertyName(ui.pending);\r\n        this.ui = ui;\r\n        this.CTuidMain = ui.CTuidMain || CTuidMain;\r\n        this.CTuidEdit = ui.CTuidEdit || CTuidEdit;\r\n        this.CTuidList = ui.CTuidList || CTuidList;\r\n        this.CTuidSelect = ui.CTuidSelect || CTuidSelect;\r\n        this.CTuidInfo = ui.CTuidInfo || CTuidInfo;\r\n        this.CQuery = ui.CQuery || CQuery;\r\n        this.CQuerySelect = ui.CQuerySelect || CQuerySelect;\r\n        this.CMap = ui.CMap || CMap;\r\n        this.CAction = ui.CAction || CAction;\r\n        this.CSheet = ui.CSheet || CSheet;\r\n        this.CBook = ui.CBook || CBook;\r\n        this.CHistory = ui.CHistory || CHistory;\r\n        this.CPending = ui.CPending || CPending;\r\n\r\n        let token = undefined;\r\n        let uqOwner:string, uqName:string;\r\n        let p = uq.split('/');\r\n        switch (p.length) {\r\n            case 1:\r\n                uqOwner = '$$$';\r\n                uqName = p[0];\r\n                break;\r\n            case 2:\r\n                uqOwner = p[0];\r\n                uqName = p[1];\r\n                break;\r\n            default:\r\n                console.log('uq must be uqOwner/uqName format');\r\n                return;\r\n        }\r\n\r\n        let hash = document.location.hash;\r\n        let baseUrl = hash===undefined || hash===''? \r\n            'debug/':'tv/';\r\n\r\n        let acc: string[];\r\n        if (access === null || access === undefined || access === '*') {\r\n            acc = [];\r\n        }\r\n        else {\r\n            acc = access.split(';').map(v => v.trim()).filter(v => v.length > 0);\r\n        }\r\n        let uqApi:UqApi;\r\n        if (uq === '$$$/$unitx') {\r\n            // 这里假定，点击home link之后，已经设置unit了\r\n            // 调用 UnitxApi会自动搜索绑定 unitx service\r\n            uqApi = new UnitxApi(appInFrame.unit);\r\n        }\r\n        else {\r\n            uqApi = new UqApi(baseUrl, uqOwner, uqName, acc, true);\r\n        }\r\n        this.entities = new Entities(this, uqApi, appId);\r\n    }\r\n\r\n    protected async internalStart() {\r\n    }\r\n\r\n    cApp:CApp;\r\n    uq: string;\r\n    id: number;\r\n    res: any;\r\n    entities:Entities;\r\n    error: string;\r\n    private schemaLoaded:boolean = false;\r\n\r\n    protected async loadEntites() {\r\n        await this.entities.loadAccess();\r\n    }\r\n\r\n    async loadSchema():Promise<string> {\r\n        try {\r\n            if (this.schemaLoaded === true) return;\r\n            await this.loadEntites();\r\n            if (this.id === undefined) this.id = this.entities.uqId;\r\n            for (let i in this.ui) {\r\n                let g = this.ui[i];\r\n                if (g === undefined) continue;\r\n                let {caption, collection} = g;\r\n                if (collection === undefined) continue;\r\n                for (let j in collection) {\r\n                    if (this.entities[i](j) === undefined) {\r\n                        console.warn(i + ':' + '\\'' + j + '\\' is not uq entity');\r\n                    }\r\n                }\r\n            }\r\n            this.schemaLoaded = true;\r\n            return;\r\n        }\r\n        catch(err) {\r\n            console.error(err);\r\n            return this.error = err;\r\n        }\r\n    }\r\n\r\n    async getQuerySearch(name:string):Promise<Query> {\r\n        let query = this.entities.query(name);\r\n        if (query === undefined) \r\n            alert(`QUERY ${name} 没有定义!`);\r\n        else {\r\n            await query.loadSchema();\r\n            let {returns} = query;\r\n            if (returns.length > 1) {\r\n                alert(`QUERY ${name} 返回多张表, 无法做QuerySearch`);\r\n            }\r\n        }\r\n        return query;\r\n    }\r\n    getTuidPlaceHolder(tuid:Tuid) {\r\n        let {tuidPlaceHolder, entity} = this.res;\r\n        let {name} = tuid;\r\n        let type:string;\r\n        if (entity !== undefined) {\r\n            let en = entity[name];\r\n            if (en !== undefined) {\r\n                type = en.label;\r\n            }\r\n        }\r\n        return (tuidPlaceHolder || 'Select');\r\n    }\r\n    getNone() {\r\n        let {none} = this.res;\r\n        return none || 'none';\r\n    }\r\n    protected isSysVisible = false;\r\n    protected isVisible(entity: Entity):boolean {\r\n        return entity.sys !== true || this.isSysVisible;\r\n    }\r\n\r\n    async navSheet(sheetTypeId:number, sheetId:number) {\r\n        let sheet = this.entities.sheetFromTypeId(sheetTypeId);\r\n        if (sheet === undefined) {\r\n            alert('sheetTypeId ' + sheetTypeId + ' is not exists!');\r\n            return;\r\n        }\r\n        let cSheet = this.cSheet(sheet);\r\n        await cSheet.startSheet(sheetId);\r\n    }\r\n\r\n    sheet(entityName:string) {return this.entities.sheet(entityName);}\r\n    action(entityName:string) {return this.entities.action(entityName);}\r\n    query(entityName:string) {return this.entities.query(entityName);}\r\n    book(entityName:string) {return this.entities.book(entityName);}\r\n    map(entityName:string) {return this.entities.map(entityName);}\r\n    history(entityName:string) {return this.entities.history(entityName);}\r\n    pending(entityName:string) {return this.entities.pending(entityName);}\r\n    tuid(entityName:string) {return this.entities.tuid(entityName)}\r\n    tuidDiv(entityName:string, divName:string) {\r\n        let tuid = this.entities.tuid(entityName);\r\n        if (tuid === undefined) return;\r\n        let {divs} = tuid;\r\n        if (divs === undefined) return;\r\n        return divs[divName];\r\n    }\r\n\r\n    cSheetFromName(entityName:string):CSheet {\r\n        let entity = this.entities.sheet(entityName);\r\n        if (entity !== undefined) return this.cSheet(entity);\r\n    }\r\n    cActionFromName(entityName:string) {\r\n        let entity = this.entities.action(entityName);\r\n        if (entity !== undefined) return this.cAction(entity);\r\n    }\r\n    cQueryFromName(entityName:string) {\r\n        let entity = this.entities.query(entityName);\r\n        if (entity !== undefined) return this.cQuery(entity);\r\n    }\r\n    cBookFromName(entityName:string) {\r\n        let entity = this.entities.book(entityName);\r\n        if (entity !== undefined) return this.cBook(entity);\r\n    }\r\n    cMapFromName(entityName:string) {\r\n        let entity = this.entities.map(entityName);\r\n        if (entity !== undefined) return this.cMap(entity);\r\n    }\r\n    cHistoryFromName(entityName:string) {\r\n        let entity = this.entities.history(entityName);\r\n        if (entity !== undefined) return this.cHistory(entity);\r\n    }\r\n    cPendingFromName(entityName:string) {\r\n        let entity = this.entities.pending(entityName);\r\n        if (entity !== undefined) return this.cPending(entity);\r\n    }\r\n    cTuidMainFromName(entityName:string) {\r\n        let entity = this.entities.tuid(entityName);\r\n        if (entity !== undefined) return this.cTuidMain(entity);\r\n    }\r\n    cTuidEditFromName(entityName:string) {\r\n        let entity = this.entities.tuid(entityName);\r\n        if (entity !== undefined) return this.cTuidEdit(entity);\r\n    }\r\n    cTuidInfoFromName(entityName:string) {\r\n        let entity = this.entities.tuid(entityName);\r\n        if (entity !== undefined) return this.cTuidInfo(entity);\r\n    }\r\n\r\n    cTuidSelectFromName(entityName:string) {\r\n        let entity = this.entities.tuid(entityName);\r\n        if (entity !== undefined) return this.cTuidSelect(entity);\r\n    }\r\n\r\n    cFromName(entityType:EntityType, entityName:string): CEntity<Entity, EntityUI> {\r\n        switch (entityType) {\r\n            case 'sheet':\r\n                let sheet = this.entities.sheet(entityName);\r\n                if (sheet === undefined) return;\r\n                return this.cSheet(sheet);\r\n            case 'action':\r\n                let action = this.entities.action(entityName);\r\n                if (action === undefined) return;\r\n                return this.cAction(action);\r\n            case 'tuid':\r\n                let tuid = this.entities.tuid(entityName);\r\n                if (tuid === undefined) return;\r\n                return this.cTuidMain(tuid);\r\n            case 'query':\r\n                let query = this.entities.query(entityName);\r\n                if (query === undefined) return;\r\n                return this.cQuery(query);\r\n            case 'book':\r\n                let book = this.entities.book(entityName);\r\n                if (book === undefined) return;\r\n                return this.cBook(book);\r\n            case 'map':\r\n                let map = this.entities.map(entityName);\r\n                if (map === undefined) return;\r\n                return this.cMap(map);\r\n            case 'history':\r\n                let history = this.entities.history(entityName);\r\n                if (history === undefined) return;\r\n                return this.cHistory(history);\r\n            case 'pending':\r\n                let pending = this.entities.pending(entityName);\r\n                if (pending === undefined) return;\r\n                return this.cPending(pending);\r\n        }\r\n    }\r\n\r\n    linkFromName(entityType:EntityType, entityName:string) {\r\n        return this.link(this.cFromName(entityType, entityName));\r\n    }\r\n\r\n    private getUI<T extends Entity, UI extends EntityUI>(t:T):{ui:UI, res:any} {\r\n        let ui, res;\r\n        let {name, typeName} = t;\r\n        if (this.ui !== undefined) {\r\n            let tUI = this.ui[typeName];\r\n            if (tUI !== undefined) {\r\n                ui = tUI[name];\r\n            }\r\n        }\r\n        let {entity} = this.res;\r\n        if (entity !== undefined) {\r\n            res = entity[name];\r\n        }\r\n        return {ui: ui || {}, res: res || {} };\r\n    }\r\n\r\n    link(cEntity:CEntity<Entity, EntityUI>) {\r\n        return new CLink(cEntity);\r\n    }\r\n\r\n    get tuidLinks() {\r\n        return this.entities.tuidArr.filter(v => this.isVisible(v)).map(v => this.link(this.cTuidMain(v)));\r\n    }\r\n    cTuidMain(tuid:TuidMain):CTuidMain {\r\n        let {ui, res} = this.getUI<TuidMain, TuidUI>(tuid);\r\n        return new (ui && ui.CTuidMain || this.CTuidMain)(this, tuid, ui, res);\r\n    }\r\n    cTuidEdit(tuid:TuidMain):CTuidEdit {\r\n        let {ui, res} = this.getUI<TuidMain, TuidUI>(tuid);\r\n        return new (ui && ui.CTuidEdit || this.CTuidEdit)(this, tuid, ui, res);\r\n    }\r\n    cTuidList(tuid:TuidMain):CTuidList {\r\n        let {ui, res} = this.getUI<TuidMain, TuidUI>(tuid);\r\n        return new (ui && ui.CTuidList || this.CTuidList)(this, tuid, ui, res);\r\n    }\r\n    cTuidSelect(tuid:Tuid):CTuidSelect {\r\n        let {ui, res} = this.getUI<Tuid, TuidUI>(tuid.owner || tuid);\r\n        return new (ui && ui.CTuidSelect || this.CTuidSelect)(this, tuid, ui, res);\r\n    }\r\n    cTuidInfo(tuid:TuidMain):CTuidInfo {\r\n        let {ui, res} = this.getUI<Tuid, TuidUI>(tuid);\r\n        return new (ui && ui.CTuidInfo || this.CTuidInfo)(this, tuid, ui, res);\r\n    }\r\n\r\n    cSheet(sheet:Sheet/*, sheetUI?:SheetUI, sheetRes?:any*/):CSheet {\r\n        let {ui, res} = this.getUI<Sheet, SheetUI>(sheet);\r\n        //if (sheetUI !== undefined) ui = sheetUI;\r\n        //if (sheetRes !== undefined) res = sheetRes;\r\n        //return new (ui && ui.CSheet || this.CSheet)(this, sheet, sheetUI, sheetRes);\r\n        return new (ui && ui.CSheet || this.CSheet)(this, sheet, ui, res);\r\n    }\r\n    get sheetLinks() { \r\n        return this.entities.sheetArr.filter(v => this.isVisible(v)).map(v => {\r\n            return this.link(this.cSheet(v))\r\n        });\r\n    }\r\n\r\n    cAction(action:Action):CAction {\r\n        let {ui, res} = this.getUI<Action, ActionUI>(action);\r\n        return new (ui && ui.CAction || this.CAction)(this, action, ui, res);\r\n    }\r\n    get actionLinks() { \r\n        return this.entities.actionArr.filter(v => this.isVisible(v)).map(v => {\r\n            return this.link(this.cAction(v))\r\n        });\r\n    }\r\n\r\n    cQuery(query:Query):CQuery {\r\n        let {ui, res} = this.getUI<Query, QueryUI>(query);\r\n        return new (ui && ui.CQuery || this.CQuery)(this, query, ui, res);\r\n    }\r\n    cQuerySelect(queryName:string):CQuerySelect {\r\n        let query = this.entities.query(queryName);\r\n        if (query === undefined) return;\r\n        let {ui, res} = this.getUI<Query, QueryUI>(query);\r\n        return new (ui && ui.CQuerySelect || this.CQuerySelect)(this, query, ui, res);\r\n    }\r\n    get queryLinks() {\r\n        return this.entities.queryArr.filter(v => this.isVisible(v)).map(v => {\r\n            return this.link(this.cQuery(v))\r\n        });\r\n    }\r\n    \r\n    cBook(book:Book):CBook {\r\n        let {ui, res} = this.getUI<Book, BookUI>(book);\r\n        return new (ui && ui.CBook || this.CBook)(this, book, ui, res);\r\n    }\r\n    get bookLinks() { \r\n        return this.entities.bookArr.filter(v => this.isVisible(v)).map(v => {\r\n            return this.link(this.cBook(v))\r\n        });\r\n    }\r\n    \r\n    cHistory(history:History):CHistory {\r\n        let {ui, res} = this.getUI<History, HistoryUI>(history);\r\n        return new (ui && ui.CHistory || this.CHistory)(this, history, ui, res);\r\n    }\r\n    get historyLinks() { \r\n        return this.entities.historyArr.filter(v => this.isVisible(v)).map(v => {\r\n            return this.link(this.cHistory(v))\r\n        });\r\n    }\r\n    \r\n    cPending(pending:Pending):CPending {\r\n        let {ui, res} = this.getUI<Pending, PendingUI>(pending);\r\n        return new (ui && ui.CPending || this.CPending)(this, pending, ui, res);\r\n    }\r\n    get pendingLinks() { \r\n        return this.entities.pendingArr.filter(v => this.isVisible(v)).map(v => {\r\n            return this.link(this.cPending(v))\r\n        });\r\n    }\r\n    \r\n    cMap(map:Map):CMap {\r\n        let {ui, res} = this.getUI<Map, MapUI>(map);\r\n        return new (ui && ui.CMap || this.CMap)(this, map, ui, res);\r\n    }\r\n    get mapLinks() { \r\n        return this.entities.mapArr.filter(v => this.isVisible(v)).map(v => {\r\n            return this.link(this.cMap(v));\r\n        });\r\n    }\r\n\r\n    getTuidContent(tuid:Tuid): React.StatelessComponent<any> {\r\n        let {owner} = tuid;\r\n        if (owner === undefined) {\r\n            let {ui} = this.getUI<Tuid, TuidUI>(tuid);\r\n            return (ui && ui.content) || PureJSONContent;\r\n        }\r\n        else {\r\n            let {ui} = this.getUI<Tuid, TuidUI>(owner);\r\n            return (ui && ui.divs && ui.divs[tuid.name].content) || PureJSONContent;\r\n        }\r\n    }\r\n\r\n    async showTuid(tuid:Tuid, id:number):Promise<void> {\r\n        let {owner} = tuid;\r\n        let c = this.cTuidInfo(owner || (tuid as TuidMain));\r\n        await c.start(id);\r\n    }\r\n\r\n    protected get VUq():typeof VUq {return VUq}\r\n\r\n    render() {\r\n        let v = new (this.VUq)(this);\r\n        return v.render();\r\n    }\r\n}\r\n\r\n","export * from './cUq';\r\nexport * from './vUq';","import * as React from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport className from 'classnames';\r\nimport { List, LMR, FA } from 'tonva-react-form';\r\nimport { Page, nav } from 'tonva-tools';\r\nimport { tv } from '../../tools';\r\nimport { Map } from '../../entities';\r\nimport { VEntity } from '../CVEntity';\r\nimport { CMap, MapItem, MapKey, MapUI } from './cMap';\r\nimport { PureJSONContent } from '../form/viewModel';\r\n\r\nexport class VMapMain extends VEntity<Map, MapUI, CMap> {\r\n    private isFrom: boolean;\r\n\r\n    async open(param?:any) {\r\n        this.isFrom = this.controller.isFrom;\r\n        this.openPage(this.view);\r\n    }\r\n\r\n    itemRender = (item:MapItem, index:number) => {\r\n        return <this.ItemRow item={item} />;\r\n    }\r\n\r\n    private ItemRow = observer(({item}: {item:MapItem}) => {\r\n        let {tuid, box, children, isLeaf, keyIndex, values} = item;\r\n        let keyUI = this.controller.keyUIs[keyIndex];\r\n        let {content:keyContent, valuesContent, none:keyNone} = keyUI;\r\n        let add:any, remove:any;\r\n        if (this.isFrom === false) {\r\n            add = <button className=\"btn btn-link btn-sm\" onClick={()=>this.controller.addClick(item)}>\r\n                <FA name=\"plus\" />\r\n            </button>;\r\n            remove = <button className=\"btn btn-link btn-sm\" onClick={()=>this.controller.removeClick(item)}>\r\n                <FA className=\"text-info\" name=\"trash\" />\r\n            </button>;\r\n        }\r\n        let right:any;\r\n        if (isLeaf === false) {\r\n            if (keyIndex === 0)\r\n                right = add;\r\n            else\r\n                right = <>{remove} &nbsp; {add}</>;\r\n        }\r\n        else if (keyIndex > 0) {\r\n            right = remove;\r\n        }\r\n        let content:any, border:any, valuesView:any;\r\n        if (isLeaf === true) {\r\n            content = undefined; //<div className=\"ml-5\">leaf</div>;\r\n            if (values) {\r\n                //valuesView = null; // 现在不显示values content了\r\n                valuesView = (valuesContent || PureJSONContent)(values, this.x);\r\n            }\r\n        }\r\n        else {\r\n            border = \"border-bottom\";\r\n            let none = keyNone && keyNone(this.x);\r\n            content = <List \r\n                className=\"ml-4\" \r\n                items={children} \r\n                item={{onClick:undefined, render:this.itemRender}}\r\n                none={none} />\r\n        }\r\n        let left = <div className=\"py-1 pr-3\">{tv(box, keyContent, this.x)}</div>;\r\n        return <div className=\"d-flex flex-column\">\r\n            <LMR className={className('px-3', 'py-2', border)}\r\n                left={left}\r\n                right={right}\r\n            >\r\n                <div className=\"py-1\">{valuesView}</div>\r\n            </LMR>\r\n            {content}\r\n        </div>;\r\n    });\r\n\r\n    protected get view() { return () => <Page header={this.label}>\r\n            <List items={this.controller.items} item={{className:'my-2', onClick:undefined, render:this.itemRender}} />\r\n        </Page>\r\n    };\r\n}\r\n","import * as React from 'react';\r\nimport { VEntity } from \"../CVEntity\";\r\nimport { MapUI, CMap } from \"./cMap\";\r\nimport { Map } from \"../../entities\";\r\nimport { Page } from \"tonva-tools\";\r\nimport { VForm } from '../form';\r\n\r\nexport class VInputValues extends VEntity<Map, MapUI, CMap> {\r\n    private vForm: VForm;\r\n\r\n    async open(param?:any) {\r\n        this.vForm = this.createForm(this.onValuesSubmit);\r\n        this.openPageElement(<this.view />);\r\n    }\r\n\r\n    private onValuesSubmit = async () => {\r\n        this.ceasePage();\r\n        let values = this.vForm.getValues();\r\n        this.returnCall(values);\r\n    }\r\n\r\n    private view = () => {\r\n        return <Page>\r\n            {this.vForm.render()}\r\n        </Page>\r\n    }\r\n}\r\n","import React from 'react';\r\nimport _ from 'lodash';\r\nimport { CEntity, EntityUI } from \"../CVEntity\";\r\nimport { Map, Tuid, BoxId, Field, TuidMain, fieldDefaultValue } from \"../../entities\";\r\nimport { VMapMain } from \"./vMain\";\r\nimport { observable } from \"mobx\";\r\nimport { PureJSONContent } from '../form/viewModel';\r\nimport { VInputValues } from './inputValues';\r\n\r\nexport interface MapKey {\r\n    content: (values, x?:any) => JSX.Element;\r\n    valuesContent?: (values, x?:any) => JSX.Element;\r\n    none?: (x:any)=>string;\r\n}\r\n\r\nexport interface MapUI extends EntityUI {\r\n    CMap?: typeof CMap;\r\n    keys?: MapKey[],\r\n}\r\n\r\nexport class MapItem {\r\n    parent: MapItem;\r\n    tuid: Tuid;\r\n    box: BoxId;\r\n    isLeaf: boolean;\r\n    keyIndex:number;\r\n    children: MapItem[] = observable.array([], {deep: true});\r\n    values: any;\r\n    constructor(parent:MapItem, tuid:Tuid, box:BoxId, keyIndex:number) {\r\n        this.parent = parent;\r\n        this.tuid = tuid;\r\n        this.box = box;\r\n        this.keyIndex = keyIndex;\r\n        this.isLeaf = false;\r\n    }\r\n}\r\n\r\nexport class CMap extends CEntity<Map, MapUI> {\r\n    isFrom: boolean;\r\n    items:MapItem[];\r\n    keyFields: Field[];\r\n    keyUIs: MapKey[];\r\n\r\n    protected async internalStart() {\r\n        let {keys, schemaFrom} = this.entity;\r\n        this.isFrom = schemaFrom !== undefined;\r\n        let q = this.entity.queries.all;\r\n        let result = await q.query({});\r\n        //let data = await this.entity.unpackReturns(res);\r\n        let ret = result.ret;\r\n        let keysLen = keys.length;\r\n        this.keyUIs = _.clone(this.ui.keys || []);\r\n        this.keyFields = [];\r\n        let retFields = q.returns[0].fields;\r\n        for (let i=0; i<keysLen; i++) {\r\n            this.keyFields.push(retFields[i]);\r\n            if (i >= this.keyUIs.length) {\r\n                this.keyUIs.push({\r\n                    content: PureJSONContent,\r\n                });\r\n            }\r\n        }\r\n        this.items = observable([]);\r\n        let item:MapItem = undefined;\r\n        for (let r of ret) {\r\n            let newItem = this.addItem(item, r);\r\n            if (newItem !== undefined) {\r\n                this.items.push(newItem);\r\n                item = newItem;\r\n            }\r\n        }\r\n\r\n        await this.openVPage(this.VMapMain);\r\n    }\r\n\r\n    private createItem(parent:MapItem, tuid:Tuid, box:BoxId, keyIndex:number, values?:any) {\r\n        let item = new MapItem(parent, tuid, box, keyIndex);\r\n        if (keyIndex === this.keyFields.length - 1) {\r\n            item.isLeaf = true;\r\n            item.values = values;\r\n        }\r\n        return item;\r\n    }\r\n\r\n    addItem(item:MapItem, row:any):MapItem {\r\n        let ret:MapItem = undefined;\r\n        let keysLen = this.keyFields.length;\r\n        let p = item;\r\n        for (let i=0;i<keysLen;i++) {\r\n            let key = this.keyFields[i];\r\n            let {name} = key;\r\n            let tuid = key._tuid;\r\n            let val:BoxId = row[name];\r\n            if (val === undefined) break;\r\n            let {id} = val;\r\n            if (i === 0) {\r\n                if (id === 0) continue;\r\n                if (p === undefined || p.box.id !== id) {\r\n                    ret = p = this.createItem(undefined, tuid, val, i, row);\r\n                }\r\n                continue;\r\n            }\r\n            let {children, box} = p;\r\n            let len = children.length;\r\n            if (len > 0) {\r\n                let n = children[len-1];\r\n                if (n.box.id === id) {\r\n                    p = n;\r\n                    continue;\r\n                }\r\n            }\r\n            if (id > 0) {\r\n                children.push(p = this.createItem(p, tuid, val, i, row));\r\n            }\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    async searchOnKey(keyField:Field, param):Promise<number> {\r\n        let {_tuid, _ownerField} = keyField;\r\n        let cTuidSelect = this.cUq.cTuidSelect(_tuid);\r\n        let callParam = param;\r\n        if (_ownerField !== undefined) {\r\n            callParam = param[_ownerField.name];\r\n            if (typeof callParam === 'object') {\r\n                callParam = callParam.id;\r\n            }\r\n        }\r\n        let ret = await cTuidSelect.call(callParam);\r\n        return _tuid.getIdFromObj(ret);\r\n    }\r\n\r\n    addClick = async(item:MapItem) => {\r\n        let {keyIndex, children} = item;\r\n        let keysLen = this.keyFields.length;\r\n        let keysLast = keysLen-1;\r\n        let idx = keyIndex + 1;\r\n        if (idx >= keysLen) return;\r\n        let keyField = this.keyFields[idx];\r\n        let kn = keyField.name;\r\n        let tuid = keyField._tuid;\r\n        let searchParam = {} as any;\r\n        let data = {} as any;\r\n        for (let p=item;p!==undefined;p=p.parent) {\r\n            let {keyIndex:ki, box} = p;\r\n            let kn = this.keyFields[ki].name;\r\n            //searchParam[kn] = data['_' + kn] = box.id;\r\n            searchParam[kn] = data[kn] = box.id;\r\n        }\r\n\r\n        let id = await this.searchOnKey(keyField, searchParam);\r\n        if (id === undefined || id <= 0) return;\r\n        tuid.useId(id);\r\n        let idBox = tuid.boxId(id);\r\n        let arr1 = {} as any;\r\n        let values:any = {};\r\n        if (keyIndex+1===keysLast) {\r\n            tuid.useId(id);\r\n            //values[kn] = arr1['_' + kn] = idBox;\r\n            values[kn] = arr1[kn] = idBox;\r\n            if (this.entity.fields.length > 0) {\r\n                let ret = await this.vCall(VInputValues, data);\r\n                for (let i in ret) {\r\n                    //values[i] = arr1['_' + i] = ret[i];\r\n                    values[i] = arr1[i] = ret[i];\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            //values[kn] = data['_' + kn] = idBox;\r\n            values[kn] = data[kn] = idBox;\r\n            for (let i=idx+1;i<keysLast;i++) {\r\n                //data['_' + this.keyFields[i].name] = 0;\r\n                data[this.keyFields[i].name] = 0;\r\n            }\r\n            // 填map的key field 0 值\r\n            //arr1['_' + this.keyFields[keysLast].name] = 0;\r\n            arr1[this.keyFields[keysLast].name] = 0;\r\n            let {fields} = this.entity;\r\n            for (let f of fields) {\r\n                let {name, type, null:nullable} = f;\r\n                if (!(nullable === true)) {\r\n                    //arr1['_' + f.name] = fieldDefaultValue(type);\r\n                    arr1[f.name] = fieldDefaultValue(type);\r\n                }\r\n            }\r\n        }\r\n        data.arr1 = [arr1];\r\n        await this.entity.actions.add.submit(data);\r\n        let rowIndex = children.findIndex(v => v.box.id === id);\r\n        if (rowIndex < 0) {\r\n            children.push(this.createItem(item, tuid, idBox, idx, values));\r\n        }\r\n        else {\r\n            let {fields} = this.entity;\r\n            if (fields !== undefined && fields.length > 0) {\r\n                let row = children[rowIndex];\r\n                children.splice(rowIndex, 1);\r\n                row.values = values;\r\n                /*\r\n                for (let f of fields) {\r\n                    let {name:fn} = f;\r\n                    row.values[fn] = values[fn];\r\n                }*/\r\n                children.splice(rowIndex, 0, row);\r\n            }\r\n        }\r\n        this.removeCeased();\r\n    }\r\n\r\n    removeClick = async(item:MapItem) => {\r\n        let keyField = this.keyFields[item.keyIndex];\r\n        let tuid = keyField._tuid;\r\n        let cTuidMain = this.cUq.cTuidMain(tuid.Main as TuidMain);\r\n        let label = cTuidMain.getLable(tuid);\r\n        let confirmDelete:_.TemplateExecutor = \r\n            this.res.confirmDelete \r\n            || _.template('do you really want to remove ${label}?');\r\n        if (confirm(confirmDelete({label:label})) === false) return;\r\n        let map:Map = this.entity;\r\n        let data = {} as any;\r\n        let arr1 = data['arr1'] = [];\r\n        let v0 = {} as any;\r\n        arr1.push(v0);\r\n        for (let p=item; p!==undefined;p=p.parent) {\r\n            let ki=p.keyIndex;\r\n            //v0['_'+this.keyFields[ki].name] = p.box.id;\r\n            v0[this.keyFields[ki].name] = p.box.id;\r\n        }\r\n        let len = this.keyFields.length;\r\n        for (let i=item.keyIndex+1; i<len; i++) {\r\n            let k = this.keyFields[i];\r\n            //v0['_'+k.name] = -1;\r\n            v0[k.name] = -1;\r\n        }\r\n        await map.actions.del.submit(data);\r\n        let children = item.parent.children;\r\n        let index = children.findIndex(v => v === item);\r\n        if (index >= 0) children.splice(index, 1);\r\n    }\r\n\r\n    protected get VMapMain():typeof VMapMain {return VMapMain}\r\n}\r\n","export * from './cMap';\r\nexport * from './vMain';\r\n","import * as React from 'react';\r\nimport { TuidMain, History, Entity } from '../../entities';\r\nimport { Page } from 'tonva-tools';\r\nimport { VEntity } from '../CVEntity';\r\nimport { CHistory, HistoryUI } from './cHistory';\r\n\r\nexport class VHistoryMain extends VEntity<History, HistoryUI, CHistory> {\r\n    async open(param?:any):Promise<void> {\r\n        this.openPage(this.view);\r\n    }\r\n\r\n    protected view = () => <Page header={this.label}>\r\n        History\r\n    </Page>;\r\n}\r\n","import { CEntity, EntityUI } from \"../CVEntity\";\r\nimport { History } from \"../../entities\";\r\nimport { VHistoryMain } from \"./vHistoryMain\";\r\n\r\nexport interface HistoryUI extends EntityUI {\r\n    CHistory?: typeof CHistory;\r\n    main: typeof VHistoryMain,\r\n}\r\n\r\nexport class CHistory extends CEntity<History, HistoryUI> {\r\n    protected async internalStart() {\r\n        await this.openVPage(this.VHistoryMain);\r\n    }\r\n\r\n    protected get VHistoryMain():typeof VHistoryMain {return VHistoryMain}\r\n}\r\n","export * from './cHistory';\r\nexport * from './vHistoryMain';\r\n","import * as React from 'react';\r\nimport { VPage, Page } from 'tonva-tools';\r\nimport { jsonStringify } from '../../tools';\r\nimport { VForm } from '../form';\r\nimport { VEntity } from '../CVEntity';\r\nimport { CAction, ActionUI } from './cAction';\r\nimport { Action } from '../../entities';\r\n\r\nexport class VActionMain extends VEntity<Action, ActionUI, CAction> {\r\n    protected vForm: VForm;\r\n    protected returns: any;\r\n\r\n    async open(param?:any):Promise<void> {\r\n        this.vForm = this.createForm(this.onSubmit, param);\r\n        this.openPage(this.mainPage);\r\n    }\r\n\r\n    private onSubmit = async () => {\r\n        let values = this.vForm.getValues();\r\n        this.returns = await this.controller.submit(values);\r\n        this.closePage();\r\n        this.openPage(this.resultPage);\r\n    }\r\n\r\n    protected mainPage = () => {\r\n        let {label} = this.controller;\r\n        return <Page header={label}>\r\n            {this.vForm.render('mx-3 my-2')}\r\n        </Page>;\r\n    }\r\n\r\n    protected resultPage = () => {\r\n        let {label} = this.controller;\r\n        return <Page header={label} back=\"close\">\r\n            完成！\r\n            <pre>\r\n                {jsonStringify(this.returns)}\r\n            </pre>\r\n        </Page>;\r\n    }\r\n}\r\n","import { CEntity, EntityUI } from \"../CVEntity\";\r\nimport { Action } from \"../../entities\";\r\nimport { VActionMain } from \"./vActionMain\";\r\n\r\nexport interface ActionUI extends EntityUI {\r\n    CAction?: typeof CAction;\r\n    //main: typeof VActionMain,\r\n}\r\n\r\nexport class CAction extends CEntity<Action, ActionUI> {\r\n    protected async internalStart() {\r\n        await this.openVPage(this.VActionMain);\r\n    }\r\n\r\n    protected get VActionMain():typeof VActionMain {return VActionMain}\r\n\r\n    async submit(values:any) {\r\n        return this.entity.submit(values);\r\n    }\r\n}\r\n","export * from './cAction';\r\nexport * from './vActionMain';\r\n","import * as React from 'react';\r\nimport { TuidMain, Pending, Entity } from '../../entities';\r\nimport { Page } from 'tonva-tools';\r\nimport { VEntity } from '../CVEntity';\r\nimport { CPending, PendingUI } from './cPending';\r\n\r\nexport class VPendingMain extends VEntity<Pending, PendingUI, CPending> {\r\n    async open(param?:any):Promise<void> {\r\n        this.openPage(this.view);\r\n    }\r\n\r\n    protected view = () => <Page header={this.label}>\r\n        pending\r\n    </Page>;\r\n}\r\n","import { CEntity, EntityUI } from \"../CVEntity\";\r\nimport { Pending } from \"../../entities\";\r\nimport { VPendingMain } from \"./vPendingMain\";\r\n\r\nexport interface PendingUI extends EntityUI {\r\n    CPending?: typeof CPending;\r\n    main: typeof VPendingMain,\r\n}\r\n\r\nexport class CPending extends CEntity<Pending, PendingUI> {\r\n    protected async internalStart() {\r\n        await this.openVPage(this.VPendingMain);\r\n    }\r\n\r\n    protected get VPendingMain():typeof VPendingMain {return VPendingMain}\r\n}\r\n","export * from './cPending';\r\nexport * from './vPendingMain';\r\n","\r\nimport {setCenterToken} from './uqApi';\r\nimport {WSChannel} from './wsChannel';\r\n\r\nexport const netToken = {\r\n    set(userId:number, token:string) {\r\n        setCenterToken(userId, token);\r\n        WSChannel.setCenterToken(token);\r\n    },\r\n    clear() {\r\n        setCenterToken(0, undefined);\r\n        WSChannel.setCenterToken(undefined);\r\n    }\r\n};\r\n","import {CenterApi} from '../net';\r\nimport {User, decodeUserToken} from '../user';\r\n//import { nav } from '../ui';\r\n\r\nexport class UserApi extends CenterApi {\r\n    async login(params: {user: string, pwd: string, guest: number}): Promise<any> {\r\n        //(params as any).device = nav.local.device.get();\r\n        let ret = await this.get('login', params);\r\n        switch (typeof ret) {\r\n            default: return;\r\n            case 'string': return decodeUserToken(ret);\r\n            case 'object':\r\n                let token = ret.token;\r\n                let user = decodeUserToken(token);\r\n                let {nick, icon} = ret;\r\n                if (nick) user.nick = nick;\r\n                if (icon) user.icon = icon;\r\n                return user;\r\n        }\r\n        // !== undefined) return decodeToken(token);\r\n    }\r\n    async register(params: {\r\n        nick:string, \r\n        user:string, \r\n        pwd:string,\r\n        country:number, \r\n        mobile:number, \r\n        email:string,\r\n        verify:string,\r\n    }): Promise<any>\r\n    {\r\n        return await this.post('register', params);\r\n    }\r\n\r\n    async setVerify(account:string, type:'mobile'|'email') {\r\n        return await this.post('set-verify', {account:account, type:type});\r\n    }\r\n\r\n    async checkVerify(account:string, verify:string) {\r\n        return await this.post('check-verify', {account:account, verify:verify});\r\n    }\r\n\r\n    async isExists(account:string) {\r\n        return await this.get('is-exists', {account:account});\r\n    }\r\n\r\n    async resetPassword(account:string, password:string, verify:string, type:'mobile'|'email') {\r\n        return await this.post('reset-password', {account:account, password, verify, type});\r\n    }\r\n    \r\n    async userSetProp(prop:string, value:any) {\r\n        await this.post('tie/user-set-prop', {prop:prop, value:value});\r\n    }\r\n}\r\n\r\nconst userApi = new UserApi('tv/user/', undefined);\r\n\r\nexport default userApi;\r\n","\r\nconst zero = '00000000000000';\r\nexport function left0(num:number, fix:number) {\r\n    if (num === undefined) return '';\r\n    let r = num.toString();\r\n    let len = fix - r.length;\r\n    if (len <= 0) return r;\r\n    return zero.substr(0, len) + r;\r\n}\r\n","import * as React from 'react';\r\nimport _ from 'lodash';\r\nimport {User} from '../user';\r\nimport {nav} from './nav';\r\nimport {Page} from './page';\r\nimport { isDevelopment } from '../net';\r\n\r\nexport abstract class Controller {\r\n    readonly res: any;\r\n    readonly x: any;\r\n    icon: string|JSX.Element;\r\n    label:string;\r\n    readonly isDev:boolean = isDevelopment;\r\n    get user():User {return nav.user}\r\n    get isLogined():boolean {\r\n        let {user} = nav;\r\n        if (user === undefined) return false;\r\n        return user.id > 0;\r\n    }\r\n    constructor(res:any) {\r\n        this.res = res || {};\r\n        this.x = this.res.x || {};\r\n    }\r\n\r\n    private receiveHandlerId:number;\r\n    private disposer:()=>void;\r\n\r\n    private dispose() {\r\n        // message listener的清理\r\n        nav.unregisterReceiveHandler(this.receiveHandlerId);\r\n        this.onDispose();\r\n    }\r\n\r\n    protected onDispose() {\r\n    }\r\n\r\n    protected async openVPage<C extends Controller>(vp: new (controller: C)=>VPage<C>, param?:any):Promise<void> {\r\n        await (new vp((this as any) as C)).open(param);\r\n    }\r\n\r\n    protected renderView<C extends Controller>(view: new (controller: C)=>View<C>, param?:any) {\r\n        return (new view((this as any) as C)).render(param);\r\n    }\r\n\r\n    async event(type:string, value:any) {\r\n        await this.onEvent(type, value);\r\n    }\r\n\r\n    protected async onEvent(type:string, value:any) {\r\n    }\r\n\r\n    protected msg(text:string) {\r\n        alert(text);\r\n    }\r\n    protected errorPage(header:string, err:any) {\r\n        this.openPage(<Page header=\"App error!\">\r\n            <pre>\r\n                {typeof err === 'string'? err : err.message}\r\n            </pre>\r\n        </Page>);\r\n    }\r\n\r\n    protected onMessage(message:any):Promise<void> {\r\n        return;\r\n    }\r\n\r\n    private onMessageReceive = async (message:any):Promise<void> => {\r\n        await this.onMessage(message);\r\n    }\r\n\r\n    protected async beforeStart():Promise<boolean> {\r\n        /*\r\n        console.log('this.receiveHandlerId = nav.registerReceiveHandler(this.onMessageReceive);');\r\n        this.receiveHandlerId = nav.registerReceiveHandler(this.onMessageReceive);\r\n        console.log('return true');\r\n        */\r\n        return true;\r\n    }\r\n    protected registerReceiveHandler() {\r\n        this.receiveHandlerId = nav.registerReceiveHandler(this.onMessageReceive);\r\n    }\r\n\r\n    protected abstract internalStart(param?:any):Promise<void>;\r\n    async start(param?:any):Promise<void> {\r\n        this.disposer = this.dispose.bind(this);\r\n        this.registerReceiveHandler();\r\n        let ret = await this.beforeStart();\r\n        if (ret === false) return;\r\n        await this.internalStart(param);\r\n    }\r\n\r\n    get isCalling():boolean {return this._resolve_$ !== undefined}\r\n\r\n    private _resolve_$:((value:any) => void)[];\r\n    async call<T>(param?:any):Promise<T> {\r\n        if (this._resolve_$ === undefined) this._resolve_$ = [];\r\n        return new Promise<T> (async (resolve, reject) => {\r\n            this._resolve_$.push(resolve);\r\n            await this.start(param);\r\n        });\r\n    }\r\n\r\n    async vCall<C extends Controller>(vp: new (controller: C)=>VPage<C>, param?:any):Promise<any> {\r\n        if (this._resolve_$ === undefined) this._resolve_$ = [];\r\n        return new Promise<any> (async (resolve, reject) => {\r\n            this._resolve_$.push(resolve);\r\n            await (new vp(this as any)).open(param);\r\n        });\r\n    }\r\n\r\n    returnCall(value:any) {\r\n        if (this._resolve_$ === undefined) return;\r\n        let resolve = this._resolve_$.pop();\r\n        if (resolve === undefined) {\r\n            alert('the Controller call already returned, or not called');\r\n            return;\r\n        }\r\n        resolve(value);\r\n    }\r\n\r\n    openPage(page:JSX.Element) {\r\n        nav.push(page, this.disposer);\r\n        this.disposer = undefined;\r\n    }\r\n\r\n    replacePage(page:JSX.Element) {\r\n        nav.replace(page, this.disposer);\r\n        this.disposer = undefined;\r\n    }\r\n\r\n    backPage() {\r\n        nav.back();\r\n    }\r\n\r\n    closePage(level?:number) {\r\n        nav.pop(level);\r\n    }\r\n\r\n    ceasePage(level?:number) {\r\n        nav.ceaseTop(level);\r\n    }\r\n\r\n    removeCeased() {\r\n        nav.removeCeased();\r\n    }\r\n\r\n    regConfirmClose(confirmClose: ()=>Promise<boolean>) {\r\n        nav.regConfirmClose(confirmClose);\r\n    }\r\n}\r\n\r\n\r\nexport abstract class View<C extends Controller> {\r\n    protected controller: C;\r\n    protected readonly res: any;\r\n    protected readonly x: any;\r\n\r\n    constructor(controller: C) {\r\n        this.controller = controller;\r\n        this.res = controller.res;\r\n        this.x = controller.x;\r\n    }\r\n\r\n    protected get isDev() {return isDevelopment}\r\n\r\n    abstract render(param?:any): JSX.Element;\r\n\r\n    protected renderVm(vm: new (controller: C)=>View<C>, param?:any) {\r\n        return (new vm(this.controller)).render(param);\r\n    }\r\n\r\n    protected async openVPage(vp: new (controller: C)=>VPage<C>, param?:any):Promise<void> {\r\n        await (new vp(this.controller)).open(param);\r\n    }\r\n\r\n    protected async event(type:string, value?:any) {\r\n        /*\r\n        if (this._resolve_$_ !== undefined) {\r\n            await this._resolve_$_({type:type, value:value});\r\n            return;\r\n        }*/\r\n        await this.controller.event(type, value);\r\n    }\r\n\r\n    async vCall<C extends Controller>(vp: new (controller: C)=>VPage<C>, param?:any):Promise<any> {\r\n        return await this.controller.vCall(vp, param);\r\n    }\r\n\r\n    protected returnCall(value:any) {\r\n        this.controller.returnCall(value);\r\n    }\r\n\r\n    protected openPage(view: React.StatelessComponent<any>, param?:any) {\r\n        this.controller.openPage(React.createElement(view, param));\r\n    }\r\n\r\n    protected replacePage(view: React.StatelessComponent<any>, param?:any) {\r\n        this.controller.replacePage(React.createElement(view, param));\r\n    }\r\n\r\n    protected openPageElement(page: JSX.Element) {\r\n        this.controller.openPage(page);\r\n    }\r\n\r\n    protected replacePageElement(page: JSX.Element) {\r\n        this.controller.replacePage(page);\r\n    }\r\n\r\n    protected backPage() {\r\n        this.controller.backPage();\r\n    }\r\n\r\n    protected closePage(level?:number) {\r\n        this.controller.closePage(level);\r\n    }\r\n\r\n    protected ceasePage(level?:number) {\r\n        this.controller.ceasePage(level);\r\n    }\r\n\r\n    protected removeCeased() {\r\n        this.controller.removeCeased();\r\n    }\r\n\r\n    protected regConfirmClose(confirmClose: ()=>Promise<boolean>) {\r\n        this.controller.regConfirmClose(confirmClose);\r\n    }\r\n}\r\n\r\nexport abstract class VPage<C extends Controller> extends View<C> {\r\n    abstract open(param?:any):Promise<void>;\r\n\r\n    render(param?:any):JSX.Element {return null;}\r\n}\r\n\r\nexport type TypeVPage<C extends Controller> = new (controller: C)=>VPage<C>;\r\n\r\n","export * from './schema';\r\nexport * from './uiSchema';\r\n","\r\nexport const mobileRegex = /^[0-9]*$/;\r\nexport const emailRegex = /\\w+([-+.]\\w+)*@\\w+([-.]\\w+)*\\.\\w+([-.]\\w+)*/;\r\n// /^([a-zA-Z0-9]+[_|\\_|\\.]?)*[a-zA-Z0-9]+@([a-zA-Z0-9]+[_|\\_|\\.]?)*[a-zA-Z0-9]+\\.[a-zA-Z]{2,3}$/\r\n\r\nexport const EmailFieldRule = (value:any): string|string[] => {\r\n    if (emailRegex.test(value as string) === false) return '电子邮件格式错误';\r\n}\r\n\r\nexport const MobileFieldRule = (value:any): string|string[] => {\r\n    if (emailRegex.test(value as string) === false) return '手机格式错误';\r\n}\r\n","import {observable, IObservableArray, computed} from 'mobx';\r\nimport {uid} from './uid';\r\n\r\nexport abstract class PageItems<T> {\r\n    constructor(itemObservable:boolean = false) {\r\n        this._items = observable.array<T>([], {deep:itemObservable});\r\n    }\r\n    private isFirst: boolean = true;\r\n    @observable loading: boolean = false;\r\n    @observable private beforeLoad: boolean = true;\r\n    @observable protected loaded: boolean = false;\r\n    protected _items:IObservableArray<T>;\r\n    @observable allLoaded: boolean = false;\r\n    @computed get items():IObservableArray<T> {\r\n        if (this.beforeLoad === true) return null;\r\n        if (this.loaded === false) return undefined;\r\n        return this._items;\r\n    }\r\n\r\n    @observable topDiv:string;\r\n    @observable bottomDiv:string;\r\n    scrollToTop() {\r\n        this.topDiv = '$$'+uid();\r\n    }\r\n    scrollToBottom() {\r\n        this.bottomDiv = '$$'+uid();\r\n    }\r\n\r\n    protected param: any;\r\n    protected firstSize = 100;\r\n    protected pageStart = undefined;\r\n    protected pageSize = 30;\r\n    protected appendPosition:'head'|'tail' = 'tail';\r\n\r\n    protected abstract async load(param:any, pageStart:any, pageSize:number):Promise<T[]>;\r\n    protected abstract setPageStart(item:T);\r\n\r\n    reset() {\r\n        this.isFirst = true;\r\n        this.beforeLoad = true;\r\n        this.loaded = false;\r\n        this.param = undefined;\r\n        this.allLoaded = false;\r\n        this._items.clear();\r\n        this.setPageStart(undefined);\r\n    }\r\n\r\n    append(item:T) {\r\n        if (this.appendPosition === 'tail')\r\n            this._items.unshift(item);\r\n        else\r\n            this._items.push(item);\r\n    }\r\n\r\n    async first(param:any):Promise<void> {\r\n        this.reset();\r\n        this.beforeLoad = false;\r\n        this.param = param;\r\n        await this.more();        \r\n    }\r\n\r\n    async more():Promise<void> {\r\n        if (this.allLoaded === true) return;\r\n        if (this.loading === true) return;\r\n        this.loading = true;\r\n        let pageSize = this.pageSize + 1;\r\n        if (this.isFirst === true) {\r\n            if (this.firstSize > this.pageSize) pageSize = this.firstSize+1;\r\n        }\r\n        let ret = await this.load(\r\n                this.param, \r\n                this.pageStart,\r\n                pageSize);\r\n        this.loading = false;\r\n        this.loaded = true;\r\n        let len = ret.length;\r\n        if (this.isFirst===true && len>this.firstSize ||\r\n            this.isFirst===false && len>this.pageSize)\r\n        {\r\n            this.allLoaded = false;\r\n            --len;\r\n            ret.splice(len, 1);\r\n        }\r\n        else {\r\n            this.allLoaded = true;\r\n        }\r\n        if (len === 0) {\r\n            this._items.clear();\r\n            return;\r\n        }\r\n        this.setPageStart(ret[len-1]);\r\n        if (this.appendPosition === 'tail')\r\n            this._items.push(...ret);\r\n        else\r\n            this._items.unshift(...ret.reverse());\r\n        this.isFirst = false;\r\n    }\r\n}\r\n","import {observable, computed} from 'mobx';\r\n\r\nexport interface Id {\r\n    id: number;\r\n}\r\n\r\nexport abstract class CacheIds<T extends Id> {\r\n    constructor(maxCount:number = 100) {\r\n        this.maxCount = maxCount;\r\n    }\r\n    private maxCount:number;\r\n    private arr:T[] = [];\r\n    @observable dict = new Map<number, T>();\r\n\r\n    loadIds(ids:number[]) {\r\n        let arr:number[] = [];\r\n        for (let id of ids) {\r\n            if (id === null) continue;\r\n            let item = this.dict.get(id);\r\n            if (item === undefined) {\r\n                arr.push(id);\r\n                item = {id:id} as T;\r\n                this.dict.set(id, item);\r\n            }\r\n        }                \r\n        this.loadId(arr);\r\n    }\r\n\r\n    get(id:number):T {\r\n        if (id === undefined || id === null) return null;\r\n        let item = this.dict.get(id);\r\n        if (item === undefined) {\r\n            this.dict.set(id, {id:id} as T);\r\n            this.loadId([id]);\r\n            item = this.dict.get(id);\r\n        }\r\n        return item;\r\n    }\r\n    private setItem(id:number, item:T) {\r\n        if (item === undefined) {\r\n            this.dict.set(id, null);\r\n            this.arr.push({id: id} as T);\r\n        }\r\n        else {\r\n            this.dict.set(id, item);\r\n            this.arr.push(item);\r\n        }\r\n        if (this.arr.length > this.maxCount) {\r\n            item = this.arr.shift();\r\n            this.dict.delete(item.id);\r\n        }\r\n    }\r\n    private async loadId(ids:number[]) {\r\n        let items = await this._loadIds(ids);\r\n        if (items === undefined) {\r\n            for (let id of ids) {\r\n                if (id === null) continue;\r\n                let item = await this._loadId(id);\r\n                this.setItem(id, item);\r\n            }\r\n        }\r\n        else {\r\n            for (let id of ids) {\r\n                let item = items.find(v => v.id === id);\r\n                this.setItem(id, item);\r\n            }\r\n        }\r\n    }\r\n\r\n    protected abstract async _loadIds(ids:number[]):Promise<T[]>;\r\n    protected abstract async _loadId(id:number):Promise<T>;\r\n}\r\n","import * as React from 'react';\r\nimport {observer} from 'mobx-react';\r\nimport {FormView, FormProps} from './formView';\r\n\r\nexport function tonvaDebug() {\r\n    let a = 0;\r\n}\r\n\r\nexport interface TonvaFormProps extends FormProps {\r\n    className?: string;\r\n    initValues?: any;\r\n}\r\n\r\n@observer \r\nexport class TonvaForm extends React.Component<TonvaFormProps, {}> {\r\n    formView: FormView;\r\n    constructor(props:TonvaFormProps) {\r\n        super(props);\r\n        this.formView = new FormView(this.props);\r\n    }\r\n    componentWillMount() {\r\n        this.formView.setInitValues(this.props.initValues);\r\n    }\r\n    debug() {\r\n        let s = null;\r\n    }\r\n    render() {\r\n        let {className, children, initValues} = this.props;\r\n        return <div className={className}>\r\n            {\r\n                children === undefined? \r\n                    this.formView.render() : \r\n                    <form onSubmit={this.formView.onSubmit}>{children}</form>\r\n            }\r\n        </div>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport classNames from 'classnames';\r\n\r\nexport interface Action {\r\n    icon?: string;\r\n    caption?: string;\r\n    action?: () => void;\r\n}\r\n\r\nexport interface DropdownActionsProps {\r\n    icon?: string;\r\n    actions: Action[];\r\n    isRight?: boolean;\r\n}\r\n\r\nexport interface DropdownActionsState {\r\n    dropdownOpen: boolean;\r\n}\r\n\r\nexport class DropdownActions extends React.Component<DropdownActionsProps, DropdownActionsState> {\r\n    private menu: HTMLDivElement;\r\n    private button: HTMLElement;\r\n    constructor(props:DropdownActionsProps) {\r\n        super(props);\r\n        this.state = {\r\n            dropdownOpen: false\r\n        };\r\n    }\r\n\r\n    componentWillMount() {\r\n        document.addEventListener('click', this.handleDocumentClick);\r\n        document.addEventListener('touchstart', this.handleDocumentClick);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        document.removeEventListener('click', this.handleDocumentClick);\r\n        document.removeEventListener('touchstart', this.handleDocumentClick);\r\n    }\r\n\r\n    private handleDocumentClick = (evt:any) => {\r\n        if (this.state.dropdownOpen === false) return;\r\n        if (this.button && this.button.contains(evt.target)) return;\r\n        if (!this.menu) return;\r\n        //if (!this.menu.contains(evt.target)) \r\n        this.toggle();\r\n    }\r\n\r\n    private toggle = () => {\r\n        this.setState({\r\n            dropdownOpen: !this.state.dropdownOpen\r\n        });\r\n    }\r\n\r\n    render() {\r\n        let {icon, actions, isRight} = this.props;\r\n        if (isRight === undefined) isRight = true;\r\n        let hasIcon = actions.some(v => v.icon!==undefined);\r\n        let {dropdownOpen} = this.state;\r\n        //isOpen={this.state.dropdownOpen} toggle={this.toggle}\r\n        return <div className=\"dropdown\">\r\n            <button ref={v=>this.button=v} className=\"cursor-pointer dropdown-toggle btn btn-sm\"\r\n                data-toggle=\"dropdown\"\r\n                aria-expanded={dropdownOpen}\r\n                onClick={this.toggle}>\r\n                <i className={classNames('fa', 'fa-'+(icon||'ellipsis-v'))} />\r\n            </button>\r\n            <div ref={v => this.menu=v} className={classNames({\"dropdown-menu\":true, \"dropdown-menu-right\":isRight, \"show\":dropdownOpen})}>\r\n                {\r\n                    actions.map((v,index) => {\r\n                        let {icon, caption, action} = v;\r\n                        if (icon === undefined && caption === undefined) \r\n                            return <div className=\"dropdown-divider\" />;\r\n                        let i:any;\r\n                        if (hasIcon === true) {\r\n                            if (icon !== undefined) icon = 'fa-' + icon;\r\n                            i = <><i className={classNames('fa', icon, 'fa-fw')} aria-hidden={true}></i>&nbsp; </>;\r\n                        }\r\n                        if (action === undefined) \r\n                            return <h6 className=\"dropdown-header\">{i} {caption}</h6>;\r\n                        return <a className=\"dropdown-item\" key={index} href=\"#\" onClick={(evt:React.MouseEvent<HTMLAnchorElement>)=>{ evt.preventDefault();action()}}>{i} {caption}</a>\r\n                    })\r\n                }\r\n            </div>\r\n        </div>\r\n    }\r\n}\r\n\r\n/*\r\nexport class DropdownActions extends React.Component<DropdownActionsProps, DropdownActionsState> {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            dropdownOpen: false\r\n        };\r\n    }\r\n    private toggle = () => {\r\n        this.setState({\r\n            dropdownOpen: !this.state.dropdownOpen\r\n        });\r\n    }\r\n    render() {\r\n        let {icon, actions, isRight} = this.props;\r\n        if (isRight === undefined) isRight = true;\r\n        let hasIcon = actions.some(v => v.icon!==undefined);\r\n        return <UncontrolledButtonDropdown isOpen={this.state.dropdownOpen} toggle={this.toggle}>\r\n            <DropdownToggle caret={true} size=\"sm\" className=\"cursor-pointer\">\r\n                <i className={classNames('fa', 'fa-'+(icon||'ellipsis-v'))} />\r\n            </DropdownToggle>\r\n            <DropdownMenu right={isRight}>\r\n                {actions.map((v,index) => {\r\n                    let {icon, caption, action} = v;\r\n                    if (icon === undefined && caption === undefined) \r\n                        return <div className=\"dropdown-divider\" />;\r\n                    let i;\r\n                    if (hasIcon === true) {\r\n                        if (icon !== undefined) icon = 'fa-' + icon;\r\n                        i = <><i className={classNames('fa', icon, 'fa-fw')} aria-hidden={true}></i>&nbsp; </>;\r\n                    }\r\n                    if (action === undefined) \r\n                        return <h6 className=\"dropdown-header\">{i} {caption}</h6>;\r\n                    return <DropdownItem key={index} onClick={action}>{i} {caption}</DropdownItem>\r\n                })}\r\n            </DropdownMenu>\r\n        </UncontrolledButtonDropdown>\r\n    }\r\n}\r\n*/","import * as React from 'react';\r\n\r\nexport interface EasyDateProps {\r\n    date: Date | string;\r\n}\r\n\r\nexport class EasyDate extends React.Component<EasyDateProps> {\r\n    render() {\r\n        let {date} = this.props;\r\n        if (!date) return null;\r\n        let d = (typeof date === 'string')? new Date(Date.parse(date)) : date;\r\n        let now = new Date();\r\n        let tick = now.getTime() - d.getTime();\r\n        let nDate=now.getDate();\r\n        let _date=d.getDate(), hour=d.getHours(), minute=d.getMinutes(), month=d.getMonth()+1;\r\n        let hm = hour + ((minute<10?':0':':') + minute);\r\n        if (tick < -24*3600*1000) return d.getFullYear()+'年'+month+'月'+_date+'日 ' + hm;\r\n        if (tick < 24*3600*1000) {\r\n            return _date!==nDate? \r\n                (tick < 0? '明天 ' : '昨天 ') + hm \r\n                : hm;\r\n        }\r\n        if (tick < 365*24*3600*1000) {\r\n            return month+'月'+_date+'日 ';\r\n        }\r\n        return d.getFullYear()+'年'+month+'月'+_date+'日';\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport classNames from 'classnames';\r\nimport { Image } from 'tonva-tools';\r\n\r\nexport interface MediaProps {\r\n    icon: string;\r\n    main: string|JSX.Element;\r\n    discription?: string | JSX.Element;\r\n    px?: number;\r\n    py?: number;\r\n}\r\n\r\nexport class Media extends React.Component<MediaProps> {\r\n    render() {\r\n        let {icon, main, discription, px, py} = this.props;\r\n        let disp:any;\r\n        if (typeof discription === 'string')\r\n            disp = <div>{discription}</div>;\r\n        else\r\n            disp = discription;\r\n        let cn = classNames(\r\n            'media', \r\n            px===undefined? 'px-0':'px-'+px, \r\n            py===undefined? 'py-2':'py-'+py);\r\n        return <div className={cn}>\r\n            <Image className=\"mr-3 w-4c h-4c\" src={icon} />\r\n            <div className=\"media-body\">\r\n                <h5 className=\"mt-0\">{main}</h5>\r\n                {disp}\r\n            </div>\r\n        </div>\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport classNames from 'classnames';\r\nimport { observable } from 'mobx';\r\n\r\nexport interface SearchBoxProps {\r\n    className?: string;\r\n    label?: string;\r\n    initKey?: string;\r\n    placeholder?: string;\r\n    buttonText?: string;\r\n    maxLength?: number;\r\n    size?: 'sm' | 'md' | 'lg';\r\n    inputClassName?: string;\r\n    onSearch: (key:string)=>Promise<void>;\r\n    onFocus?: ()=>void;\r\n    allowEmptySearch?: boolean;\r\n}\r\n\r\n/*\r\nexport interface SearchBoxState {\r\n    disabled: boolean;\r\n}*/\r\n\r\nexport class SearchBox extends React.Component<SearchBoxProps> { //}, SearchBoxState> {\r\n    private input: HTMLInputElement;\r\n    private key: string = null;\r\n    @observable private disabled: boolean;\r\n\r\n    private onChange = (evt: React.ChangeEvent<any>) => {\r\n        this.key = evt.target.value;\r\n        if (this.key !== undefined) {\r\n            this.key = this.key.trim();\r\n            if (this.key === '') this.key = undefined;\r\n        }\r\n        if (this.props.allowEmptySearch !== true) {\r\n            this.disabled = !this.key;\r\n        }\r\n    }\r\n    private onSubmit = async (evt: React.FormEvent<any>) => {\r\n        evt.preventDefault();\r\n        if (this.key === null) this.key = this.props.initKey || '';\r\n        if (this.props.allowEmptySearch !== true) {\r\n            if (!this.key) return;\r\n            if (this.input) this.input.disabled = true;\r\n        }\r\n        await this.props.onSearch(this.key);\r\n        if (this.input) this.input.disabled = false;\r\n    }\r\n    clear() {\r\n        if (this.input) this.input.value = '';\r\n    }\r\n    render() {\r\n        let {className, inputClassName, onFocus,\r\n            label, placeholder, buttonText, maxLength, size} = this.props;\r\n        let inputSize:string;\r\n        switch (size) {\r\n            default:\r\n            case 'sm': inputSize = 'input-group-sm'; break;\r\n            case 'md': inputSize = 'input-group-md'; break;\r\n            case 'lg': inputSize = 'input-group-lg'; break;\r\n        }\r\n        let lab:any;\r\n        if (label !== undefined) lab = <label className=\"input-group-addon\">{label}</label>;\r\n        return <form className={className} onSubmit={this.onSubmit} >\r\n            <div className={classNames(\"input-group\", inputSize)}>\r\n                {lab}\r\n                <input ref={v=>this.input=v} onChange={this.onChange}\r\n                    type=\"text\"\r\n                    name=\"key\"\r\n                    onFocus={onFocus}\r\n                    className={classNames('form-control', inputClassName || 'border-primary')}\r\n                    placeholder={placeholder}\r\n                    defaultValue={this.props.initKey}\r\n                    maxLength={maxLength} />\r\n                <div className=\"input-group-append\">\r\n                    <button className=\"btn btn-primary\"\r\n                        type=\"submit\"\r\n                        disabled={this.disabled}>\r\n                        <i className='fa fa-search' />\r\n                        <i className=\"fa\"/>\r\n                        {buttonText}\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </form>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport _ from 'lodash';\r\nimport className from 'classnames';\r\nimport {FormProps, FormRow, SubmitResult, FormView, TonvaForm} from '../form';\r\n\r\nexport interface Step {\r\n    formRows: FormRow[];\r\n    next: undefined | string | ((values:any) => string);    // 返回下一步的step名称或者直接就是名称\r\n    ex?: any;                                   // 每一步额外的参数\r\n}\r\n\r\nexport interface MultiStepProps {\r\n    className?: string;\r\n    header?: (step:Step, num:number) => JSX.Element; //name: step name, num: 第几步，1开始\r\n    footer?: (step:Step, num:number) => JSX.Element; //name: step name, num: 第几步，1开始\r\n    steps: {[name:string]: Step};\r\n    first: string;         // 第一步的名字\r\n    onSubmit: (values:any) => Promise<SubmitResult|undefined>;\r\n    submitButton?: string|JSX.Element;\r\n}\r\n\r\nexport interface StepView {\r\n    stepName: string;\r\n    step: Step;\r\n    props: FormProps;\r\n    //view: JSX.Element;\r\n}\r\nexport interface MultiStepState {\r\n    //num: number;\r\n    //step: Step;\r\n    //formView: FormView;\r\n    topView: StepView;\r\n    stepViews: StepView[];\r\n}\r\n\r\nexport class MultiStep extends React.Component<MultiStepProps, MultiStepState> {\r\n    private values: any = {};\r\n    private stepViews: StepView[] = [];\r\n    private topView: StepView;\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            topView: undefined,\r\n            stepViews: [],\r\n        }\r\n        this.onPrev = this.onPrev.bind(this);\r\n        this.onNext = this.onNext.bind(this);\r\n    }\r\n    \r\n    private setStep(stepName: string) {\r\n        let step = this.props.steps[stepName];\r\n        if (step === undefined) return; //throw new Error('Unknown step name: ' + stepName);\r\n        if (this.topView !== undefined) this.stepViews.push(this.topView);\r\n        let otherButton, onOther;\r\n        if (this.stepViews.length > 0) {\r\n            otherButton = <ButtonConten prefix=\"undo\" text=\"上一步\" />;\r\n            onOther = this.onPrev;\r\n        }\r\n        let {header, footer} = this.props;\r\n        let btnContent = step.next === undefined?\r\n            {prefix: 'cloud-upload', text: this.props.submitButton || '提交'} :\r\n            {suffix: 'arrow-right', text: '下一步'}\r\n        let formProps = {\r\n            formRows: step.formRows,\r\n            submitButton: <ButtonConten {...btnContent} />,\r\n            onSubmit: this.onNext,\r\n            otherButton: otherButton,\r\n            onOther: onOther,\r\n        };\r\n        let num = this.stepViews.length + 1;\r\n        this.topView = {\r\n            stepName: stepName,\r\n            step: step,\r\n            props: formProps,\r\n        };\r\n        this.setState({\r\n            topView: this.topView,\r\n            stepViews: this.stepViews\r\n        });\r\n    }\r\n    componentWillMount() {\r\n        this.setStep(this.props.first);\r\n    }\r\n    private onPrev(values:any) {\r\n        _.assign(this.values, values);\r\n        this.topView = this.stepViews.pop();\r\n        this.setState({\r\n            topView: this.topView,\r\n            stepViews: this.stepViews\r\n        });\r\n    }\r\n    private onNext(values:any): Promise<SubmitResult|undefined> {\r\n        _.assign(this.values, values);\r\n        //let {num, step} = this.state;\r\n        let {next} = this.topView.step;\r\n        if (next === undefined) {\r\n            return this.props.onSubmit(this.values)\r\n        }\r\n        let nextStepName:string;\r\n        if (typeof next === 'string') {\r\n            nextStepName = next;\r\n        }\r\n        else {\r\n            nextStepName = next(this.values);\r\n        }\r\n        this.setStep(nextStepName);\r\n    }\r\n    render() {\r\n        let {className, header, footer} = this.props;\r\n        let {topView, stepViews} = this.state;\r\n        let {stepName, step} = topView;\r\n        let hidden = {visibility: 'hidden'};\r\n        let num = stepViews.length + 1;\r\n        return <div className={className}>\r\n            <div>\r\n                {header && header(step, num)}\r\n                <TonvaForm key={stepName} initValues={this.values} {...topView.props} />\r\n                {footer && footer(step, num)}\r\n            </div>\r\n        </div>;\r\n    }\r\n}\r\n\r\nconst ButtonConten = (props:{prefix?:string, text?:string|JSX.Element, suffix?:string}) => {\r\n    let {prefix, text, suffix} = props;\r\n    let pIcon, sIcon;\r\n    if (prefix !== undefined) pIcon = <i className={className('fa', 'fa-' + prefix)} />;\r\n    if (suffix !== undefined) sIcon = <i className={className('fa', 'fa-' + suffix)} />;\r\n    return <React.Fragment>{pIcon} {props.text} {sIcon}</React.Fragment>;\r\n}\r\n    \r\n","import _ from 'lodash';\r\nimport { Context } from '../context';\r\nimport { FormRes } from '../formRes';\r\n\r\nexport abstract class Rule {\r\n    abstract check(defy:string[], value:any):void;\r\n}\r\n\r\nexport type ContextRule = (context:Context)=>{[target:string]:string[]|string} | string[] | string;\r\nexport type FieldRule = (value:any) => string[] | string;\r\n\r\nexport class RuleCustom extends Rule {\r\n    private func: FieldRule;\r\n    constructor(func: FieldRule) {\r\n        super();\r\n        this.func = func;\r\n    }\r\n    check(defy:string[], value:any) {\r\n        let ret = this.func(value);\r\n        if (ret === undefined) return;\r\n        switch (typeof ret) {\r\n            case 'undefined': return;\r\n            case 'string': defy.push(ret as string); return;\r\n            default: defy.push(...ret); return;\r\n        }        \r\n    }\r\n}\r\n\r\nexport abstract class RulePredefined extends Rule {\r\n    protected res: FormRes;\r\n    constructor(res: FormRes) {\r\n        super();\r\n        this.res = res;\r\n    }\r\n}\r\n\r\nexport class RuleRequired extends RulePredefined {\r\n    check(defy:string[], value:any) {\r\n        switch (typeof value) {\r\n            default:\r\n            case 'boolean': return;\r\n            case 'object':\r\n                if (value !== null) return;\r\n                break;\r\n            case 'string':\r\n                if ((value as string).trim().length > 0) return;\r\n                break;\r\n            case 'number':\r\n                if ((value as number) !== NaN) return;\r\n                break;\r\n            case 'undefined':\r\n                break;\r\n        }\r\n        defy.push(this.res.required);\r\n    }\r\n}\r\n\r\nexport class RuleNum extends RulePredefined {\r\n    private minMsg: _.TemplateExecutor;\r\n    private maxMsg: _.TemplateExecutor;\r\n    protected min: number;\r\n    protected max: number\r\n    constructor(res: FormRes, min?: number, max?: number) {\r\n        super(res);\r\n        this.minMsg = _.template(res.min);\r\n        this.maxMsg = _.template(res.max);\r\n        this.min = min;\r\n        this.max = max;\r\n    }\r\n    check(defy:string[], value:any) {\r\n        if (value === undefined || value === null) return;\r\n        let n = Number(value);\r\n        if (n === NaN) {\r\n            defy.push(this.res.number);\r\n        }\r\n        else {\r\n            this.checkMore(defy, n);\r\n        }\r\n    }\r\n\r\n    protected checkMore(defy:string[], value: number) {\r\n        if (this.min !== undefined && Number(value) < this.min) {\r\n            defy.push(this.minMsg({min:this.min}));\r\n        }\r\n        if (this.max !== undefined && Number(value) > this.max) {\r\n            defy.push(this.maxMsg({max:this.max}));\r\n        }\r\n    }\r\n}\r\n\r\nexport class RuleInt extends RuleNum {\r\n    protected checkMore(defy:string[], n: number) {\r\n        super.checkMore(defy, n);\r\n        if (Number.isInteger(n) === false) {\r\n            defy.push(this.res.integer);\r\n        }\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport classNames from 'classnames';\r\nimport { UiItem, ChangingHandler, ChangedHandler } from '../../schema';\r\nimport { FieldProps } from '../field';\r\nimport { Context } from '../context';\r\nimport { ItemSchema } from '../../schema';\r\nimport { Rule, RuleRequired, RuleCustom, FieldRule } from '../rules';\r\nimport { computed, observable, reaction } from 'mobx';\r\nimport { observer } from 'mobx-react';\r\n\r\nexport abstract class Widget {\r\n    protected name: string;\r\n    protected context: Context;\r\n    protected fieldProps:FieldProps;\r\n    protected children: React.ReactNode;\r\n    protected itemSchema: ItemSchema;\r\n    protected ui: UiItem;\r\n    protected defaultValue: any;\r\n    protected value: any;\r\n    protected rules: Rule[];\r\n    @observable protected errors: string[] = [];\r\n    @observable protected contextErrors: string[] = [];\r\n    @computed protected get hasError():boolean {return (this.errors.length + this.contextErrors.length)>0}\r\n    protected readOnly:boolean;\r\n    protected disabled:boolean;\r\n    @observable visible:boolean;\r\n\r\n    constructor(context:Context, itemSchema:ItemSchema, fieldProps:FieldProps, children: React.ReactNode) {\r\n        this.context = context;\r\n        let {name} = itemSchema;\r\n        this.name = name;\r\n        this.itemSchema = itemSchema;\r\n        this.fieldProps = fieldProps;\r\n        this.children = children;\r\n        this.ui = context.getUiItem(name);\r\n        if (this.ui === undefined) {\r\n            this.readOnly = false;\r\n            this.disabled = false;\r\n            this.visible = true;\r\n        }\r\n        else {\r\n            let {readOnly, disabled, visible} = this.ui;\r\n            this.readOnly = (readOnly === true);\r\n            this.disabled = (disabled === true);\r\n            this.visible = !(visible === false);            \r\n        }\r\n        this.value = this.defaultValue =  context.getValue(name); //defaultValue;\r\n        this.init();\r\n    }\r\n\r\n    protected init() {\r\n        this.rules = [];\r\n        if (this.itemSchema.required === true) {\r\n            this.rules.push(new RuleRequired(this.context.form.res));\r\n        }\r\n        this.buildRules();\r\n        if (this.ui === undefined) return;\r\n        let {rules} = this.ui;\r\n        if (rules === undefined) return;\r\n        if (Array.isArray(rules) === false) {\r\n            this.rules.push(new RuleCustom(rules as FieldRule));\r\n            return;\r\n        }\r\n        for (let rule of rules as FieldRule[]) {\r\n            this.rules.push(new RuleCustom(rule));\r\n        }\r\n    }\r\n\r\n    protected buildRules() {\r\n    }\r\n\r\n    checkRules() {\r\n        let defy:string[] = [];\r\n        for (let r of this.rules) r.check(defy, this.value);\r\n        if (defy.length === 0) {\r\n            this.context.removeErrorWidget(this);\r\n        }\r\n        else {\r\n            this.context.addErrorWidget(this);\r\n            this.errors.push(...defy);\r\n        }\r\n    }\r\n\r\n    @computed get isOk() {\r\n        return this.errors.length ===0;\r\n    }\r\n\r\n    setError(err:string | string[]) {\r\n        if (err === undefined) return;\r\n        if (typeof err === 'string') this.errors.push(err);\r\n        else this.errors.push(...err);\r\n    }\r\n\r\n    setContextError(err:string | string[]) {\r\n        if (err === undefined) return;\r\n        if (typeof err === 'string') this.contextErrors.push(err);\r\n        else this.contextErrors.push(...err);\r\n    }\r\n\r\n    clearError() {\r\n        this.errors.splice(0);\r\n    }\r\n\r\n    clearContextError() {\r\n        this.contextErrors.splice(0);\r\n    }\r\n\r\n    protected parse(value:any):any {return value}\r\n\r\n    protected setElementValue(value:any) {}\r\n    protected setDataValue(value:any) {\r\n        if (this.isChanging === true) return;\r\n        this.context.initData[this.name] = this.value = this.parse(value);\r\n    }\r\n\r\n    setValue(value:any) {\r\n        if (this.isChanging === true) return;\r\n        //this.setDataValue(value);\r\n        //this.setElementValue(value);\r\n        this.changeValue(value, false);\r\n    }\r\n\r\n    getValue() {\r\n        return this.context.getValue(this.name);\r\n    }\r\n\r\n    getReadOnly():boolean {return this.readOnly}\r\n    getDisabled():boolean {return this.disabled}\r\n    getVisible():boolean {return this.visible}\r\n    setReadOnly(value:boolean) {this.readOnly = value}\r\n    setDisabled(value:boolean) {this.disabled = value}\r\n    setVisible(value:boolean) {this.visible = value}\r\n\r\n    private isChanging: boolean;\r\n    protected onInputChange = (evt: React.ChangeEvent<any>) => {\r\n        this.changeValue(evt.target.value, true);\r\n    }\r\n\r\n    protected changeValue(newValue: any, fromElement: boolean) {\r\n        let prev = this.value;\r\n        let onChanging: ChangingHandler;\r\n        let onChanged: ChangedHandler;\r\n        if (this.ui !== undefined) {\r\n            onChanging = this.ui.onChanging;\r\n            onChanged = this.ui.onChanged;\r\n        }\r\n        let allowChange = true;\r\n        if (onChanging !== undefined) {\r\n            this.isChanging = true;\r\n            allowChange = onChanging(this.context, this.value, prev);\r\n            this.isChanging = false;\r\n        }\r\n        if (allowChange === true) {\r\n            this.setDataValue(newValue);\r\n            if (fromElement !== true) this.setElementValue(newValue);\r\n            if (onChanged !== undefined) {\r\n                this.isChanging = true;\r\n                onChanged(this.context, this.value, prev);\r\n                this.isChanging = false;\r\n            }\r\n        }\r\n    }\r\n\r\n    protected get className():string {\r\n        let fieldClass:string;\r\n        if (this.context.inNode === false) fieldClass = 'form-control';\r\n        return classNames(fieldClass, this.context.form.FieldClass, this.ui && this.ui.className);\r\n    }\r\n\r\n    protected abstract render():JSX.Element;\r\n\r\n    container = observer(():JSX.Element => {\r\n        if (this.visible === false) return null;\r\n        let {form, inNode} = this.context;\r\n        if (inNode === true) return this.render();\r\n        let label:any = this.label;\r\n        if (this.itemSchema.required === true && form.props.requiredFlag !== false) {\r\n            if (label !== null) label = <>{label}&nbsp;<span className=\"text-danger\">*</span></>;\r\n        }\r\n        return form.FieldContainer(label, this.render());\r\n    })\r\n\r\n    protected get label():string {\r\n        let label:any;\r\n        if (this.ui === undefined) {\r\n            label = this.name;\r\n        }\r\n        else {\r\n            let uiLabel = this.ui.label;\r\n            if (uiLabel === null) label = null;\r\n            else label = uiLabel || this.name;\r\n        }\r\n        return label;\r\n    }\r\n\r\n    protected renderTemplet():JSX.Element | undefined {\r\n        if (this.children !== undefined) {\r\n            return <>{this.children}</>;\r\n        }\r\n        if (this.ui === undefined) return undefined;\r\n        let {Templet} = this.ui;\r\n        if (typeof Templet === 'function') return Templet(this.value);\r\n        return Templet;\r\n    }\r\n\r\n    protected renderErrors() {\r\n        let errorList:string[] = [...this.errors, ...this.contextErrors];\r\n        if (errorList.length === 0) return null;\r\n        let {inNode} = this.context;\r\n        let tag = inNode === true? 'span' : 'div';\r\n        return errorList.map(err => React.createElement(tag, \r\n            {\r\n                key: err, \r\n                className: 'text-danger d-inline-block my-2 ml-3'\r\n            },\r\n            <><i className=\"fa fa-exclamation-circle\" /> &nbsp;{err}</>\r\n        ));\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport classNames from 'classnames';\r\nimport { Widget } from './widget';\r\nimport { UiTextItem, StringSchema } from '../../schema';\r\n\r\nexport class TextWidget extends Widget {\r\n    protected inputType = 'text';\r\n    protected ui: UiTextItem;\r\n    protected input: HTMLInputElement;\r\n\r\n    protected setElementValue(value:any) {\r\n        if (this.input === null) return;\r\n        this.input.value = value;\r\n    }\r\n    protected get placeholder() {return (this.ui && this.ui.placeholder) || this.name}\r\n    protected onKeyDown = async (evt:React.KeyboardEvent<HTMLInputElement>) => {\r\n        this.internalOnKeyDown(evt);\r\n        if (evt.keyCode !== 13) return;\r\n        let {onEnter} = this.context.form.props;\r\n        if (onEnter === undefined) return;\r\n\r\n        this.changeValue(evt.currentTarget.value, true);\r\n\r\n        //this.checkRules();\r\n        //this.context.checkContextRules();\r\n        this.input.blur();\r\n\r\n        let ret = await onEnter(this.name, this.context);\r\n        if (ret !== undefined) {\r\n            this.context.setError(this.name, ret);\r\n        }\r\n    }\r\n\r\n    protected internalOnKeyDown(evt:React.KeyboardEvent<HTMLInputElement>) {\r\n    }\r\n\r\n    protected onBlur(evt: React.FocusEvent<any>) {\r\n        this.onInputChange(evt);\r\n        this.checkRules();\r\n        this.context.checkContextRules();\r\n    }\r\n    protected onFocus(evt: React.FocusEvent<any>) {\r\n        this.clearError();\r\n        this.context.removeErrorWidget(this);\r\n        this.context.clearErrors();\r\n    }\r\n    protected onChange(evt: React.ChangeEvent<any>) {\r\n    }\r\n\r\n    setReadOnly(value:boolean) {\r\n        if (this.input === null) return;\r\n        this.input.readOnly = this.readOnly = value;\r\n    }\r\n    setDisabled(value:boolean) {\r\n        if (this.input === null) return;\r\n        this.input.disabled = this.disabled = value;\r\n    }\r\n\r\n    render() {\r\n        let renderTemplet = this.renderTemplet();\r\n        if (renderTemplet !== undefined) return renderTemplet;\r\n        let cn = {\r\n            //'form-control': true,\r\n        };\r\n        if (this.hasError === true) {\r\n            cn['is-invalid'] = true;\r\n        }\r\n        else {\r\n            cn['required-item'] = this.itemSchema.required === true;\r\n        }\r\n        return <><input ref={input=>this.input = input}\r\n            className={classNames(this.className, cn)}\r\n            type={this.inputType}\r\n            defaultValue={this.value}\r\n            onChange={(evt: React.ChangeEvent<any>) => this.onChange(evt)}\r\n            placeholder={this.placeholder}\r\n            readOnly={this.readOnly}\r\n            disabled={this.disabled}\r\n            onKeyDown = {this.onKeyDown}\r\n            onFocus = {(evt: React.FocusEvent<any>) => this.onFocus(evt)}\r\n            onBlur={(evt: React.FocusEvent<any>) => this.onBlur(evt)}\r\n            maxLength={(this.itemSchema as StringSchema).maxLength} />\r\n            {this.renderErrors()}\r\n        </>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { TextWidget } from './textWidget';\r\nimport { RuleNum, RuleInt } from '../rules';\r\nimport { NumBaseSchema } from '../../schema';\r\n\r\nexport class NumberWidget extends TextWidget {\r\n    protected inputType = 'number';\r\n    protected itemSchema: NumBaseSchema;\r\n\r\n    protected buildRules() {\r\n        super.buildRules();\r\n        let res = this.context.form.res;\r\n        let {min, max} = this.itemSchema;\r\n        this.rules.push(\r\n            this.itemSchema.type === 'integer'?\r\n                new RuleNum(res, min, max) :\r\n                new RuleInt(res, min, max)\r\n        );\r\n        /*\r\n        if (this.itemSchema.type === 'integer') {\r\n            this.rules.push(new RuleInt);\r\n        }\r\n        let {min, max} = this.itemSchema;\r\n        if (min !== undefined) this.rules.push(new RuleMin(min));\r\n        if (max !== undefined) this.rules.push(new RuleMax(max));\r\n        */\r\n    }\r\n\r\n    protected parse(value:any):any {\r\n        if (value === undefined || value === null) return;\r\n        return Number(value);\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { NumberWidget } from './numberWidget';\r\n\r\nexport class UpdownWidget extends NumberWidget {\r\n    protected inputType = 'number';\r\n\r\n    protected isValidKey(key:number):boolean {\r\n        return key===46 || key===8 || key===37 || key===39\r\n            || key>=48 && key<=57\r\n            || key>=96 && key<=105\r\n            || key===109 || key===189;\r\n    }\r\n    \r\n    protected internalOnKeyDown(evt:React.KeyboardEvent<HTMLInputElement>) {\r\n        let key = evt.keyCode;\r\n        event.returnValue = this.isValidKey(key);\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { TextWidget } from './textWidget';\r\n\r\nexport class DateWidget extends TextWidget {\r\n    protected inputType = 'date';\r\n}\r\n\r\nexport class DateTimeWidget extends TextWidget {\r\n    protected inputType = 'datetime';\r\n}\r\n\r\nexport class TimeWidget extends TextWidget {\r\n    protected inputType = 'time';\r\n}\r\n\r\nexport class MonthWidget extends TextWidget {\r\n    protected inputType = 'month';\r\n}\r\n","import * as React from 'react';\r\nimport classNames from 'classnames';\r\nimport { Widget } from './widget';\r\nimport { UiCheckItem } from '../../schema';\r\n\r\nexport class CheckBoxWidget extends Widget {\r\n    protected input: HTMLInputElement;\r\n    protected ui: UiCheckItem;\r\n    protected trueValue: any;\r\n    protected falseValue: any;\r\n\r\n    protected init() {\r\n        super.init();\r\n        if (this.ui !== undefined) {\r\n            let {trueValue, falseValue} = this.ui;\r\n            if (trueValue === undefined) this.trueValue = true;\r\n            else this.trueValue = trueValue;\r\n            if (falseValue === undefined) this.falseValue = false;\r\n            else this.falseValue = falseValue;\r\n        }\r\n        else {\r\n            this.trueValue = true;\r\n            this.falseValue = false;\r\n        }\r\n    }\r\n    protected setElementValue(value:any) {\r\n        this.input.checked = value === this.trueValue;\r\n    }\r\n    setReadOnly(value:boolean) {this.input.readOnly = this.readOnly = value}\r\n    setDisabled(value:boolean) {this.input.disabled = this.disabled = value}\r\n\r\n    protected onInputChange = (evt: React.ChangeEvent<HTMLInputElement>) => {\r\n        this.setDataValue(evt.target.checked === true? this.trueValue : this.falseValue);\r\n    }\r\n\r\n    protected onClick = () => {\r\n        this.context.clearErrors();\r\n    }\r\n\r\n    render() {\r\n        let cn = classNames(this.className, 'form-check-inline p-0');\r\n        let input = <input\r\n            ref={(input)=>this.input = input}\r\n            className={'align-self-center'}\r\n            type=\"checkbox\"\r\n            defaultChecked={this.defaultValue} \r\n            onChange={this.onInputChange}\r\n            onClick={this.onClick} />;\r\n        if (this.context.inNode === true) {\r\n            return <label className={cn}>\r\n                {input} {(this.ui&&this.ui.label) || this.name}\r\n            </label>\r\n        }\r\n        else {\r\n            return <div className={cn}>\r\n                <label className=\"w-100 h-100 mb-0 d-flex justify-content-center\">{input}</label>\r\n            </div>;\r\n        }\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport classNames from 'classnames';\r\nimport { observable } from 'mobx';\r\nimport { Widget } from './widget';\r\nimport { UiSelect } from '../../schema';\r\n\r\nexport class SelectWidget extends Widget {\r\n    protected select: HTMLSelectElement;\r\n    protected ui: UiSelect;\r\n    @observable protected readOnly: boolean;\r\n\r\n    protected setElementValue(value:any) {this.select.value = value}\r\n    protected onInputChange = (evt:React.ChangeEvent<HTMLSelectElement>) => {\r\n        this.setDataValue(evt.target.value);\r\n    }\r\n\r\n    setReadOnly(value:boolean) {this.select.disabled = this.readOnly = !value}\r\n    setDisabled(value:boolean) {this.select.disabled = this.disabled = value}\r\n\r\n    render() {\r\n        if (this.readOnly === true) {\r\n            let option = this.ui.list.find(v => v.value === this.value);\r\n            let title = (option === undefined)? '(???)' : option.title;\r\n            return <span className=\"form-control w-min-6c\">{title}</span>;\r\n        }\r\n        return <select\r\n            ref={(select)=>this.select = select}\r\n            className={classNames(this.className, 'form-control')}\r\n            defaultValue={this.defaultValue} \r\n            onChange={this.onInputChange}>\r\n            {this.ui.list.map((v,index) => {\r\n                let {title, value} = v;\r\n                let cn:string;\r\n                //if (value === undefined || value === null) cn = 'text-light small';\r\n                //else cn = 'text-danger';\r\n                return <option className={cn} key={index} value={value}>{title || value}</option>\r\n            })}\r\n        </select>\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport classNames from 'classnames';\r\nimport { Widget } from './widget';\r\nimport { UiIdItem, TempletType } from '../../schema';\r\nimport { observable } from 'mobx';\r\n\r\nexport class IdWidget extends Widget {\r\n    protected ui: UiIdItem;\r\n    @observable protected value:number;\r\n    setReadOnly(value:boolean) {this.readOnly = value}\r\n    setDisabled(value:boolean) {this.disabled = value}    \r\n\r\n    protected onClick = async () => {\r\n        let pickId = this.ui && this.ui.pickId;\r\n        if (pickId === undefined) {\r\n            alert('no pickId defined!');\r\n            return;\r\n        }\r\n        let id = await pickId(this.context, this.name, this.value);        \r\n        this.setDataValue(id);\r\n        this.clearError();\r\n        this.clearContextError();\r\n        this.checkRules();\r\n    }\r\n\r\n    render() {\r\n        let placeholder:string|JSX.Element, Templet: TempletType;\r\n        if (this.ui !== undefined) {\r\n            placeholder = this.ui.placeholder;\r\n            Templet = this.ui.Templet;\r\n        }\r\n        let cn = {\r\n            'form-control': true,\r\n            'required-item': this.itemSchema.required === true,\r\n            'cursor-pointer': true,\r\n            'is-invalid': this.hasError,\r\n        };\r\n        let content;\r\n        if (this.value === undefined || this.value === null) {\r\n            content = placeholder || 'placeholder';\r\n            cn['text-muted'] = true;\r\n        }\r\n        else if (Templet === undefined) {\r\n            content = <>{this.value}</>;\r\n        }\r\n        else if (typeof Templet === 'function') {\r\n            content = Templet(this.value);\r\n        }\r\n        else {\r\n            content = Templet;\r\n        }\r\n        return <>\r\n            <div className={classNames(cn)} onClick={this.onClick}>{content}</div>\r\n            {this.renderErrors()}\r\n        </>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { DataType } from '../../schema';\r\nimport { UiType } from '../../schema';\r\n\r\nexport const Unknown = (dataType:DataType, uiType:UiType, dataTypes:DataType[]) => {\r\n    return <span className=\"text-danger\">!!data type {dataType} only support {(dataTypes || []).join(', ')}, can't use ui {uiType}!!</span>;\r\n};\r\n","import * as React from 'react';\r\nimport { UiButton, TempletType } from '../../schema';\r\nimport { Unknown } from './unknown';\r\nimport { Widget } from './widget';\r\nimport { observer } from 'mobx-react';\r\n\r\nexport class ButtonWidget extends Widget {\r\n    protected ui: UiButton;\r\n\r\n    protected onClick = async () => {\r\n        this.clearError();\r\n        this.clearContextError();\r\n        let {name, type} = this.itemSchema;\r\n        if (type === 'submit') {\r\n            await this.context.submit(name);\r\n        }\r\n        /*\r\n        let {onButtonClick} = this.context.form.props;\r\n        if (onButtonClick === undefined) {\r\n            alert(`button ${name} clicked. you should define form onButtonClick`);\r\n            return;\r\n        }\r\n        let ret = await onButtonClick(name, this.context);\r\n        if (ret === undefined) return;\r\n        this.context.setError(name, ret);\r\n        */\r\n    }\r\n\r\n    private observerRender = observer(() => {\r\n        let {name, type} = this.itemSchema;\r\n        let Templet:TempletType, cn:string, caption:string;\r\n        if (this.ui !== undefined) {\r\n            let {widget:widgetType} = this.ui;\r\n            if (widgetType !== 'button') return Unknown(type, widgetType, ['button']);\r\n            Templet = this.ui.Templet;\r\n            cn = this.ui.className;\r\n            caption = this.ui.label;\r\n        }\r\n        let {form, hasError} = this.context;\r\n        let context = this.context;\r\n        let disabled = type==='submit' && hasError;\r\n        let content:any;\r\n        if (this.children !== undefined) content = this.children;\r\n        else if (typeof Templet === 'function') content = Templet();\r\n        else if (Templet !== undefined) content = Templet;\r\n        else content = caption; \r\n        let button = <button \r\n            className={cn} \r\n            type=\"button\"\r\n            disabled={disabled}\r\n            onClick={this.onClick}>\r\n            {content || name}\r\n        </button>;\r\n        if (context.inNode === true) return <>{button}{this.renderErrors()}</>;\r\n        return <div className={form.ButtonClass}>\r\n            <div>{this.renderErrors()}</div>\r\n            {button}\r\n        </div>;\r\n    });\r\n    \r\n    protected get label():string {return null}\r\n\r\n    render() {\r\n        return <this.observerRender />\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { Form } from './form';\r\nimport { UiSchema, UiArr, UiItem } from '../schema';\r\nimport { ArrSchema, ItemSchema } from '../schema';\r\nimport { Widget as Widget } from './widgets/widget';\r\n//import { ArrRow } from './arrRow';\r\nimport { observable, computed } from 'mobx';\r\nimport { ContextRule } from './rules';\r\nimport { observer } from 'mobx-react';\r\n\r\nexport abstract class Context {\r\n    private subContexts:{[name:string]:{[rowKey:string]:Context}};\r\n    readonly form: Form;\r\n    readonly uiSchema: UiSchema;\r\n    readonly initData: any;\r\n    readonly inNode: boolean;           // true: 在</> 流中定义Field\r\n    readonly widgets: {[name:string]: Widget} = {};\r\n    readonly rules: ContextRule[];\r\n    readonly isRow: boolean;\r\n    @observable errors: string[] = [];\r\n    @observable errorWidgets:Widget[] = [];\r\n\r\n    constructor(form: Form, uiSchema: UiSchema, data: any, inNode: boolean, isRow: boolean) {\r\n        this.form = form;\r\n        this.uiSchema = uiSchema;\r\n        this.initData = data;\r\n        this.inNode = inNode;\r\n        this.isRow = isRow;\r\n        if (uiSchema !== undefined) {\r\n            let {rules} = uiSchema;\r\n            if (rules !== undefined) {\r\n                this.rules = [];\r\n                if (Array.isArray(rules) === false)\r\n                    this.rules.push(rules as ContextRule);\r\n                else\r\n                    this.rules.push(...rules as ContextRule[]);\r\n            }\r\n        }\r\n    }\r\n\r\n    getArrRowContexts(arrName: string) {\r\n        if (this.subContexts === undefined) this.subContexts = {};\r\n        let arrRowContexts = this.subContexts[name];\r\n        if (arrRowContexts === undefined) this.subContexts[name] = arrRowContexts = {};\r\n        return arrRowContexts;\r\n    }\r\n\r\n    abstract get data():any;\r\n    abstract getItemSchema(itemName:string):ItemSchema;\r\n    abstract getUiItem(itemName:string):UiItem;\r\n    get arrName():string {return undefined}\r\n    getValue(itemName:string):any {return this.initData[itemName]}\r\n    setValue(itemName:string, value:any) {\r\n        this.initData[itemName] = value;\r\n        let widget = this.widgets[itemName];\r\n        if (widget !== undefined) widget.setValue(value);\r\n    }\r\n    getDisabled(itemName:string):boolean {\r\n        let widget = this.widgets[itemName];\r\n        if (widget !== undefined) return widget.getDisabled();\r\n        return undefined;\r\n    }\r\n    setDisabled(itemName:string, value:boolean) {\r\n        let widget = this.widgets[itemName];\r\n        if (widget !== undefined) widget.setDisabled(value);\r\n    }\r\n    getReadOnly(itemName:string):boolean {\r\n        let widget = this.widgets[itemName];\r\n        if (widget !== undefined) widget.getReadOnly();\r\n        return undefined;\r\n    }\r\n    setReadOnly(itemName:string, value:boolean) {\r\n        let widget = this.widgets[itemName];\r\n        if (widget !== undefined) widget.setReadOnly(value);\r\n    }\r\n    getVisible(itemName:string):boolean {\r\n        let widget = this.widgets[itemName];\r\n        if (widget !== undefined) widget.getVisible();\r\n        return undefined;\r\n    }\r\n    setVisible(itemName:string, value:boolean) {\r\n        let widget = this.widgets[itemName];\r\n        if (widget !== undefined) widget.setVisible(value);\r\n    }\r\n\r\n    async submit(buttonName: string) {\r\n        this.checkRules()\r\n        if (this.hasError === true) return;\r\n        let {onButtonClick} = this.form.props;\r\n        if (onButtonClick === undefined) {\r\n            alert(`button ${buttonName} clicked. you should define form onButtonClick`);\r\n            return;\r\n        }\r\n        let ret = await onButtonClick(buttonName, this);\r\n        if (ret === undefined) return;\r\n        this.setError(buttonName, ret);\r\n\r\n    }\r\n\r\n    checkFieldRules() {\r\n        for (let i in this.widgets) {\r\n            this.widgets[i].checkRules();\r\n        }\r\n        if (this.subContexts === undefined) return;\r\n        for (let i in this.subContexts) {\r\n            let arrRowContexts = this.subContexts[i];\r\n            for (let j in arrRowContexts) {\r\n                arrRowContexts[j].checkFieldRules();\r\n            }\r\n        }\r\n    }\r\n\r\n    checkContextRules() {\r\n        this.clearErrors();\r\n        if (this.rules === undefined) return;\r\n        for (let rule of this.rules) {\r\n            let ret = rule(this);\r\n            if (ret === undefined) continue;\r\n            if (Array.isArray(ret) === true) {\r\n                this.errors.push(...ret as string[]);\r\n            }\r\n            else if (typeof ret === 'string') {\r\n                this.errors.push(ret as string);\r\n            }\r\n            else {\r\n                for (let i in ret as object) this.setError(i, ret[i]);\r\n            }\r\n        }\r\n        if (this.subContexts === undefined) return;\r\n        for (let i in this.subContexts) {\r\n            let arrRowContexts = this.subContexts[i];\r\n            for (let j in arrRowContexts) {\r\n                let rowContext = arrRowContexts[j];\r\n                rowContext.clearErrors();\r\n                rowContext.checkContextRules();\r\n            }\r\n        }\r\n    }\r\n\r\n    setError(itemName:string, error:string) {\r\n        let widget = this.widgets[itemName];\r\n        if (widget === undefined) return;\r\n        widget.setContextError(error);\r\n        this.addErrorWidget(widget);\r\n    }\r\n\r\n    clearContextErrors() {\r\n        for (let i in this.widgets) {\r\n            let widget = this.widgets[i];\r\n            if (widget === undefined) continue;\r\n            widget.clearContextError();\r\n        }\r\n    }\r\n\r\n    clearWidgetsErrors() {\r\n        for (let i in this.widgets) {\r\n            let widget = this.widgets[i];\r\n            if (widget === undefined) continue;\r\n            widget.clearError();\r\n        }\r\n    }\r\n\r\n    checkRules() {\r\n        this.clearErrors();\r\n        this.clearWidgetsErrors();\r\n        this.checkFieldRules();\r\n        if (this.hasError === true) return;\r\n        this.checkContextRules();\r\n    }\r\n\r\n    addErrorWidget(widget:Widget) {\r\n        let pos = this.errorWidgets.findIndex(v => v === widget);\r\n        if (pos < 0) this.errorWidgets.push(widget);\r\n    }\r\n    removeErrorWidget(widget:Widget) {\r\n        let pos = this.errorWidgets.findIndex(v => v === widget);\r\n        if (pos >= 0) this.errorWidgets.splice(pos, 1);\r\n    }\r\n\r\n    protected checkHasError():boolean {\r\n        let ret = (this.errorWidgets.length + this.errors.length) > 0;\r\n        if (ret === true) return true;\r\n        if (this.subContexts === undefined) return false;\r\n        for (let i in this.subContexts) {\r\n            let arrRowContexts = this.subContexts[i];\r\n            for (let j in arrRowContexts) {\r\n                if (arrRowContexts[j].hasError === true) return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    @computed get hasError():boolean {\r\n        return this.checkHasError();\r\n    };\r\n\r\n    clearErrors() {\r\n        this.errors.splice(0);\r\n        this.errorWidgets.splice(0);\r\n        this.clearContextErrors();\r\n    }\r\n\r\n    renderErrors = observer((): JSX.Element => {\r\n        let {errors} = this;\r\n        if (errors.length === 0) return null;\r\n        return <>\r\n            {errors.map(err => <span key={err} className=\"text-danger inline-block my-1 ml-3\">\r\n                <i className=\"fa fa-exclamation-circle\" /> &nbsp;{err}\r\n            </span>)}\r\n        </>\r\n    });\r\n}\r\n\r\nlet rowKeySeed:number = 1;\r\nexport class RowContext extends Context {\r\n    readonly parentContext: Context;\r\n    readonly arrSchema: ArrSchema;\r\n    readonly uiSchema: UiArr;\r\n    //readonly row: ArrRow;\r\n    readonly rowKey: number;\r\n    readonly data: any;\r\n    constructor(parentContext:Context, arrSchema: ArrSchema, data: any, inNode: boolean) {\r\n        let uiArr:UiArr;\r\n        let {uiSchema} = parentContext;\r\n        if (uiSchema !== undefined) {\r\n            let {items} = uiSchema;\r\n            if (items !== undefined) uiArr = items[arrSchema.name] as UiArr;\r\n        }\r\n        super(parentContext.form, uiArr, data, inNode, true);\r\n        this.parentContext = parentContext;\r\n        this.arrSchema = arrSchema;\r\n        this.rowKey = rowKeySeed++;\r\n        this.data = data;\r\n    }\r\n    getItemSchema(itemName:string):ItemSchema {return this.arrSchema.itemSchemas[itemName]}\r\n    getUiItem(itemName:string):UiItem {\r\n        if (this.uiSchema === undefined) return undefined;\r\n        let {items} = this.uiSchema;\r\n        if (items === undefined) return undefined;\r\n        return items[itemName]\r\n    }\r\n    get arrName():string {return this.arrSchema.name}\r\n    clearErrors() {\r\n        super.clearErrors();\r\n        this.parentContext.clearErrors();\r\n    }\r\n\r\n    get parentData():any {return this.parentContext.data;}\r\n}\r\n\r\nexport class FormContext extends Context {\r\n    constructor(form:Form, inNode:boolean) {\r\n        super(form, form.uiSchema, form.data, inNode, false);\r\n    }\r\n    get data():any {return this.form.data}\r\n    getItemSchema(itemName:string):ItemSchema {return this.form.itemSchemas[itemName]}\r\n    getUiItem(itemName:string):UiItem {\r\n        let {uiSchema} = this.form;\r\n        if (uiSchema === undefined) return undefined;\r\n        let {items} = uiSchema;\r\n        if (items === undefined) return undefined;\r\n        return items[itemName];\r\n    }\r\n}\r\n\r\nexport const ContextContainer = React.createContext<Context>({} as any);\r\n","import * as React from 'react';\r\nimport {observer} from 'mobx-react';\r\nimport classNames from 'classnames';\r\n//import { ArrRow } from '../arrRow';\r\nimport { Context, RowContext, ContextContainer } from '../context';\r\nimport { ArrSchema } from '../../schema';\r\nimport { UiArr, TempletType } from '../../schema';\r\nimport { Unknown } from './unknown';\r\nimport { factory } from './factory';\r\n\r\nexport const ArrComponent = observer((\r\n    {parentContext, arrSchema, children}:{parentContext: Context, arrSchema: ArrSchema, children: React.ReactNode}) => \r\n{\r\n    let {name, arr} = arrSchema;\r\n    let data = parentContext.initData[name] as any[];\r\n    let {form} = parentContext;\r\n    let arrRowContexts = parentContext.getArrRowContexts(name);\r\n    let ui = parentContext.getUiItem(name) as UiArr;\r\n    let arrLabel = name;\r\n    let Templet:TempletType;\r\n    let selectable:boolean, deletable:boolean, restorable:boolean;\r\n    let {ArrContainer, RowContainer, RowSeperator, uiSchema} = form;\r\n    if (uiSchema !== undefined) {\r\n        let {selectable:formSelectable, deletable:formDeletable, restorable:formRestorable} = uiSchema;\r\n        if (selectable !== true) selectable = formSelectable;\r\n        if (deletable !== true) deletable = formDeletable;\r\n        if (restorable !== true) restorable = formRestorable;\r\n    }\r\n    if (ui !== undefined) {\r\n        let {widget:widgetType, label, \r\n            selectable:arrSelectable, deletable:arrDeletable, restorable:arrRestorable,\r\n            ArrContainer:ac, RowContainer:rc, RowSeperator:rs\r\n        } = ui;\r\n        if (arrSelectable !== undefined) selectable = arrSelectable;\r\n        if (arrDeletable !== undefined) deletable = arrDeletable;\r\n        if (arrRestorable !== undefined) restorable = arrRestorable;\r\n        if (ac !== undefined) ArrContainer = ac;\r\n        if (rc !== undefined) RowContainer = rc;\r\n        if (rs !== undefined) RowSeperator = rs;\r\n        Templet = ui.Templet;\r\n        if (widgetType !== 'arr') return Unknown(arrSchema.type, widgetType, ['arr']);\r\n        arrLabel = label || arrLabel;\r\n    }\r\n    let first = true;\r\n    return ArrContainer(arrLabel, <>\r\n        {data.map((row:any, index) => {\r\n            let rowContext: RowContext;\r\n            let rowContent: JSX.Element;\r\n            let sep = undefined;\r\n            if (first === false) sep = RowSeperator;\r\n            else first = false;\r\n            if (children !== undefined) {\r\n                rowContext = new RowContext(parentContext, arrSchema, row, true);\r\n                rowContent = <>{children}</>;\r\n            }\r\n            else {\r\n                let typeofTemplet = typeof Templet;\r\n                if (typeofTemplet === 'function') {\r\n                    rowContext = new RowContext(parentContext, arrSchema, row, true);\r\n                    rowContent = React.createElement(observer(Templet as React.StatelessComponent), row);\r\n                }\r\n                else if (typeofTemplet === 'object') {\r\n                    rowContext = new RowContext(parentContext, arrSchema, row, true);\r\n                    rowContent = Templet as JSX.Element;\r\n                }\r\n                else {\r\n                    rowContext = new RowContext(parentContext, arrSchema, row, false);\r\n                    rowContent = <>{\r\n                        arr.map((v, index) => {\r\n                            return <React.Fragment key={v.name}>\r\n                                {factory(rowContext, v, undefined)}\r\n                            </React.Fragment>\r\n                        })}\r\n                    </>;\r\n                }\r\n            }\r\n            let {rowKey} = rowContext;\r\n            arrRowContexts[rowKey] = rowContext;\r\n\r\n            let selectCheck:JSX.Element, deleteIcon:JSX.Element;\r\n            if (selectable === true) {\r\n                let onClick = (evt: React.MouseEvent<HTMLInputElement>)=>{\r\n                    let {checked} = (evt.target as HTMLInputElement);\r\n                    row.$isSelected = checked;\r\n                    let {$source} = row;\r\n                    if ($source !== undefined) $source.$isSelected = checked;\r\n                    rowContext.clearErrors();\r\n                }\r\n                selectCheck = <div className=\"form-row-checkbox\">\r\n                    <input type=\"checkbox\" onClick={onClick} defaultChecked={row.$isSelected} />\r\n                </div>;\r\n            }\r\n            let isDeleted = !(row.$isDeleted===undefined || row.$isDeleted===false);\r\n            if (deletable === true) {\r\n                let icon = isDeleted? 'fa-undo' : 'fa-trash';\r\n                let onDelClick = () => {\r\n                    if (restorable === true) {\r\n                        row.$isDeleted = !isDeleted;\r\n                        let {$source} = row;\r\n                        if ($source !== undefined) $source.$isDeleted = !isDeleted;\r\n                    }\r\n                    else {\r\n                        let p = data.indexOf(row);\r\n                        if (p>=0) data.splice(p, 1);\r\n                    }\r\n                    rowContext.clearErrors();\r\n                }\r\n                deleteIcon = <div className=\"form-row-edit text-info\" onClick={onDelClick}>\r\n                    <i className={classNames('fa', icon, 'fa-fw')} />\r\n                </div>;\r\n            }\r\n            let editContainer = selectable===true || deletable===true?\r\n                (content:any) => <fieldset disabled={isDeleted}><div className={classNames('d-flex', {'deleted':isDeleted, 'row-selected':row.$isSelected})}>\r\n                    {selectCheck}\r\n                    <div className={selectable===true && deletable===true? \"form-row-content\":\"form-row-content-1\"}>{content}</div>\r\n                    {deleteIcon}\r\n                </div></fieldset>\r\n                :\r\n                (content:any) => content;\r\n\r\n            return <ContextContainer.Provider key={rowKey} value={rowContext}>\r\n                {sep}\r\n                {RowContainer(editContainer(<><rowContext.renderErrors />{rowContent}</>))}\r\n            </ContextContainer.Provider>;\r\n        })}\r\n    </>);\r\n});\r\n","import * as React from 'react';\r\nimport classNames from 'classnames';\r\nimport { Widget } from './widget';\r\nimport { UiImageItem } from '../../schema';\r\nimport { Image } from '../../image';\r\nimport { ImageItemEdit } from '../../edit/imageItemEdit';\r\nimport { observer } from 'mobx-react';\r\nimport { observable } from 'mobx';\r\n\r\nexport class ImageWidget extends Widget {\r\n    protected input: HTMLInputElement;\r\n    protected ui: UiImageItem;\r\n    @observable private imageSrc: string;\r\n\r\n    protected init() {\r\n        super.init();\r\n        this.imageSrc = this.value;\r\n    }\r\n\r\n    protected onClick = async () => {\r\n        let edit = new ImageItemEdit(this.itemSchema, this.ui, this.ui.label, this.value);\r\n        let ret = await edit.start();\r\n        if (ret !== null) {\r\n            this.setValue(ret);\r\n            this.imageSrc = ret;\r\n        }\r\n        await edit.end();\r\n    }\r\n\r\n    render() {\r\n        return <this.observerRender />;\r\n    }\r\n\r\n    private observerRender = observer(() => {\r\n        let cn = [\r\n            'bg-white p-1 d-flex justify-content-center',\r\n        ];\r\n        let onClick: any;\r\n        if (!this.readOnly && !this.disabled) {\r\n            cn.push('cursor-pointer');\r\n            onClick = this.onClick;\r\n        }\r\n        return <div className={classNames(cn)} onClick={onClick}>\r\n            <Image src={this.imageSrc} className=\"w-4c h-4c\"/>\r\n        </div>;\r\n    });\r\n}\r\n","import * as React from 'react';\r\nimport {observer} from 'mobx-react';\r\nimport { Schema, ArrSchema, DataType, ButtonSchema, ItemSchema } from '../../schema';\r\nimport { UiItem, UiArr, UiType, UiButton, TempletType, TypeWidget, UiCustom } from '../../schema';\r\nimport { TextWidget } from './textWidget';\r\nimport { TextAreaWidget } from './textareaWidget';\r\nimport { PasswordWidget, UrlWidget, EmailWidget } from './passwordWidget';\r\nimport { UpdownWidget } from './updownWidget';\r\nimport { NumberWidget } from './numberWidget';\r\nimport { DateWidget, DateTimeWidget, TimeWidget, MonthWidget } from './dateWidget';\r\nimport { CheckBoxWidget } from './checkBoxWidget';\r\nimport { FieldProps } from '../field';\r\nimport { Context, RowContext, FormContext, ContextContainer } from '../context';\r\nimport { SelectWidget } from './selectWidget';\r\nimport { RadioWidget } from './radioWidget';\r\nimport { RangeWidget } from './rangeWidget';\r\nimport { IdWidget } from './idWidget';\r\nimport { ButtonWidget } from './buttonWidget';\r\nimport { ArrComponent } from './arrComponent';\r\nimport { ImageWidget } from './imageWidget';\r\n\r\nconst widgetsFactory: {[type: string]: {widget?: TypeWidget, dataTypes?: DataType[]}} = {\r\n    id: {\r\n        dataTypes: ['id'],\r\n        widget: IdWidget,\r\n    },\r\n    text: {\r\n        dataTypes: ['integer', 'number', 'string'],\r\n        widget: TextWidget\r\n    },\r\n    textarea: {\r\n        dataTypes: ['string'],\r\n        widget: TextAreaWidget\r\n    },\r\n    password: {\r\n        dataTypes: ['string'],\r\n        widget: PasswordWidget\r\n    },\r\n    date: {\r\n        dataTypes: ['date'],\r\n        widget: DateWidget\r\n    },\r\n    datetime: {\r\n        dataTypes: ['date'],\r\n        widget: DateTimeWidget\r\n    },\r\n    time: {\r\n        dataTypes: ['date'],\r\n        widget: TimeWidget\r\n    },\r\n    month: {\r\n        dataTypes: ['date'],\r\n        widget: MonthWidget\r\n    },\r\n    select: {\r\n        dataTypes: ['integer', 'number', 'string', 'date', 'boolean'],\r\n        widget: SelectWidget\r\n    },\r\n    url: {\r\n        dataTypes: ['string'],\r\n        widget: UrlWidget\r\n    },\r\n    email: {\r\n        dataTypes: ['string'],\r\n        widget: EmailWidget\r\n    },\r\n    number: {\r\n        dataTypes: ['integer', 'number'],\r\n        widget: NumberWidget\r\n    },\r\n    updown: {\r\n        dataTypes: ['integer', 'number'],\r\n        widget: UpdownWidget\r\n    },\r\n    color: {\r\n\r\n    },\r\n    checkbox: {\r\n        dataTypes: ['boolean', 'integer', 'number'],\r\n        widget: CheckBoxWidget\r\n    },\r\n    image: {\r\n        dataTypes: ['string'],\r\n        widget: ImageWidget,\r\n    },\r\n    checkboxes: {\r\n\r\n    },\r\n    radio: {\r\n        dataTypes: ['integer', 'number', 'string', 'date', 'boolean'],\r\n        widget: RadioWidget\r\n    },\r\n    range: {\r\n        dataTypes: ['integer'],\r\n        widget: RangeWidget,\r\n    },\r\n    button: {\r\n        dataTypes: ['button', 'submit'],\r\n        widget: ButtonWidget,\r\n    }\r\n}\r\n\r\nexport function factory(context: Context, itemSchema: ItemSchema, children:React.ReactNode, fieldProps?: FieldProps):JSX.Element {\r\n    if (context === undefined) {\r\n        debugger;\r\n        return null;\r\n    }\r\n    if (itemSchema === undefined) return undefined;\r\n    let {name, type} = itemSchema;\r\n    switch (type) {\r\n    case 'arr':\r\n        let arrSchema = context.getItemSchema(name) as ArrSchema;\r\n        return <ArrComponent parentContext={context} arrSchema={arrSchema} children={children} />;\r\n    default:\r\n        break;\r\n    }\r\n\r\n    let typeWidget: TypeWidget;\r\n    let ui = context.getUiItem(name);\r\n    function getTypeWidget(t:DataType): TypeWidget {\r\n        switch(t) {\r\n        default: return TextWidget; \r\n        case 'id': return IdWidget;\r\n        case 'integer': return UpdownWidget;\r\n        case 'number': return NumberWidget; \r\n        case 'string': return TextWidget; \r\n        case 'date': return DateWidget; \r\n        case 'boolean': return CheckBoxWidget; \r\n        case 'button':\r\n        case 'submit': return ButtonWidget;\r\n        }\r\n    }\r\n    if (ui === undefined) { \r\n        typeWidget = getTypeWidget(type);\r\n    }\r\n    else {\r\n        let {widget:widgetType} = ui;\r\n        switch (widgetType) {\r\n        default:\r\n            if (widgetType !== undefined) {\r\n                let widgetFactory = widgetsFactory[widgetType];\r\n                typeWidget = widgetFactory.widget;\r\n            }\r\n            if (typeWidget === undefined) typeWidget = getTypeWidget(type);\r\n            break;\r\n        case 'custom':\r\n            typeWidget = (ui as UiCustom).WidgetClass;\r\n            break;\r\n        case 'group':\r\n            return <span>impletment group</span>;\r\n        }\r\n        //label = uiLabel || name;\r\n    }\r\n    \r\n    let {isRow, widgets} = context;\r\n    let widget = new typeWidget(context, itemSchema, fieldProps, children);\r\n    widgets[name] = widget;\r\n\r\n    return <widget.container />;\r\n    /*\r\n    if (isRow === false) {\r\n        let WidgetElement = observer(() => widget.container());\r\n        return <WidgetElement />;\r\n    }\r\n    else {\r\n        let widgetElement = widget.container();\r\n        return widgetElement;\r\n    }\r\n    */\r\n}\r\n\r\n","import * as React from 'react';\r\nimport classNames from 'classnames';\r\nimport { Widget } from './widget';\r\nimport { UiTextAreaItem } from '../../schema';\r\nimport { StringSchema } from '../../schema';\r\n\r\nexport class TextAreaWidget extends Widget {\r\n    protected itemSchema: StringSchema;\r\n    protected input: HTMLTextAreaElement;\r\n    protected ui: UiTextAreaItem;\r\n\r\n    protected setElementValue(value:any) {this.input.value = value}\r\n    protected onInputChange = (evt: React.ChangeEvent<HTMLTextAreaElement>) => {\r\n        this.setValue(evt.currentTarget.value);\r\n    }\r\n\r\n    setReadOnly(value:boolean) {this.input.readOnly = this.readOnly = value}\r\n    setDisabled(value:boolean) {this.input.disabled = this.disabled = value}\r\n\r\n    render() {\r\n        let renderTemplet = this.renderTemplet();\r\n        if (renderTemplet !== undefined) return renderTemplet;\r\n        let cn = {};\r\n        if (this.hasError === true) {\r\n            cn['is-invalid'] = true;\r\n        }\r\n        else {\r\n            cn['required-item'] = this.itemSchema.required === true;\r\n        }\r\n        return <textarea ref={(input) => this.input=input} \r\n            className={classNames(this.className, cn)}\r\n            rows={this.ui && this.ui.rows}\r\n            maxLength={this.itemSchema.maxLength}\r\n            defaultValue={this.defaultValue} onChange={this.onInputChange} />\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { TextWidget } from './textWidget';\r\n\r\nexport class PasswordWidget extends TextWidget {\r\n    protected inputType = 'password';\r\n}\r\n\r\nexport class UrlWidget extends TextWidget {\r\n    protected inputType = 'url';\r\n}\r\n\r\nexport class EmailWidget extends TextWidget {\r\n    protected inputType = 'email';\r\n}\r\n","import * as React from 'react';\r\nimport classNames from 'classnames';\r\nimport { TextWidget } from './textWidget';\r\nimport { Widget } from './widget';\r\nimport { UiRadio } from '../../schema';\r\nimport { RowContext } from '../context';\r\n\r\n\r\n//const radioStyle:React.CSSProperties = {width:'2em', height:'1.2em'};\r\nexport class RadioWidget extends Widget {\r\n    protected inputs: {[index:number]: HTMLInputElement} = {};\r\n    protected ui: UiRadio;\r\n\r\n    protected setElementValue(value:any) {\r\n        for (let i in this.inputs) {\r\n            let input = this.inputs[i];\r\n            input.checked = value === input.value;\r\n        }\r\n    }\r\n    setReadOnly(value:boolean) {\r\n        this.readOnly = value;\r\n        for (let i in this.inputs) this.inputs[i].readOnly = value;\r\n    }\r\n    setDisabled(value:boolean) {\r\n        this.disabled = value;\r\n        for (let i in this.inputs) this.inputs[i].disabled = value\r\n    }\r\n\r\n    render() {\r\n        let {defaultValue, list} = this.ui;\r\n        let {isRow, inNode} = this.context;\r\n        let rowKey:number;\r\n        if (isRow === true) {\r\n            rowKey = (this.context as RowContext).rowKey;\r\n        }\r\n        let cn = classNames(this.className, 'form-radio-inline');\r\n        return <span className={cn}>\r\n                {list.map((v,index) => {\r\n                    let {value, title} = v;\r\n                    let name = this.name;\r\n                    if (rowKey !== undefined) name += '-' + rowKey;\r\n                    return <label key={index} className=\"form-radio-inline\">\r\n                        <input ref={input=>this.inputs[index]=input} type=\"radio\" name={name}\r\n                            value={value} defaultChecked={(this.defaultValue || defaultValue)===value} />\r\n                        {title || value}\r\n                    </label>;\r\n                    //</span>\r\n                })}\r\n            </span>;\r\n    }\r\n}\r\n/*\r\n<div className=\"form-control d-flex border-0\"><input\r\nref={(input)=>this.input = input}\r\nclassName={classNames(this.className, 'align-self-center')}\r\ntype=\"checkbox\"\r\nstyle={{maxHeight:\"1.2em\"}}\r\ndefaultValue={this.defaultValue} \r\nonChange={this.onChange} />\r\n</div>\r\n*/","import * as React from 'react';\r\nimport classNames from 'classnames';\r\nimport { UiRange } from '../../schema';\r\nimport { Widget } from './widget';\r\n\r\nexport class RangeWidget extends Widget {\r\n    protected inputType = 'range';\r\n    protected input: HTMLInputElement;\r\n    protected ui: UiRange;\r\n\r\n    setReadOnly(value:boolean) {this.input.readOnly = this.readOnly = value}\r\n    setDisabled(value:boolean) {this.input.disabled = this.disabled = value}\r\n\r\n    render() {\r\n        let {min, max, step} = this.ui;\r\n        return <><input ref={input=>this.input = input}\r\n            className={classNames(this.className, 'form-control', 'w-min-6c')}\r\n            type={this.inputType}\r\n            defaultValue={this.defaultValue} \r\n            onChange={this.onInputChange}\r\n            max={max}\r\n            min={min}\r\n            step={step}\r\n            />\r\n        </>;\r\n    }\r\n}\r\n","import _ from 'lodash';\r\nimport { KeyValueRes, Res } from '../res';\r\n\r\nexport interface FormRes extends KeyValueRes {\r\n    required: string;\r\n    number: string;\r\n    integer: string;\r\n    min: string;\r\n    max: string;\r\n}\r\n\r\nexport const formRes:Res<FormRes> = {\r\n    _: {\r\n        required: 'required',\r\n        number: 'not valid number',\r\n        integer: 'not valid integer',\r\n        min: 'min value is ${min}',\r\n        max: 'max value is ${max}',\r\n    },\r\n    zh: {\r\n        _: {\r\n            required: '必须填',\r\n            number: '需要数字',\r\n            integer: '需要整数',\r\n            min: '不能小于${min}',\r\n            max: '不能大于${max}',\r\n        }\r\n    },\r\n}\r\n","import * as React from 'react';\r\nimport {observable, IReactionDisposer, autorun, isObservable} from 'mobx';\r\nimport classNames from 'classnames';\r\nimport { Schema, ItemSchema, ArrSchema } from '../schema';\r\nimport { UiSchema, TempletType } from '../schema';\r\nimport { factory } from './widgets';\r\nimport 'font-awesome/css/font-awesome.min.css';\r\nimport { ContextContainer, FormContext, Context, RowContext } from './context';\r\nimport { FormRes, formRes } from './formRes';\r\nimport { resLang } from '../res';\r\n\r\nexport type FormButtonClick = (name:string, context: Context) => Promise<any>;\r\nexport type InputEnter = (name:string, context: Context) => Promise<any>;\r\n\r\nexport interface FormProps {\r\n    className?: string;\r\n    schema: Schema;\r\n    uiSchema?: UiSchema;\r\n    formData?: any;\r\n    onButtonClick?: FormButtonClick;\r\n    onEnter?: InputEnter;\r\n    fieldLabelSize?: number;            // col-sm-2 for label\r\n    requiredFlag?: boolean;             // default=true\r\n    beforeShow?: (formContext:FormContext) => void;\r\n    res?: FormRes;\r\n\r\n    Container?: (content:JSX.Element) => JSX.Element;\r\n    FieldContainer?: (label:string|JSX.Element, content:JSX.Element) => JSX.Element;\r\n    FieldClass?: string;\r\n    ButtonClass?: string;\r\n}\r\n\r\nexport class Form extends React.Component<FormProps> {\r\n    readonly schema: Schema;\r\n    readonly itemSchemas: {[name:string]: ItemSchema};\r\n    readonly uiSchema: UiSchema;\r\n    readonly res?: FormRes;\r\n    protected formContext: FormContext;\r\n    //private content: any;\r\n    //private formData: any;\r\n    private disposer: IReactionDisposer;\r\n    //@observable \r\n    readonly data:any;\r\n\r\n    readonly Container: (content:JSX.Element) => JSX.Element;\r\n    readonly FieldContainer: (label:any, content:JSX.Element) => JSX.Element;\r\n    readonly FieldClass: string;\r\n    readonly ButtonClass: string;\r\n    //readonly ArrContainer: (label:any, content:JSX.Element) => JSX.Element;\r\n    //readonly RowContainer: (content:JSX.Element) => JSX.Element;\r\n    //readonly RowSeperator: JSX.Element;\r\n\r\n    constructor(props:FormProps) {\r\n        super(props);\r\n        let {schema, uiSchema, formData, \r\n            Container, FieldContainer, FieldClass, \r\n            ButtonClass, res,\r\n        } = props;\r\n        this.Container = Container || this.DefaultContainer;\r\n        this.FieldContainer = FieldContainer || this.DefaultFieldContainer;\r\n        this.FieldClass = FieldClass!==undefined && FieldClass!==''&&FieldClass!==null? FieldClass : this.DefaultFieldClass;\r\n        this.res = res || this.DefaultRes;\r\n        this.ButtonClass = ButtonClass || this.DefaultButtonClass;\r\n\r\n        this.schema = schema;\r\n        this.itemSchemas = {};\r\n        for (let itemSchema of this.schema) {\r\n            this.itemSchemas[itemSchema.name] = itemSchema;\r\n        }\r\n        this.uiSchema = uiSchema;\r\n\r\n        //this.formData = formData;\r\n        this.disposer = autorun(this.watch);\r\n        this.data = {};\r\n        // this.initRender();\r\n    }\r\n\r\n    private renderContent():any {\r\n        this.initData(this.props.formData);\r\n        let {children} = this.props;\r\n        if (children !== undefined) {\r\n            this.formContext = new FormContext(this, true);\r\n            return <>{children}</>;\r\n        }\r\n\r\n        let Templet: TempletType;\r\n        if (this.uiSchema !== undefined) {\r\n            Templet = this.uiSchema.Templet;\r\n        }\r\n        if (Templet !== undefined) {\r\n            this.formContext = new FormContext(this, true);\r\n            return typeof(Templet) === 'function'? Templet(this.data) : Templet;\r\n        }\r\n\r\n        this.formContext = new FormContext(this, false);\r\n        return <>{this.schema.map((v, index) => {\r\n            return <React.Fragment key={index}>{factory(this.formContext, v, children)}</React.Fragment>\r\n        })}</>;\r\n    }\r\n\r\n    private initData(formData: any) {\r\n        if (formData === undefined) formData = {};\r\n        for (let itemSchema of this.schema) {\r\n            this.initDataItem(itemSchema, this.data, formData);\r\n        }\r\n    }\r\n\r\n    private initDataItem(itemSchema: ItemSchema, data:any, formData: any):any {\r\n        let {name, type} = itemSchema;\r\n        if (type === 'button') return;\r\n        if (type !== 'arr') {\r\n            data[name] = formData[name];\r\n            return;\r\n        }\r\n\r\n        let arrItem:ArrSchema = itemSchema as ArrSchema;\r\n        let {arr:arrItems} = arrItem;\r\n        if (arrItems === undefined) return;\r\n        let arrDict = arrItem.itemSchemas = {};\r\n        for (let item of arrItems) {\r\n            arrDict[item.name] = item;\r\n        }\r\n        let val:any[] = formData[name];\r\n        if (val === undefined) val = [];\r\n        else if (Array.isArray(val) === false) val = [val];\r\n        let arr:any[] = [];\r\n        for (let row of val) {\r\n            let {$isSelected, $isDeleted} = row;\r\n            let r = {\r\n                $source: row,\r\n                $isSelected: $isSelected,\r\n                $isDeleted: $isDeleted,\r\n            };\r\n            for (let item of arrItems) {\r\n                this.initDataItem(item, r, row);\r\n                /*\r\n                let {name:nm} = item;\r\n                let v = row[nm];\r\n                if (v === undefined) v = null;\r\n                r[nm] = v;\r\n                */\r\n            }\r\n            arr.push(r);\r\n        }\r\n        // 如果没有observable，行删除标志点击不管用\r\n        // 不知道这里为什么要去掉observable。有可能会有别的问题\r\n        data[name] = observable(arr);\r\n        //data[name] = arr;\r\n        return;\r\n    }\r\n\r\n    private watch = () => {\r\n        let {formData} = this.props;\r\n        if (formData === undefined) return;\r\n        //this.initData(formData);\r\n        this.calcSelectOrDelete();\r\n    }\r\n    private calcSelectOrDelete() {\r\n        for (let itemSchema of this.schema) {\r\n            this.arrItemOperated(itemSchema);\r\n        }\r\n    }\r\n\r\n    private arrItemOperated(itemSchema: ItemSchema) {\r\n        let {name, type} = itemSchema;\r\n        if (type !== 'arr') return;\r\n        if (this.data === undefined) return;\r\n        let formArrVal = this.data[name];\r\n        if (formArrVal === undefined) return;\r\n        let {arr: arrItems} = itemSchema as ArrSchema;\r\n        for (let row of formArrVal) {\r\n            let {$source} = row;\r\n            if ($source === undefined) continue;\r\n            let {$isSelected, $isDeleted} = $source;\r\n            row.$isSelected = $isSelected;\r\n            row.$isDeleted = $isDeleted;\r\n            //console.log($isSelected, $isDeleted);\r\n            for (let item of arrItems) {\r\n                this.arrItemOperated(item);\r\n            }\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        let {beforeShow} = this.props;\r\n        if (beforeShow !== undefined) beforeShow(this.formContext);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        if (this.disposer !== undefined) this.disposer();\r\n    }\r\n\r\n    render() {\r\n        let content = this.renderContent();\r\n        return <ContextContainer.Provider value={this.formContext}>\r\n            <this.formContext.renderErrors />\r\n            {this.Container(content)}\r\n        </ContextContainer.Provider>;\r\n    }\r\n\r\n    async buttonClick(buttonName:string) {\r\n        this.formContext.checkRules()\r\n        if (this.formContext.hasError === true) return;\r\n\r\n        let {onButtonClick} = this.formContext.form.props;\r\n        if (onButtonClick === undefined) {\r\n            alert(`you should define form onButtonClick`);\r\n            return;\r\n        }\r\n        let ret = await onButtonClick(buttonName, this.formContext);\r\n        if (ret === undefined) return;\r\n        this.formContext.setError(buttonName, ret);\r\n    }\r\n\r\n    protected DefaultContainer = (content:JSX.Element): JSX.Element => {\r\n        return <form className={classNames(this.props.className)} onSubmit={e=>e.preventDefault()}>\r\n            {content}\r\n        </form>;\r\n    }\r\n    protected DefaultFieldContainer = (label:string|JSX.Element, content:JSX.Element): JSX.Element => {\r\n        let {fieldLabelSize} = this.props;\r\n\r\n        if (fieldLabelSize > 0) {\r\n            let labelView:any;\r\n            if (label === null) {\r\n                fieldLabelSize = 0;\r\n            }\r\n            else {\r\n                labelView = <label className={classNames('col-sm-' + fieldLabelSize, 'col-form-label')}>{label}</label>\r\n            }\r\n            let fieldCol = 'col-sm-' + (12 - fieldLabelSize);\r\n            return <div className=\"form-group row\">\r\n                {labelView}\r\n                <div className={fieldCol}>{content}</div>\r\n            </div>;\r\n        }\r\n        return <div className=\"form-group\">\r\n            {label===null? null:<label className=\"col-form-label\">{label}</label>}\r\n            {content}\r\n        </div>;\r\n    }\r\n    protected DefaultFieldClass:string = undefined;\r\n    protected DefaultButtonClass = 'text-center py-2';\r\n    protected DefaultRes:FormRes = resLang<FormRes>(formRes);\r\n\r\n    ArrContainer = (label:any, content:JSX.Element): JSX.Element => {\r\n        return <div>\r\n            <div className={classNames('small text-muted text-center bg-light py-1 px-3 mt-4 mb-1')}>{label}</div>\r\n            {content}\r\n        </div>;\r\n    }\r\n    RowContainer = (content:JSX.Element): JSX.Element => {\r\n        let cn = classNames({\r\n            'py-3': true\r\n        });\r\n        return <div className={cn}>{content}</div>\r\n    }\r\n    RowSeperator = <div className=\"border border-gray border-top\" />;\r\n}\r\n","import * as React from 'react';\r\nimport { factory } from './widgets';\r\nimport { ContextContainer, Context } from './context';\r\n\r\nexport interface FieldProps {\r\n    name: string;\r\n}\r\n\r\nexport class Field extends React.Component<FieldProps> {\r\n    static contextType = ContextContainer;\r\n    render() {\r\n        let {name, children } = this.props;\r\n        let context:Context = this.context;\r\n        if (context === undefined) return <span className=\"text-danger\">!only in Form!</span>;\r\n        let itemSchema = context.getItemSchema(name);\r\n        let content = factory(context, itemSchema, children, this.props);\r\n        if (content === undefined) {\r\n            return <span className=\"text-danger\">!!{name} is not defined!!</span>;\r\n        }\r\n        return content;\r\n    }\r\n}\r\n","export {Form} from './form';\r\nexport {Field} from './field';\r\nexport {Context, RowContext} from './context';\r\n","import CN from './zh/CN';\r\n\r\nconst res = {\r\n    zh: {\r\n        CN: CN\r\n    }\r\n};\r\n\r\nexport default res;\r\n","import React from 'react';\r\nimport _ from 'lodash';\r\n\r\nexport default {\r\n    x: {\r\n        none: '[无]',\r\n        no: '编号',\r\n        team: '部门',\r\n        staff: '员工',\r\n        noStaff: '无员工',\r\n        post: '职位',\r\n        noPost: '无职位',\r\n        product: '产品',\r\n        pack: '包装',\r\n        a: 'aaa',\r\n        b: {\r\n            s: 'sss',\r\n            d: ()=><span className=\"text-success\">ddd</span>,\r\n        },\r\n        c: ()=><span className=\"text-danger\">ccc</span>,\r\n    },\r\n    usq: '百灵威订单',\r\n    tuid: '基础档案',\r\n    sheet: '单据',\r\n    map: '对照表',\r\n    tuidPlaceHolder: '点击选择',\r\n    none: '无内容',\r\n    submit: '提交',\r\n    arrNew: '新增',\r\n    arrEdit: '保存',\r\n    entity: {\r\n        product: {\r\n            label: '产品',\r\n            fields: {\r\n                discription: '描述',\r\n                packType: '基本包装类型',\r\n            },\r\n            arrs: {\r\n                pack: {\r\n                    label: '包装规格',\r\n                    fields: {\r\n                        ratio: '换算率',\r\n                        name: {label: '名称', placeHolder: '如果空，则显示换算率+基本包装类型'},\r\n                    },\r\n                }\r\n            }\r\n        },\r\n        packType: {\r\n            label: '包装类型',\r\n            fields: {\r\n                name: '名称',\r\n                discription: {label:'描述', placeHolder:'包装说明，不用于实际产品中'},\r\n            }\r\n        },\r\n        customer: {\r\n            label: '客户',\r\n            fields: {\r\n                discription: '描述',\r\n            }\r\n        },\r\n        order: {\r\n            x: {\r\n                //top: 'xxx-xxx-订单顶部说明'\r\n                top: ()=><>\r\n                    <h6>订单步骤</h6>\r\n                    <div>第一步：选定客户</div>\r\n                    <div>\r\n                        第二步：颜色变化\r\n                        <span className=\"text-success\">说明</span>\r\n                        <span className=\"text-danger\">文字</span>，解释做单的过程\r\n                    </div>\r\n                </>,\r\n                title: _.template('订单 ${customer} 金额${amount}元'),\r\n                detail: '订单-详情',\r\n            },\r\n            label: '订单',\r\n            arrNew: '新增',\r\n            arrEdit: '保存',\r\n            title: _.template('订单 客户${customer} 金额${amount}元'),\r\n            //arrTitleNewButton: <small>XXX新增</small>,\r\n            fields: {\r\n                customer: '客户',\r\n                fromUnit: '发送部门',\r\n                type: '类型',\r\n                date: '日期',\r\n                subject: '主题',\r\n                discription: '描述',\r\n                content: '内容'\r\n            },\r\n            arrs: {\r\n                products: {\r\n                    label: '产品明细',\r\n                    fields: {\r\n                        product: {label: '产品', placeHolder: '点击选择产品'},\r\n                        pack: {label: '包装规格', placeHolder: '点击选择包装规格'},\r\n                        price: {label: '单价', suffix: '元'},\r\n                        quantity: {label: '数量'},\r\n                        amount: {label: '金额', suffix: '元'},\r\n                    }\r\n                }\r\n            },\r\n            states: {\r\n                $: {\r\n                    label: '新开单',\r\n                    actions: {\r\n                        submit: {\r\n                            label: '新单提交',\r\n                        }\r\n                    }\r\n                },\r\n                deliver: {\r\n                    label: '发货',\r\n                    actions: {\r\n                        finish: {\r\n                            label: '完成发货',\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        },\r\n        price: {\r\n            label: '产品价格表',\r\n            x: {\r\n                none: '[无包装]',\r\n            }\r\n        },\r\n        getMessage: {\r\n            label: '获取Message',\r\n            submit: '获取消息',\r\n            fields: {\r\n                msg: '消息'\r\n            }\r\n        },\r\n        newMessage: {\r\n            label: '新建消息',\r\n            fields: {\r\n                type: '类型',\r\n                subject: '主题',\r\n            },\r\n            arrs: {\r\n                to: {\r\n                    label: '发送',\r\n                    newSubmit: '新增to',\r\n                    editSumbit: '保存to',\r\n                },\r\n                cc: {\r\n                    label: '抄送',\r\n                    newSubmit: '新增cc',\r\n                    editSumbit: '保存cc',\r\n                }\r\n            }\r\n        },\r\n        sectionTeam: {\r\n            label: '大部设置',\r\n        },\r\n        teamPerson: {\r\n            label: '部门员工职位',\r\n            fields: {\r\n            },\r\n            confirmDelete: _.template('真的要删除${label}吗'),\r\n        },\r\n        teamOrganization: {\r\n            label: '部门机构对照表',\r\n        },\r\n        teamPosts: {\r\n            label: '部门职位',\r\n        },\r\n        person: {\r\n            label: '员工',\r\n            fields: {\r\n                name: '姓名',\r\n                nick: '别名',\r\n                given: '名字',\r\n                sur: '姓',\r\n                gender: '性别',\r\n                user: '用户',\r\n            }\r\n        },\r\n        organization: {\r\n            label: '组织结构',\r\n            arrs: {\r\n                post: {\r\n                    label: '职位',\r\n                }\r\n            }\r\n        },\r\n        user: {\r\n            label: '用户'\r\n        }\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport { LMR, Muted } from 'tonva-react-form';\r\nimport { tv, TuidUI, FieldTuidUI } from 'tonva-react-uq';\r\n\r\nconst customer:TuidUI = {\r\n    content: (values) => {\r\n        let {id, discription} = values;\r\n        return <>{discription || 'id ' + id + ' ...'}</>;\r\n    },\r\n    rowContent: (row):JSX.Element => {\r\n        let {discription} = row;\r\n        let right = <Muted>{}</Muted>;\r\n        return <LMR className=\"px-3 py-2\" left={discription} right={right}/>\r\n    },\r\n};\r\n\r\nconst productPackRowContent = observer((values) => {\r\n    let {id, ratio, name, $owner} = values;\r\n    let content, rText = String(ratio);\r\n    if ($owner !== undefined) {\r\n        let packType = $owner.valueFromFieldName('packType');\r\n        if (packType !== undefined) {\r\n            let packName = packType.valueFromFieldName? packType.valueFromFieldName('name') : packType['name'];\r\n            if (packName) {\r\n                if (name) content = name + ' = ' + (rText + packName);\r\n                else content = (rText + packName);\r\n            }\r\n        }\r\n    }\r\n    if (content === undefined) content = (name? name + ' ' + rText : rText) + ' err: no $owner in values';\r\n    return <div className=\"px-3 py-2\">{content}</div>;\r\n});\r\n\r\nconst product:TuidUI = {\r\n    content: (values) => {\r\n        let {id, discription} = values;\r\n        return <>{discription || 'id ' + id + ' ...'}</>;\r\n    },\r\n    rowContent: observer((row):JSX.Element => {\r\n        let {discription, packType} = row;\r\n        let right;\r\n        if (packType && packType.content) {\r\n            right = <Muted>{tv(packType)}</Muted>;\r\n        }\r\n        return <LMR className=\"px-3 py-2\" left={discription} right={right}/>\r\n    }),\r\n    divs: {\r\n        pack: {\r\n            content: observer((values) => {\r\n                let {id, ratio, name, $owner} = values;\r\n                if ($owner === undefined)\r\n                    return <>{name || ratio || 'id' + id + ' ...'}</>;\r\n                let packType = $owner.valueFromFieldName('packType');\r\n                return <>{name || (ratio + (packType && packType.name)) || 'id' + id + ' ...'}</>;\r\n            }),\r\n            rowContent: productPackRowContent,\r\n        }\r\n    },\r\n    form: {\r\n        items: {\r\n            packType: {\r\n                autoList: true,\r\n            } as FieldTuidUI,\r\n            pack: {\r\n                rowContent: productPackRowContent,\r\n            }\r\n        }\r\n    }\r\n};\r\n\r\nconst packType:TuidUI = {\r\n    content: (values) => {\r\n        let {id, name, discription} = values;\r\n        return <>{discription || name || 'id ' + id + ' ...'}</>;\r\n    },\r\n    rowContent: (row):JSX.Element => {\r\n        let {name, discription} = row;\r\n        let right = <Muted>{discription}</Muted>;\r\n        return <LMR className=\"px-3 py-2\" left={name} right={right}/>\r\n    },\r\n};\r\n\r\nexport default {\r\n    customer: customer,\r\n    product: product,\r\n    packType: packType,\r\n}\r\n","import * as React from 'react';\r\nimport { SheetUI, tv } from 'tonva-react-uq';\r\nimport { VSheetNew } from './vNew';\r\nimport { observer } from 'mobx-react';\r\n\r\nconst orderUI:SheetUI = {\r\n    sheetNew: VSheetNew,\r\n    sheetTitle: (valuesWithBox:any, x:any):string => {\r\n        let title = x.title;\r\n        let {customer, amount} = valuesWithBox;\r\n        let p = {customer: customer.obj.discription, amount: amount||99};\r\n        return title(p);\r\n    },\r\n    form: {\r\n        items: {\r\n            customer: {editable: false},\r\n            sumAmount: ():number => {\r\n                return 1;\r\n            },\r\n            products: {\r\n                rowContent: observer((values:any) => {\r\n                    let { product, pack, price, quantity} = values;\r\n                    return <div className=\"row px-3 py-2\">\r\n                        <div className=\"col-8\">\r\n                            <div className=\"text-primary\">{tv(product)}</div>\r\n                            <div className=\"small\">{tv(pack)}</div>\r\n                        </div>\r\n                        <div className='col-2 text-right'>\r\n                            <span className=\"text-danger h5 mb-0\">{price.toFixed(2)}</span> <small>元</small>\r\n                        </div>\r\n                        <div className='col-2'>{quantity}</div>\r\n                    </div>;\r\n                }),\r\n                items: {\r\n                    product: {editable:false},\r\n                    pack: {editable:false},\r\n                    price: {editable:false},\r\n                    amount: function(this:any):number {\r\n                        return (this.quantity === undefined || this.quantity === null? 0 : this.quantity) * \r\n                            (this.price === undefined || this.price === null? 0 : this.price);\r\n                    }\r\n                },\r\n            }\r\n        },\r\n    }\r\n};\r\n\r\nexport default orderUI;\r\n","import * as React from 'react';\r\nimport { SheetUI } from 'tonva-react-uq';\r\nimport orderUI from './order';\r\n\r\nexport default {\r\n    order: orderUI,\r\n}\r\n","import * as React from 'react';\r\nimport { Page } from 'tonva-tools';\r\nimport { FA, List } from 'tonva-react-form';\r\nimport { tv, Sheet, VForm, VEntity, SheetUI, TuidMain, CSheet, CTuidSelect, Map } from 'tonva-react-uq';\r\n\r\ninterface PackRow {\r\n    pack: number;\r\n    price: number;\r\n    quantity: number;\r\n    amount:number;\r\n}\r\n\r\ninterface ProductRow {\r\n    product: number;\r\n    packRows: PackRow[];\r\n}\r\n\r\nexport class VSheetNew extends VEntity<Sheet, SheetUI, CSheet> {\r\n    private customer: any;\r\n    private product: any;\r\n    private vForm: VForm;\r\n    private cCustomerSelect: CTuidSelect;\r\n    private cProductSelect: CTuidSelect;\r\n    private mapPrice: Map;\r\n\r\n    async open(param?:any) {\r\n        //this.controller.vSheetNew = this;\r\n        let cUq = this.controller.cUq;\r\n        this.mapPrice = cUq.map('price');\r\n        let customer = cUq.tuid('customer');\r\n        this.cCustomerSelect = cUq.cTuidSelect(customer);\r\n        let product = cUq.tuid('product');\r\n        this.cProductSelect = cUq.cTuidSelect(product);\r\n\r\n        this.vForm = this.createForm(this.onSubmit, param);\r\n        let productsBand = this.vForm.getBand('products');\r\n        productsBand.setAddRow(this.addRow);\r\n        this.openPage(this.step1SelectCustomer);\r\n    }\r\n\r\n    private onSubmit = async ():Promise<void> => {\r\n        let values = this.vForm.getValues();\r\n        let valuesWithBox = this.vForm.values;\r\n        //let ret = \r\n        await this.controller.onSave(values, valuesWithBox);\r\n        /*\r\n        this.ceasePage();\r\n        //this.openPage(this.finishedPage);\r\n        await this.controller.showSaved(ret);\r\n        */\r\n    }\r\n    /*\r\n    protected view = () => <Page header={this.label}>\r\n        {this.vForm.render()}\r\n    </Page>;\r\n    */\r\n    private addRow = async() => {\r\n        await this.selectProduct();\r\n    }\r\n\r\n    private step1Next = async () => {\r\n        this.ceasePage();\r\n        this.customer = await this.cCustomerSelect.call('');\r\n        this.openPage(this.orderPage);\r\n        this.openPage(this.customerPage);\r\n    }\r\n\r\n    private conformOrder = async () => {\r\n        this.ceasePage();\r\n        let {entity} = this.cCustomerSelect;\r\n        entity.useId(this.customer.id);\r\n        this.vForm.setValue('customer', entity.boxId(this.customer.id));\r\n        await this.selectProduct();\r\n    }\r\n\r\n    private async getPrices(productId:number):Promise<any[]> {\r\n        let ret = await this.mapPrice.table({product: productId});\r\n        return ret;\r\n    }\r\n\r\n    addProductRows = async ({product, packRows}: ProductRow) => {\r\n        let {entity} = this.cProductSelect;\r\n        entity.useId(product);\r\n        let packEntity = (entity as TuidMain).divs['pack'];\r\n        let vArr = this.vForm.vArrs['products'];\r\n        let {list} = vArr;\r\n        for (let packRow of packRows) {\r\n            let {pack, price, quantity, amount} = packRow;\r\n            //packEntity.useId(pack);\r\n            list.push({\r\n                product: entity.boxId(product),\r\n                pack: pack, //packEntity.createID(pack),\r\n                price: price,\r\n                quantity: quantity,\r\n                amount: amount,\r\n            });\r\n        }\r\n        this.product = undefined;\r\n        await this.selectProduct();\r\n    }\r\n\r\n    private selectProduct = async () => {\r\n        this.product = await this.cProductSelect.call();\r\n        this.priceRows = await this.getPrices(this.product.id);\r\n        //this.openVPage(VProductPage, {product:this.product, priceRows: prices});\r\n        this.openPage(this.productPage);\r\n    }\r\n\r\n    private stopOrder = () => {\r\n        this.closePage();\r\n    }\r\n    /*\r\n    private onSubmit = async () => {\r\n        let values = this.form.getValues();\r\n        let valuesWithBox = this.form.values;\r\n        //let ret = await this.saveSheet(values, this.form.values);\r\n        await this.controller.onSave(values, valuesWithBox)\r\n        //alert('[' + this.label + '] 已保存: ' + jsonStringify(ret));\r\n        this.ceasePage();\r\n        //this.openPage(<this.finishedPage />);\r\n        //await this.showSaved(ret);\r\n    }\r\n    */\r\n\r\n    private step1SelectCustomer = () => {\r\n        return <Page header=\"新建订单\">\r\n            <div className=\"p-3 d-flex align-items-center flex-column\">\r\n                {(this.x.top as (()=>string|JSX.Element))()}\r\n            </div>\r\n            <div className=\"p-3 d-flex justify-content-center\">\r\n                <button className=\"w-25 btn btn-primary\" onClick={this.step1Next}>开始</button>\r\n            </div>\r\n        </Page>;\r\n    }\r\n\r\n    private customerPage = () => {\r\n        return <Page header=\"确认客户\">\r\n            <div className=\"p-3\">\r\n                客户详情，信用，收货地址，收款信息，等等\r\n            </div>\r\n            {this.cCustomerSelect.createForm(undefined, this.customer).render()}\r\n            <div className=\"p-3 d-flex justify-content-center\">\r\n                <button className=\"w-25 btn btn-primary\" onClick={this.conformOrder}>确认开单</button>\r\n                <button className=\"mx-3 btn btn-outline-secondary\" onClick={this.stopOrder}>拒绝</button>\r\n            </div>\r\n        </Page>;\r\n    }\r\n\r\n    private orderPage = ():JSX.Element => {\r\n        return <Page header={this.x.detail}>\r\n            {this.vForm.render()}\r\n        </Page>;\r\n    };\r\n\r\n    //======================= select Product =================================\r\n    private priceRows: any[];\r\n    private inputs:{[packId:number]: HTMLInputElement} = {};\r\n\r\n    private addProduct = async () => {\r\n        this.ceasePage();\r\n        let packRows:PackRow[] = [];\r\n        for (let priceRow of this.priceRows) {\r\n            let {pack, retail} = priceRow;\r\n            let quantity = Number.parseFloat(this.inputs[pack.id].value);\r\n            if (Number.isNaN(quantity)) continue;\r\n            let packRow:PackRow = {\r\n                pack: pack,\r\n                quantity: quantity,\r\n                price: retail,\r\n                amount: retail*quantity,\r\n            };\r\n            packRows.push(packRow);\r\n        }\r\n        await this.addProductRows({\r\n            product: this.product.id,\r\n            packRows: packRows\r\n        });\r\n    }\r\n    private refQuantity = (input:HTMLInputElement, packId:number) => {\r\n        this.inputs[packId] = input;\r\n    }\r\n    private renderPack = (packRow:any, index:number) => {\r\n        let {pack, retail} = packRow;\r\n        return <div className=\"px-3 py-1 d-flex\">\r\n            <div className=\"row py-1 align-items-center flex-fill\">\r\n                <div className=\"col-sm-6\">{tv(pack)}</div>\r\n                <div className=\"col-sm-6\">\r\n                    <div className=\"row align-items-center\">\r\n                        <div className=\"col-6 text-sm-right\"><span className=\"text-danger\">{retail}</span> 元</div>\r\n                        <div className=\"col-6\">\r\n                            <input className=\"text-center form-control form-control-sm\" \r\n                                ref={(input:HTMLInputElement)=>this.refQuantity(input, pack.id)} \r\n                                type=\"number\" min={0} />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>;\r\n    }\r\n    private productPage = () => {\r\n        let {discription} = this.product\r\n        return <Page header=\"选定产品\">\r\n            <div className=\"p-3 text-primary bg-white my-3\">\r\n                {discription}\r\n            </div>\r\n            <List items={this.priceRows} item={{render:this.renderPack}} />\r\n            <div className=\"p-3 d-flex justify-content-center\">\r\n                <button className=\"w-25 btn btn-primary\" onClick={this.addProduct}>加入订单</button>\r\n            </div>\r\n        </Page>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { MapUI, tv } from \"tonva-react-uq\";\r\nimport { Muted } from 'tonva-react-form';\r\n\r\nconst priceUI:MapUI = {\r\n    //CMap: CMapTeamPerson,\r\n    //label: '部门员工对照表',\r\n    //main: VMapTeamPerson,\r\n    keys: [\r\n        {\r\n            content: ({discription, id}:any, x:any) => <><Muted>{x.product}</Muted> &nbsp; {discription}</>,\r\n            none: (x:any)=>x.none,\r\n        },\r\n        {\r\n            content: (values:any, x:any) => {\r\n                let {name, id, discription, $owner} = values;\r\n                return <><Muted>{x.pack}</Muted> &nbsp; </>;\r\n            },\r\n            valuesContent: (values:any, x:any) => {\r\n                let {pack, retail} = values;\r\n                return <div className=\"px-0 py-1\"><div className=\"d-inline-block w-25\">{tv(pack)}</div> {retail} 元</div>;\r\n            },\r\n            none: (x:any)=>x.noPost,\r\n        },\r\n    ]\r\n}\r\n\r\nexport default {\r\n    price: priceUI,\r\n};\r\n\r\nexport class A extends React.Component {\r\n    render() {\r\n        return <div>dd</div>;\r\n    }\r\n}","//import * as React from 'react';\r\n//import Loadable from 'react-loadable';\r\nimport { UqUI } from 'tonva-react-uq';\r\nimport res from './res';\r\nimport tuid from './tuid';\r\nimport sheet from './sheet';\r\nimport map from './map';\r\n\r\n/*\r\nfunction Loading() {\r\n    return <div>Loading...</div>;\r\n}\r\n\r\nconst m = Loadable({\r\n    loader: () => import('./map'), \r\n    loading: Loading,\r\n    render(loaded, props) {\r\n        return <loaded.A />\r\n    }\r\n});\r\n*/\r\nconst uqUI:UqUI = {\r\n    //CTuidMain: MyCTuid,\r\n    tuid: tuid,\r\n    sheet: sheet,\r\n    map: map,\r\n    //query: query,\r\n    res: res,\r\n}\r\n\r\nexport const aa_bbJkOrder:UqUI = {\r\n    tuid: {\r\n        customer: tuid.customer,\r\n        product: tuid.product,\r\n        //packType: tuid.packType,\r\n    }\r\n}\r\n\r\nconst uqUIs = uqUI;\r\n/*\r\n{\r\n    $: uqUI,\r\n    \"aa-bb\": aa_BB_UsqUI,\r\n}\r\n*/\r\nexport default uqUIs;\r\n","import * as React from 'react';\r\nimport {observer} from 'mobx-react';\r\nimport classNames from 'classnames';\r\nimport '../css/va-badge.css';\r\n\r\nexport interface BadgeProps {\r\n    className?: string;\r\n    badge?: string|number;\r\n    size?: 'xs' | 'sm' | 'lg';\r\n    color?: 'secondary'|'success'|'danger'|'primary'|'info'|'warning';\r\n    badgeAlign?: 'left'|'center'|'right';\r\n    badgeVertical?: 'top'|'middle'|'bottom';\r\n}\r\n\r\n@observer\r\nexport class Badge extends React.Component<BadgeProps> {\r\n    render() {\r\n        let {className, badge, size, color, badgeAlign, badgeVertical, children} = this.props;\r\n        let cn = classNames(\r\n            className,\r\n            'va-badge',\r\n            size && 'va-badge-'+size,\r\n            'va-badge-' + (color||'secondary'),\r\n            badgeAlign && 'va-badg-'+badgeAlign,\r\n            badgeVertical && 'va-badg-'+badgeVertical,\r\n        );\r\n        let b;\r\n        if (badge) b = <b>{badge}</b>;\r\n        return <div className={cn}>\r\n            {children}\r\n            {b}\r\n        </div>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {observer} from 'mobx-react';\r\nimport * as classNames from 'classnames';\r\nimport '../css/va-lmr.css';\r\n\r\nexport interface LMRProps {\r\n    className?: string | string[];\r\n    left?: string|JSX.Element;\r\n    right?: string|JSX.Element;\r\n    onClick?: ()=>void;\r\n}\r\n\r\n@observer\r\nexport class LMR extends React.Component<LMRProps> {\r\n    render() {\r\n        let {className, left, children, right, onClick} = this.props;\r\n        let l, r;\r\n        if (left !== undefined) l = <header>{left}</header>;\r\n        if (right !== undefined) r = <footer>{right}</footer>;\r\n        let cursor;\r\n        if (onClick !== undefined) cursor = 'cursor-pointer';\r\n        return <div className={classNames('va-lmr', className, cursor)} onClick={onClick}>\r\n            {l}\r\n            <div>{children}</div>\r\n            {r}\r\n        </div>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport * as classNames from 'classnames';\r\n\r\nexport interface FAProps {\r\n    name: string;\r\n    className?: string;\r\n    size?: 'lg'|'2x'|'3x'|'4x'|'5x';\r\n    spin?: boolean;\r\n    fixWidth?: boolean;\r\n    border?: boolean;\r\n    pull?: 'left'|'right';\r\n    pulse?: boolean;\r\n    rotate?: 90|180|270;\r\n    flip?: 'horizontal'|'vertical';\r\n    inverse?: boolean;\r\n}\r\n\r\nexport class FA extends React.Component<FAProps> {\r\n    render() {\r\n        let {name, className, size, spin, fixWidth, border, pull, pulse, rotate, flip, inverse} = this.props;\r\n        let cn = classNames(className, 'fa',\r\n            name && ('fa-' + name),\r\n            size && 'fa-'+size,\r\n            fixWidth && 'fa-fw',\r\n            border && 'fa-border',\r\n            pull && 'fa-pull-' + pull,\r\n            spin && 'fa-spin',\r\n            pulse && 'fa-pulse',\r\n            rotate && 'fa-rotate-' + rotate,\r\n            flip && 'fa-flip-' + flip,\r\n            inverse && 'fa-inverse',\r\n        );\r\n        return <i className={cn} />\r\n    }\r\n}\r\n\r\nexport interface StackedFAProps {\r\n    className?: string;\r\n    size?: 'lg',\r\n}\r\nexport class StackedFA extends React.Component<StackedFAProps> {\r\n    render() {\r\n        let {className, size, children} = this.props;\r\n        let cn = classNames(\r\n            'fa-stack',\r\n            className,\r\n            size && 'fa-' + size);\r\n        return <span className={cn}>\r\n            {children}\r\n        </span>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport * as classNames from 'classnames';\r\n\r\nexport const Muted = (props:any) => \r\n<small className={classNames('text-muted', props.className)} style={props.style}>\r\n    {props.children}\r\n</small>;\r\n","export * from './Badge';\r\nexport * from './LMR';\r\nexport * from './FA';\r\nexport * from './IconText';\r\nexport * from './Muted';\r\n","import * as React from 'react';\r\nimport { Schema, UiSchema, ItemSchema, UiItem, UiTextItem } from '../schema';\r\nimport { nav } from '../nav';\r\nimport { Page } from '../page';\r\nimport { observer } from 'mobx-react';\r\nimport { observable } from 'mobx';\r\nimport { ItemEdit } from './itemEdit';\r\n\r\nexport class StringItemEdit extends ItemEdit {\r\n    protected uiItem: UiTextItem;\r\n    protected async internalStart():Promise<any> {\r\n        return new Promise<any>((resolve, reject) => {\r\n            let element = React.createElement(this.page, {resolve:resolve, reject:reject});\r\n            nav.push(element,reject);\r\n        });\r\n    }\r\n\r\n    private onChange = (evt: React.ChangeEvent<HTMLInputElement>) => {\r\n        this.newValue = evt.target.value;\r\n        let preValue = this.value;\r\n        this.isChanged = (this.newValue != preValue);\r\n    }\r\n\r\n    private onBlur = (evt: React.ChangeEvent<HTMLInputElement>) => {\r\n        this.verifyValue();\r\n    }\r\n\r\n    private onFocus = () => {\r\n        this.error = undefined;\r\n    }\r\n\r\n    private page = observer((props:{resolve:(value:any)=>void, reject: (resean?:any)=>void}):JSX.Element => {\r\n        let {resolve, reject} = props;\r\n        let right = <button\r\n            className=\"btn btn-sm btn-success\"\r\n            disabled={!this.isChanged}\r\n            onClick={()=>{\r\n                this.verifyValue();\r\n                if (this.error === undefined) resolve(this.newValue);\r\n            }}>保存</button>;\r\n        return <Page header={'更改' + this.label} right={right}>\r\n            <div className=\"m-3\">\r\n                <input type=\"text\" \r\n                    onChange={this.onChange}\r\n                    onBlur={this.onBlur}\r\n                    onFocus={this.onFocus}\r\n                    className=\"form-control\" \r\n                    defaultValue={this.value} />\r\n                {\r\n                    this.uiItem && <div className=\"small muted m-2\">{this.uiItem.placeholder}</div>\r\n                }\r\n                {this.error && <div className=\"text-danger\">{this.error}</div>}\r\n            </div>\r\n        </Page>;\r\n    })\r\n}\r\n","import * as React from 'react';\r\nimport { Schema, UiSchema, ItemSchema, UiItem, UiTextItem, UiRadio } from '../schema';\r\nimport { nav } from '../nav';\r\nimport { Page } from '../page';\r\nimport { observer } from 'mobx-react';\r\nimport { observable } from 'mobx';\r\nimport { ItemEdit } from './itemEdit';\r\n\r\nexport class RadioItemEdit extends ItemEdit {\r\n    protected uiItem: UiRadio;\r\n    protected async internalStart():Promise<any> {\r\n        return new Promise<any>((resolve, reject) => {\r\n            let element = React.createElement(this.page, {resolve:resolve, reject:reject});\r\n            nav.push(element,reject);\r\n        });\r\n    }\r\n\r\n    private onChange = (value: any) => {\r\n        this.newValue = value;\r\n        let preValue = this.value;\r\n        this.isChanged = (this.newValue != preValue);\r\n    }\r\n\r\n    private page = observer((props:{resolve:(value:any)=>void, reject: (resean?:any)=>void}):JSX.Element => {\r\n        let {resolve, reject} = props;\r\n        let {name} = this.itemSchema;\r\n        let {list, defaultValue} = this.uiItem;\r\n        let right = <button\r\n            className=\"btn btn-sm btn-success\"\r\n            disabled={!this.isChanged}\r\n            onClick={()=>{\r\n                this.verifyValue();\r\n                if (this.error === undefined) resolve(this.newValue);\r\n            }}>保存</button>;\r\n        let content = list?\r\n            list.map((v, index:number) => {\r\n                let {title, value} = v;\r\n                return <label key={index} className=\"px-3 py-2 cursor-pointer\">\r\n                    <input name={name} type=\"radio\" value={value} \r\n                        onClick={()=>this.onChange(value)} \r\n                        defaultChecked={value === defaultValue} /> {title || value} &nbsp;\r\n                </label>;\r\n            })\r\n            :\r\n            <>no list defined</>;\r\n        return <Page header={'更改' + this.label} right={right}>\r\n            <div className=\"m-3\">{content}</div>\r\n        </Page>;\r\n    })\r\n}\r\n","import * as React from 'react';\r\nimport { Schema, UiSchema, ItemSchema, UiItem, UiTextItem, UiSelect } from '../schema';\r\nimport { nav } from '../nav';\r\nimport { Page } from '../page';\r\nimport { observer } from 'mobx-react';\r\nimport { observable } from 'mobx';\r\nimport { ItemEdit } from './itemEdit';\r\n\r\nexport class SelectItemEdit extends ItemEdit {\r\n    protected uiItem: UiSelect;\r\n    protected async internalStart():Promise<any> {\r\n        return new Promise<any>((resolve, reject) => {\r\n            let element = React.createElement(this.page, {resolve:resolve, reject:reject});\r\n            nav.push(element,reject);\r\n        });\r\n    }\r\n\r\n    private onChange = (value:any) => {\r\n        this.newValue = value;\r\n        let preValue = this.value;\r\n        this.isChanged = (this.newValue != preValue);\r\n    }\r\n\r\n    private page = observer((props:{resolve:(value:any)=>void, reject: (resean?:any)=>void}):JSX.Element => {\r\n        let {resolve, reject} = props;\r\n        let {list} = this.uiItem;\r\n        let content = list?\r\n            list.map((v, index:number) => {\r\n                let {title, value} = v;\r\n                return <div key={index} className=\"px-3 py-2 cursor-pointer bg-white mb-1\" onClick={()=>resolve(this.newValue)}>\r\n                    {title || value}\r\n                </div>;\r\n            })\r\n            :\r\n            <>no list defined</>;\r\n        return <Page header={'更改' + this.label}>\r\n            <div className=\"my-3\">\r\n                {content}\r\n            </div>\r\n        </Page>;\r\n    })\r\n}\r\n","import * as React from 'react';\r\nimport { Schema, UiSchema, ItemSchema, UiItem, UiTextItem } from '../schema';\r\nimport { observer } from 'mobx-react';\r\nimport { ItemEdit } from './itemEdit';\r\nimport { StringItemEdit } from './stringItemEdit';\r\nimport { ImageItemEdit } from './imageItemEdit';\r\nimport { Image } from '../image';\r\nimport { RadioItemEdit } from './radioItemEdit';\r\nimport { SelectItemEdit } from './selectItemEdit';\r\n\r\nexport interface EditProps {\r\n    className?: string;\r\n    schema: Schema;\r\n    data: any;\r\n    onItemClick?: (itemSchema: ItemSchema, uiItem: UiItem, value: any) => Promise<void>;\r\n    onItemChanged?: (itemSchema: ItemSchema, newValue:any, preValue:any) => Promise<void>;\r\n    stopEdit?: boolean;\r\n    uiSchema?: UiSchema;\r\n    sepClassName?: string;\r\n    topBorderClassName?: string;\r\n    bottomBorderClassName?: string;\r\n    rowContainerClassName?: string;\r\n}\r\n\r\n@observer\r\nexport class Edit extends React.Component<EditProps> {\r\n    private defaultSepClassName = \"border-top edit-sep-light-gray\";\r\n    private defaultRowContainerClassName = \"d-flex px-3 py-2 bg-white align-items-center\";\r\n    private topBorder:JSX.Element;\r\n    private bottomBorder:JSX.Element;\r\n    private rowContainerClassName?: string;\r\n    private sep:JSX.Element;\r\n    private uiSchema: {[name:string]: UiItem};\r\n\r\n    constructor(props: EditProps) {\r\n        super(props);\r\n        let {topBorderClassName, bottomBorderClassName, sepClassName, rowContainerClassName, uiSchema, stopEdit} = props;\r\n        this.topBorder = <div className={topBorderClassName || this.defaultSepClassName} />;\r\n        this.bottomBorder = <div className={bottomBorderClassName || this.defaultSepClassName} />;\r\n        this.rowContainerClassName = rowContainerClassName || this.defaultRowContainerClassName;\r\n        if (stopEdit !== true) this.rowContainerClassName += ' cursor-pointer';\r\n        this.sep = <div className={sepClassName || this.defaultSepClassName} />;\r\n        this.uiSchema = (uiSchema && uiSchema.items) || {};\r\n    }\r\n\r\n    render() {\r\n        let elItems:JSX.Element[] = [];\r\n        let {schema} = this.props;\r\n        let len = schema.length;\r\n\r\n        elItems.push(this.topBorder);\r\n        for (let i=0; i<len; i++) {\r\n            if (i>0) elItems.push(this.sep);\r\n            elItems.push(this.renderRow(schema[i]));\r\n        }\r\n        elItems.push(this.bottomBorder);\r\n\r\n        return <div>\r\n            {elItems.map((v, index) => <React.Fragment key={index}>{v}</React.Fragment>)}\r\n        </div>;\r\n    }\r\n\r\n    private renderRow(itemSchema: ItemSchema):JSX.Element {\r\n        let {name, type, required} = itemSchema;\r\n        let divValue:any;\r\n        let uiItem = this.uiSchema[name];\r\n        let label:string = (uiItem && uiItem.label) || name;\r\n        let value:any = this.props.data[name];\r\n        switch (type) {\r\n            default:\r\n                divValue = value? <b>{value}</b> : <small className=\"text-muted\">(无)</small>;\r\n                break;\r\n            case 'image':\r\n                divValue = <Image className=\"w-4c h-4c\" src={value} />;\r\n                break;\r\n        }\r\n        let requireFlag = required===true && <span className=\"text-danger\">*</span>;\r\n        return <div className={this.rowContainerClassName} onClick={async ()=>await this.rowClick(itemSchema, uiItem, label, value)}>\r\n            <div className=\"w-6c\">{label} {requireFlag}</div>\r\n            <div className=\"flex-fill d-flex justify-content-end\">{divValue}</div>\r\n            {this.props.stopEdit!==true && <div className=\"w-2c text-right\"><i className=\"fa fa-chevron-right\" /></div>}\r\n        </div>;\r\n    }\r\n\r\n    private rowClick = async (itemSchema: ItemSchema, uiItem: UiItem, label:string, value: any) => {\r\n        let {onItemChanged, onItemClick, stopEdit} = this.props;\r\n        if (stopEdit === true) return;\r\n        let changeValue:any;\r\n        if (onItemClick !== undefined) {\r\n            await onItemClick(itemSchema, uiItem, value);\r\n            return;\r\n        }\r\n        let itemEdit:ItemEdit = createItemEdit(itemSchema, uiItem, label, value);\r\n        if (itemEdit === undefined) {\r\n            alert('undefined: let itemEdit:ItemEdit = createItemEdit(itemSchema, uiItem, label, value);');\r\n            return;\r\n        }\r\n        try {\r\n            changeValue = await itemEdit.start();\r\n            if (changeValue != value) {\r\n                if (onItemChanged === undefined) {\r\n                    alert(`${itemSchema.name} value changed, new: ${changeValue}, pre: ${value}`);\r\n                }\r\n                else {\r\n                    await onItemChanged(itemSchema, changeValue, value);\r\n                }\r\n            }\r\n            await itemEdit.end();\r\n        }\r\n        catch (err) {\r\n            // 如果直接back，会触发reject，就到这里了\r\n            console.log('no value changed');\r\n        }\r\n    }\r\n}\r\n\r\nfunction createItemEdit(itemSchema: ItemSchema, uiItem:UiItem, label:string, value: any):ItemEdit {\r\n    let itemEdit: new (itemSchema: ItemSchema, uiItem:UiItem, label:string, value: any) => ItemEdit;\r\n    if (uiItem !== undefined) {\r\n        switch (uiItem.widget) {\r\n            default: break;\r\n            case 'text': itemEdit = StringItemEdit; break;\r\n            case 'image': itemEdit = ImageItemEdit; break;\r\n            case 'radio': itemEdit = RadioItemEdit; break;\r\n            case 'select': itemEdit = SelectItemEdit; break;\r\n        }\r\n    }\r\n    if (itemEdit === undefined) {\r\n        switch (itemSchema.type) {\r\n            case 'string': itemEdit = StringItemEdit; break;\r\n            case 'image': itemEdit = ImageItemEdit; break;\r\n        }\r\n    }\r\n    if (itemEdit === undefined) return;\r\n    return new itemEdit(itemSchema, uiItem, label, value);\r\n}\r\n","export * from './edit';\r\n","import * as React from 'react';\r\nimport { IObservableArray, computed } from 'mobx';\r\nimport { PageItems } from 'tonva-tools';\r\nimport {List} from './index';\r\n\r\nexport abstract class ListBase {\r\n    protected list: List;\r\n    constructor(list: List) {\r\n        this.list = list;\r\n    }\r\n    get isPaged():boolean {\r\n        let items = this.list.props.items;\r\n        return (items !== null && items !== undefined && Array.isArray(items) === false);\r\n    }\r\n    get items():any[]|IObservableArray<any> {\r\n        let items = this.list.props.items;\r\n        if (items === null) return null;\r\n        if (items === undefined) return undefined;\r\n        if (Array.isArray(items) === true)\r\n            return items as IObservableArray<any>;\r\n        else\r\n            return (items as PageItems<any>).items;\r\n    }\r\n    @computed get loading():boolean {\r\n        let items = this.list.props.items;\r\n        if (items === null) return false;\r\n        if (items === undefined) return true;\r\n        let pageItems = items as PageItems<any>;\r\n        if (pageItems.items === undefined) return false;\r\n        return pageItems.loading;\r\n    }\r\n    get selectedItems():any[] { return; }\r\n    updateProps(nextProps:any) {}\r\n    abstract render(item:any, index:number):JSX.Element;\r\n    protected renderContent(item:any, index:number) {\r\n        let {render} = this.list.props.item;\r\n        if (render === undefined) return <div className=\"px-3 py-2\">{JSON.stringify(item)}</div>;\r\n        return render(item, index);\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport * as classNames from 'classnames';\r\nimport {ListBase} from './base';\r\n\r\nexport class Clickable extends ListBase {\r\n    render(item:any, index:number):JSX.Element {\r\n        let {className, key, onClick} = this.list.props.item;\r\n        return <li key={key===undefined?index:key(item)} className={classNames('va-row-clickable', className)} onClick={()=>onClick(item)}>\r\n            {this.renderContent(item, index)}\r\n        </li>\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport * as classNames from 'classnames';\r\nimport {ListBase} from './base';\r\nimport { uid } from '../uid';\r\n\r\nexport class Static extends ListBase {\r\n    render(item:any, index:number):JSX.Element {\r\n        let {className, key, render} = this.list.props.item;\r\n        if (typeof item === 'string') {\r\n            let cn = classNames('va-list-gap', 'px-3', 'pt-1');\r\n            return <li key={uid()} className={cn}>{item}</li>;\r\n        }\r\n        return <li key={key===undefined?index:key(item)} className={classNames(className)}>\r\n            {this.renderContent(item, index)}\r\n        </li>\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {observable, computed, IObservableArray} from 'mobx';\r\nimport * as classNames from 'classnames';\r\nimport {ListBase} from './base';\r\nimport {uid} from '../uid';\r\nimport { PageItems } from 'tonva-tools';\r\n\r\nexport interface SelectableItem {\r\n    selected: boolean;\r\n    item: any;\r\n    labelId: string;\r\n}\r\n\r\nexport class Selectable extends ListBase {\r\n    private _items: SelectableItem[];\r\n    private _selectedItems: any[];\r\n    private input: HTMLInputElement;\r\n    private buildItems() {\r\n        console.log('buildItems in selectable.tsx');\r\n        let {items, selectedItems, compare} = this.list.props;\r\n        let itemsArray:any[] | IObservableArray<any>;\r\n        if (items === undefined) {\r\n            return this._items = undefined;\r\n        }\r\n        if (items === null) {\r\n            return this._items = null;\r\n        }\r\n        if (Array.isArray(items) === true) {\r\n            itemsArray = items as any;\r\n        }\r\n        else {\r\n            itemsArray = (items as PageItems<any>).items;\r\n        }\r\n        //let items = this.items;\r\n        this._selectedItems = selectedItems;\r\n        if (selectedItems === undefined) {\r\n            return this._items = itemsArray.map(v => {\r\n                return {\r\n                    selected:false, \r\n                    item:v, \r\n                    labelId:uid()\r\n                };\r\n            });\r\n        }\r\n        if (compare === undefined) {\r\n            return this._items = itemsArray.map(v => {\r\n                return {\r\n                    selected:selectedItems.find(si => si === v) !== undefined, \r\n                    item:v, \r\n                    labelId:uid()\r\n                };\r\n            });\r\n        }\r\n        return this._items = itemsArray.map(v => {\r\n            return {\r\n                selected:selectedItems.find(si => compare(v, si)) !== undefined, \r\n                item:v, \r\n                labelId:uid()\r\n            };\r\n        });\r\n    }\r\n    @computed get items() {\r\n        //if (this._items === undefined) \r\n        this.buildItems();\r\n        return this._items;\r\n    }\r\n    updateProps(nextProps:any) {\r\n        if (nextProps.selectedItems === this._selectedItems) return;\r\n        this.buildItems();\r\n    }\r\n    private onSelect(item:SelectableItem, selected:boolean) {\r\n        item.selected = selected;\r\n        let anySelected = this._items.some(v => v.selected);\r\n        this.list.props.item.onSelect(item.item, selected, anySelected);\r\n    }\r\n    \r\n    get selectedItems():any[] {\r\n        return this._items.filter(v => v.selected === true).map(v => v.item);\r\n    }\r\n    /*\r\n    set selectedItems(value: any[]) {\r\n        if (value === undefined) return;\r\n        if (this._items === undefined) return;\r\n        let sLen = this._items.length;\r\n        let list = value.slice();\r\n        for (let n=0; n<sLen; n++) {\r\n            let sItem = this._items[n];\r\n            let len = list.length;\r\n            if (len === 0) break;\r\n            let item = sItem.item;\r\n            for (let i=0; i<len; i++) {\r\n                let v = list[i];\r\n                if (item === v) {\r\n                    sItem.selected = true;\r\n                    value.splice(i, 1);\r\n                    break;\r\n                }\r\n            }\r\n        };\r\n    }\r\n    */\r\n    //w-100 mb-0 pl-3\r\n    //m-0 w-100\r\n    render(item:SelectableItem, index:number):JSX.Element {\r\n        let {className, key, render, onSelect} = this.list.props.item;\r\n        let {labelId, selected} = item;\r\n        return <li key={key===undefined?index:key(item)} className={classNames(className)}>\r\n            <div className=\"d-flex align-items-center px-3\">\r\n                <input ref={input=>{\r\n                        if (!input) return;\r\n                        this.input = input; input.checked = selected;\r\n                    }}\r\n                    className=\"\" type=\"checkbox\" value=\"\" id={labelId}\r\n                    defaultChecked={selected}\r\n                    onChange={(e)=>{\r\n                        this.onSelect(item, e.target.checked)} \r\n                    }/>\r\n                <label className=\"\" style={{flex:1, marginBottom:0}} htmlFor={labelId}>\r\n                    {this.renderContent(item.item, index)}\r\n                </label>\r\n            </div>\r\n        </li>\r\n    }\r\n}\r\n/*\r\n<label>\r\n<label className=\"custom-control custom-checkbox\">\r\n    <input type='checkbox' className=\"custom-control-input\"\r\n        //checked={selected}\r\n        onChange={(e)=>this.onSelect(item, e.target.checked)} />\r\n    <span className=\"custom-control-indicator\" />\r\n</label>\r\n{this.renderContent(item.item, index)}\r\n</label>\r\n*/\r\n","import * as React from 'react';\r\nimport classNames from 'classnames';\r\nimport {observer} from 'mobx-react';\r\nimport {PageItems} from 'tonva-tools';\r\nimport {ListBase} from './base';\r\nimport {Clickable} from './clickable';\r\nimport {Static} from './static';\r\nimport {Selectable} from './selectable';\r\nimport \"../css/va-list.css\";\r\nimport { IObservableArray } from 'mobx';\r\n\r\ntype StaticRow = string|JSX.Element|(()=>string|JSX.Element);\r\n\r\nexport interface ListProps {\r\n    className?: string|string[];\r\n    items: any[] | IObservableArray<any> | PageItems<any>;\r\n    item: {\r\n        className?: string|string[];\r\n        render?: (item:any, index:number) => JSX.Element;\r\n        onSelect?: (item:any, isSelected:boolean, anySelected:boolean)=>void;\r\n        onClick?: (item:any)=>void;\r\n        key?: (item:any)=>string|number;\r\n    };\r\n    compare?:(item:any, selectItem)=>boolean;\r\n    selectedItems?:any[];\r\n    header?: StaticRow;\r\n    footer?: StaticRow;\r\n    before?: StaticRow;\r\n    loading?: StaticRow;\r\n    none?: StaticRow;\r\n}\r\n\r\n@observer\r\nexport class List extends React.Component<ListProps> {\r\n    private listBase: ListBase;\r\n    constructor(props:ListProps) {\r\n        super(props);\r\n        let {item} = this.props;\r\n        let {onClick, onSelect} = item;\r\n        if (onSelect !== undefined)\r\n            this.listBase = new Selectable(this);\r\n        else if (onClick !== undefined)\r\n            this.listBase = new Clickable(this);\r\n        else\r\n            this.listBase = new Static(this);\r\n    }\r\n    _$scroll = (direct: 'top'|'bottom') => {\r\n        console.log('############### items scroll to ' + direct);\r\n    }\r\n    componentWillUpdate(nextProps:ListProps, nextState, nextContext) {\r\n        this.listBase.updateProps(nextProps);\r\n    }\r\n    get selectedItems():any[] {\r\n        return this.listBase.selectedItems;\r\n    }\r\n    render() {\r\n        let {className, header, footer, before, loading, none, item, selectedItems} = this.props;\r\n        if (before === undefined) before = 'before';\r\n        if (loading === undefined) loading = 'loading';\r\n        if (none === undefined) none = 'none';        \r\n        //this.listBase.selectedItems = selectedItems;\r\n        let {isPaged, items, loading:isLoading} = this.listBase;\r\n        function staticRow(row:StaticRow, type:string) {\r\n            if (!row) return;\r\n            switch (typeof row) {\r\n                default:\r\n                case 'string': return <li className={\"va-list-\"+type}>{row}</li>;\r\n                case 'function': return <li className={\"va-list-\"+type}>{(row as ()=>string|JSX.Element)()}</li>;\r\n                case 'object': return <li>{row}</li>\r\n            } \r\n        }\r\n        let content:any;\r\n        if (items === null)\r\n            content = staticRow(before, 'before');\r\n        else if (items === undefined)\r\n            content = staticRow(loading, 'loading');\r\n        else if (items.length === 0)\r\n            content = staticRow(none, 'none');\r\n        else {\r\n            content = items.map((item, index) => {\r\n                return this.listBase.render(item, index);\r\n            });\r\n        }\r\n        return <ul className={classNames('va-list', className)}>\r\n            {staticRow(header, 'header')}\r\n            {content}\r\n            {staticRow(footer, 'footer')}\r\n        </ul>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {observer} from 'mobx-react';\r\nimport * as className from 'classnames';\r\nimport {ListView} from '../listView';\r\nimport {PropGridProps} from './PropGrid';\r\nimport {LabeledProp, StringProp, NumberProp, ListProp, ComponentProp} from './propView';\r\n\r\nexport abstract class PropRow {\r\n    setValues(values: any) {}\r\n    abstract render(key:string): any;\r\n}\r\n\r\nexport class PropBorder extends PropRow {\r\n    render(key:string): JSX.Element {\r\n        return <div key={'_b_' + key} className=\"\">\r\n            <div className=\"col-sm-12\">\r\n                <div style={{borderTop: '1px solid #f0f0f0'}} />\r\n            </div>\r\n        </div>;\r\n    }\r\n}\r\n\r\nexport class PropGap extends PropRow {\r\n    private param: string;\r\n    constructor(param?: string) {\r\n        super();\r\n        this.param = param;\r\n    }\r\n    render(key:string): JSX.Element {\r\n        let w: string;\r\n        switch (this.param) {\r\n            default: w = 'py-2'; break;\r\n            case '=': w = 'py-1'; break;\r\n            case '-': w = 'pb-1'; break;\r\n        }\r\n        let cn = className(w);\r\n        return <div key={'_g_' + key} className={cn} style={{backgroundColor: '#f0f0f0'}} />;\r\n    }\r\n}\r\n\r\nconst valueAlignStart = 'justify-content-start';\r\nconst valueAlignCenter = 'justify-content-center';\r\nconst valueAlignEnd = 'justify-content-end';\r\nexport abstract class LabeledPropRow extends PropRow {\r\n    protected gridProps: PropGridProps;\r\n    protected prop: LabeledProp;\r\n    protected content: any;\r\n    //protected values: any;\r\n    constructor(gridProps:PropGridProps, prop: LabeledProp) {\r\n        super();\r\n        this.gridProps = gridProps;\r\n        this.prop = prop;\r\n        //this.values = values;\r\n    }\r\n    render(key:string):any {\r\n        let {onClick, bk} = this.prop;\r\n        let cn = className({\r\n            \"cursor-pointer\": onClick !== undefined,\r\n            \"bg-white\": bk === undefined, \r\n            \"row\": true\r\n        });\r\n        return <div key={key} className={cn} onClick={onClick}>\r\n            {this.renderLabel()}\r\n            {this.renderProp()}\r\n        </div>;\r\n    }\r\n    protected renderLabel():any {\r\n        let {label} = this.prop;\r\n        if (label === undefined) return null;\r\n        return <label className=\"col-sm-2 col-form-label\">\r\n            {label}\r\n        </label>;\r\n    }\r\n    protected renderProp():any {\r\n        let {label, full} = this.prop as any;\r\n        let align, vAlign;\r\n        switch (this.gridProps.alignValue) {\r\n            case 'left': align = valueAlignStart; break;\r\n            case 'center': align = valueAlignCenter; break;\r\n            case 'right': align = valueAlignEnd; break;\r\n        }\r\n        switch (this.prop.vAlign) {\r\n            case 'top': vAlign = 'align-items-start'; break;\r\n            default:\r\n            case 'center': vAlign = 'align-items-center'; break;\r\n            case 'bottom': vAlign = 'align-items-end'; break;\r\n            case 'stretch': vAlign = 'align-items-stretch'; break;\r\n        }\r\n        let col:string;\r\n        if (full !== true)\r\n            col = label===undefined? 'col-sm-12':'col-sm-10';\r\n        else\r\n            col = 'w-100';\r\n        let cn = className(align, vAlign, col, 'd-flex');\r\n        return <div className={cn}>\r\n            {this.renderPropBody()}\r\n        </div>;\r\n    }\r\n    protected renderPropBody():any {\r\n        return <div className=\"form-control-plaintext\">\r\n            {this.renderPropContent()}\r\n        </div>;\r\n    }\r\n    protected renderPropContent():any {\r\n        return this.content;\r\n    }\r\n}\r\n\r\nexport class StringPropRow extends LabeledPropRow {\r\n    protected prop: StringProp;\r\n    setValues(values:any) {\r\n        if (values === undefined) this.content = undefined;\r\n        else this.content = values[this.prop.name];\r\n    }\r\n}\r\n\r\nexport class NumberPropRow extends LabeledPropRow {\r\n    protected prop: NumberProp;\r\n    setValues(values:any) {\r\n        if (values === undefined) this.content = undefined;\r\n        else this.content = values[this.prop.name];\r\n    }\r\n}\r\n\r\nexport class ListPropRow extends LabeledPropRow {\r\n    protected prop: ListProp;\r\n    setValues(values:any) {\r\n        if (values === undefined) this.content = undefined;\r\n        else {\r\n            let list = this.prop.list;\r\n            if (typeof list === 'string') this.content = values[list];\r\n            else this.content = undefined;\r\n        }\r\n    }\r\n    protected renderPropBody() {\r\n        let {list, row} = this.prop;\r\n        let items:any[] = typeof list === 'string'? this.content : list;\r\n        if (items === undefined) return <div/>;\r\n        // new row(item)\r\n        return <div className=\"w-100\">\r\n            {\r\n                items.map((item, index) => <React.Fragment key={index}>\r\n                    {index===0? null: <div style={{width:'100%', borderBottom:'1px solid #f0f0f0'}} />}\r\n                    {React.createElement(row, item)}\r\n                </React.Fragment>)\r\n            }\r\n        </div>;\r\n    }\r\n}\r\n\r\nexport class ComponentPropRow extends LabeledPropRow {\r\n    protected prop: ComponentProp;\r\n    protected renderPropBody() {\r\n        let {component} = this.prop;\r\n        return component;\r\n    }\r\n}\r\n\r\nexport class PropContainer extends PropRow {\r\n    render(key:string): JSX.Element {\r\n        return <div className=\"bg-white\">\r\n            <label className=\"col-sm-2 col-form-label\">\r\n                AAABBBCCC\r\n            </label>\r\n            <div className=\"col-sm-10\">\r\n                <div className=\"form-control-plaintext\">\r\n                    dsfasfa sdf asdf a\r\n                </div>\r\n            </div>\r\n        </div>;\r\n    }\r\n}\r\n","import {ListViewProps} from '../listView';\r\nimport {PropGridProps} from './PropGrid';\r\nimport {PropRow, PropBorder, PropGap, PropContainer,\r\n    StringPropRow, NumberPropRow, ListPropRow, ComponentPropRow} from './row';\r\n\r\nexport interface Format {\r\n\r\n}\r\n\r\nexport interface PropBase {\r\n    onClick?: ()=>void;\r\n}\r\n\r\nexport interface LabeledProp extends PropBase {\r\n    label?: string;\r\n    bk?: string;\r\n    vAlign?: 'top'|'bottom'|'center'|'stretch';\r\n}\r\n\r\nexport interface StringProp extends LabeledProp {\r\n    type: 'string';\r\n    name: string;\r\n}\r\n\r\nexport interface NumberProp extends LabeledProp {\r\n    type: 'number';\r\n    name: string;\r\n}\r\n\r\nexport interface FormatProp extends LabeledProp {\r\n    type: 'format';\r\n    format: Format;\r\n}\r\n\r\nexport interface ListProp extends LabeledProp {\r\n    type: 'list';\r\n    list: string | any[];  // string 表示名字，否则就是值\r\n    row: new (props:any) => React.Component;\r\n}\r\n\r\nexport interface ComponentProp extends LabeledProp {\r\n    type: 'component';\r\n    full?: boolean;\r\n    component: any; //JSX.Element;\r\n}\r\n\r\nexport type Prop = StringProp | NumberProp | FormatProp | ListProp | ComponentProp | string;\r\n\r\nexport class PropView {\r\n    private gridProps:PropGridProps\r\n    private props: Prop[];\r\n    //private values:any;\r\n    private rows: PropRow[];\r\n\r\n    constructor(gridProps:PropGridProps, props:Prop[]) {\r\n        this.gridProps = gridProps;\r\n        this.props = props;\r\n        //this.values = values;\r\n        this.buildRows();\r\n    }\r\n\r\n    private buildRows() {\r\n        this.rows = [];\r\n        let isGap:boolean = true;\r\n        for (let prop of this.props) {\r\n            if (typeof prop === 'string') {\r\n                this.rows.push(new PropGap(prop));\r\n                isGap = true;\r\n            }\r\n            else {\r\n                if (!isGap) this.rows.push(new PropBorder());\r\n                let row;\r\n                switch (prop.type) {\r\n                    default: continue;\r\n                    case 'string': row = new StringPropRow(this.gridProps, prop); break;\r\n                    case 'number': row = new NumberPropRow(this.gridProps, prop); break;\r\n                    case 'list': row = new ListPropRow(this.gridProps, prop); break;\r\n                    case 'component': row = new ComponentPropRow(this.gridProps, prop); break;\r\n                }\r\n                this.rows.push(row);\r\n                isGap = false;\r\n            }\r\n        }\r\n    }\r\n\r\n    setValues(values: any) {\r\n        for (let r of this.rows) r.setValues(values);\r\n    }\r\n\r\n    render() {\r\n        return this.rows.map((row, index) => row.render(String(index)));\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport * as classNames from 'classnames';\r\nimport {observer} from 'mobx-react';\r\nimport {Prop, PropView} from './propView';\r\nimport {PropContainer, PropBorder, PropGap} from './row';\r\n\r\nexport interface PropGridProps {\r\n    className?: string;\r\n    rows: Prop[];\r\n    values: any;\r\n    alignValue?: 'left'|'center'|'right';\r\n}\r\n\r\n@observer\r\nexport class PropGrid extends React.Component<PropGridProps> {\r\n/*\r\n    private propView: PropView;\r\n    constructor(props:PropGridProps) {\r\n        super(props);\r\n    }\r\n*/\r\n/*\r\n    componentWillMount() {\r\n        this.propView = new PropView(this.props.rows);\r\n        this.propView.setValues(this.props.values);\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps: Readonly<PropGridProps>, nextContext: any) {\r\n        this.propView = new PropView(this.props.rows);\r\n        this.propView.setValues(nextProps.values);\r\n        this.forceUpdate();\r\n    }\r\n*/\r\n    render() {\r\n        let {className, rows, values} = this.props;\r\n        let propView = new PropView(this.props, rows);\r\n        propView.setValues(values);\r\n        let cn = classNames('container-fluid', className);\r\n        return <div className={cn}>\r\n            {propView.render()}\r\n        </div>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport * as classNames from 'classnames';\r\nimport {IObservableValue, IComputedValue} from 'mobx';\r\nimport {observer} from 'mobx-react';\r\nimport '../css/va-row.css';\r\n\r\nexport interface ListItem {\r\n    key?: string|number;\r\n    date?: Date;\r\n    icon?: string | JSX.Element;\r\n    main?: string;\r\n    vice?: string;\r\n    middle?: string | JSX.Element;\r\n    midSize?: number;\r\n    right?: string | JSX.Element;\r\n    onClick?: () => void;\r\n    unread?: number|IComputedValue<number>;         // <0 表示red dot\r\n}\r\n\r\nexport interface ListRowProps extends ListItem {\r\n    //onClick: () => void;\r\n}\r\n\r\nexport interface ListRowState {\r\n    pressed: boolean;\r\n}\r\n\r\n@observer\r\nexport class ListRow extends React.Component<ListRowProps, ListRowState> {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            pressed: false,\r\n        }\r\n    }\r\n    render() {\r\n        let {date, main, vice, middle, midSize, icon, unread, right, onClick} = this.props;\r\n        let header, isIcon:boolean, noteNum;\r\n        if (unread !== undefined) {\r\n            let uv:number;\r\n            if (typeof unread === 'number') uv = unread;\r\n            else uv = unread.get();\r\n                if (uv > 0)\r\n                noteNum = <b>{uv}</b>;\r\n            else if (uv < 0)\r\n                noteNum = <b className='dot' />;\r\n        }\r\n        switch (typeof icon) {\r\n            case 'object':\r\n                header = <header>{icon}{noteNum}</header>; \r\n                isIcon= false;\r\n                break;\r\n            case 'string': \r\n                header = <header className='icon'><img src={icon as string} />{noteNum}</header>;\r\n                isIcon= true; \r\n                break;\r\n        }\r\n        let mid;\r\n        if (middle !== undefined) {\r\n            switch (typeof middle) {\r\n                case 'string':\r\n                    mid = <div style={{flex:midSize}}>{middle}</div>;\r\n                    break;\r\n                default:\r\n                    mid = middle;\r\n                    break;\r\n            }\r\n        }\r\n        let footer;\r\n        if (right !== undefined) {\r\n            if (typeof right === 'string')\r\n                footer = <footer><small className=\"text-muted\">{right}</small></footer>;\r\n            else\r\n                footer = <footer>{right}</footer>;\r\n        }\r\n        let viceSpan;\r\n        if (vice !== undefined) viceSpan = <span>{vice}</span>;\r\n        let cn = classNames('va-row', {icon:isIcon, pressed: this.state.pressed}, {\"va-action\": onClick !== undefined});\r\n        return (\r\n        <li className={cn} onClick={onClick}>\r\n            {header}\r\n            <div>\r\n                <div>{main}</div>\r\n                {viceSpan}\r\n            </div>\r\n            {mid}\r\n            {footer}\r\n        </li>\r\n        );\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport * as classNames from 'classnames';\r\nimport {observer} from 'mobx-react';\r\nimport {ListItem, ListRow} from './listRow';\r\n\r\nexport interface ListViewProps {\r\n    className?: string;\r\n    items?: any[];\r\n    renderRow?: (item:any, index:number, ex?:any) => JSX.Element;\r\n    ex?: any;\r\n    header?: string|JSX.Element;\r\n    beforeLoad?: string|JSX.Element;\r\n    none?: string|JSX.Element;\r\n    footer?: string|JSX.Element;\r\n    itemClick?: (item:any)=>void;\r\n    converter?: (item:any)=>ListItem;\r\n}\r\n\r\n@observer\r\nexport class ListView extends React.Component<ListViewProps, null> {\r\n    render() {\r\n        let {header, items, beforeLoad, none, renderRow, className, footer, itemClick, converter} = this.props;\r\n        let cn = classNames(className, 'va-list');\r\n        let content, elHeader;\r\n        if (items === undefined)\r\n            content = beforeLoad === null? null : <li className='empty'>\r\n                {beforeLoad || '...'}\r\n            </li>;\r\n        else if (items.length === 0) {\r\n            content = (\r\n            <li className='empty'>\r\n                {\r\n                    none || '[none]'\r\n                }\r\n            </li>);\r\n        }\r\n        else if (renderRow !== undefined) {\r\n            content = items.map((item, index) => renderRow(item, index, this.props.ex));\r\n        }\r\n        else {\r\n            content = items.map((item, index) => {\r\n                let onClick = item.onClick;\r\n                if (onClick === undefined && itemClick !== undefined) \r\n                    onClick = ()=>itemClick(item);\r\n                let listItem:ListItem;\r\n                if (converter !== undefined) {\r\n                    listItem = converter(item);\r\n                    if (listItem === undefined) return null;\r\n                }\r\n                else {\r\n                    listItem = {\r\n                        ...item\r\n                    }\r\n                }\r\n                if (listItem.key === undefined) listItem.key = listItem.main;\r\n                return <ListRow onClick={onClick} {...listItem} />;\r\n            });\r\n        }\r\n        if (header !== undefined) {\r\n            if (typeof header === 'string') {\r\n                elHeader = <div className='va-list-header'>{header}</div>;\r\n            }\r\n            else {\r\n                elHeader = header;\r\n            }\r\n        }\r\n\r\n        return (\r\n        <div className={cn}>\r\n            {elHeader}\r\n            <ul>\r\n                {content}\r\n            </ul>\r\n            {footer}\r\n        </div>\r\n        )\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { observable } from 'mobx';\r\nimport { VPage, Page, Form, ItemSchema, UiSchema, StringSchema, UiTextItem, UiPasswordItem, ButtonSchema, Edit, ImageSchema, nav, UiImageItem } from '../ui';\r\nimport userApi from './userApi';\r\n\r\nexport class EditMeInfo extends React.Component {\r\n    private schema:ItemSchema[] = [\r\n        {name:'nick', type:'string'} as StringSchema,\r\n        {name:'icon', type:'image'} as ImageSchema\r\n    ];\r\n    private uiSchema:UiSchema = {\r\n        items: {\r\n            nick: {widget:'text', label:'别名', placeholder:'好的别名更方便记忆'} as UiTextItem,\r\n            icon: {widget:'image', label:'头像'} as UiImageItem,\r\n        }\r\n    }\r\n    @observable private data:any;\r\n\r\n    constructor(props:any) {\r\n        super(props);\r\n        let {nick, icon} = nav.user;\r\n        this.data = {\r\n            nick: nick,\r\n            icon: icon,\r\n        }\r\n    }\r\n\r\n    private onItemChanged = async (itemSchema:ItemSchema, newValue:any, preValue:any) => {\r\n        let {name} = itemSchema;\r\n        await userApi.userSetProp(name, newValue);\r\n        this.data[name] = newValue;\r\n        nav.user[name] = newValue;\r\n        nav.saveLocalUser();\r\n    }\r\n\r\n    render() {\r\n        return <Page header=\"个人信息\">\r\n            <Edit schema={this.schema} uiSchema={this.uiSchema}\r\n                data={this.data}\r\n                onItemChanged={this.onItemChanged} />\r\n        </Page>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { observable } from 'mobx';\r\nimport { observer } from 'mobx-react';\r\nimport classNames from 'classnames';\r\nimport { IObservableValue } from 'mobx/lib/internal';\r\n\r\nexport type TabCaption = (selected:boolean) => JSX.Element;\r\n\r\nexport interface TabProp {\r\n    name: string;\r\n    caption: TabCaption;\r\n    content: () => JSX.Element;\r\n    notify?: IObservableValue<number>;\r\n}\r\n\r\nexport interface TabsProps {\r\n    tabs: TabProp[];\r\n    size?: 'sm' | 'lg' | 'md';\r\n    tabBack?: string;\r\n    contentBack?: string;\r\n    sep?: string;\r\n    selected?: string;\r\n}\r\n\r\nclass Tab {\r\n    name: string;\r\n    @observable selected: boolean;\r\n    caption: TabCaption;\r\n    contentBuilder: ()=>JSX.Element;\r\n    notify: IObservableValue<number>;\r\n\r\n    private _content: JSX.Element;\r\n    get content(): JSX.Element {\r\n        if (this.selected !== true) return this._content;\r\n        if (this._content !== undefined) return this._content;\r\n        return this._content = this.contentBuilder();\r\n    }\r\n}\r\n\r\nexport const TabCaptionComponent = (label:string, icon:string, color:string) => <div \r\n    className={'d-flex justify-content-center align-items-center flex-column cursor-pointer ' + color}>\r\n    <div><i className={'fa fa-lg fa-' + icon} /></div>\r\n    <small>{label}</small>\r\n</div>;\r\n\r\n@observer export class Tabs extends React.Component<TabsProps> {\r\n    private size: string;\r\n    private tabBack: string;\r\n    private contentBack: string;\r\n    private sep: string;\r\n    @observable private selectedTab: Tab;\r\n    @observable private tabs: Tab[] = [];\r\n\r\n    constructor(props: TabsProps) {\r\n        super(props);\r\n        let {size, tabs, tabBack, contentBack, sep, selected} = this.props;\r\n        switch (size) {\r\n            default:\r\n            case 'md': this.size = '3.2rem'; break;\r\n            case 'sm': this.size = '4rem'; break;\r\n            case 'lg': this.size = '2.5rem'; break;\r\n        }\r\n        this.tabs.push(...tabs.map(v => {\r\n                let tab = new Tab();\r\n                tab.name = v.name;\r\n                tab.selected = false;\r\n                tab.caption = v.caption;\r\n                tab.contentBuilder = v.content;\r\n                tab.notify = v.notify;\r\n                return tab;\r\n            }\r\n        ));\r\n        this.tabBack = tabBack || 'bg-light';\r\n        this.contentBack = contentBack;\r\n        this.sep = sep || 'border-top border-gray';\r\n        if (selected !== undefined) {\r\n            this.selectedTab = this.tabs.find(v => v.name === selected);\r\n        }\r\n        if (this.selectedTab === undefined) this.selectedTab = this.tabs[0];\r\n        this.selectedTab.selected = true;\r\n    }\r\n\r\n    private tabClick = (tab:Tab) => {\r\n        this.selectedTab.selected = false;\r\n        tab.selected = true;\r\n        this.selectedTab = tab;\r\n    }\r\n\r\n    showTab(tabName: string) {\r\n        let tab = this.tabs.find(v => v.name === tabName);\r\n        if (tab === undefined) return;\r\n        if (this.selectedTab !== undefined) this.selectedTab.selected = false;\r\n        tab.selected = true;\r\n        this.selectedTab = tab;\r\n    }\r\n\r\n    render() {\r\n        return <div className=\"tab\">\r\n            <div className={this.contentBack} style={{height: 'calc(100% - ' + this.size + ')'}}>\r\n                {this.tabs.map((v,index) => {\r\n                    let style:React.CSSProperties={\r\n                        display: v.selected===true? undefined : 'none'};\r\n                    return <div key={index} style={style}>{v.content}</div>;\r\n                })}\r\n            </div>\r\n            <div className={classNames(this.tabBack, this.sep)} style={{height: this.size}}>\r\n                {this.tabs.map((v,index) => {\r\n                    let {selected, caption, notify} = v;\r\n                    let notifyCircle:any;\r\n                    if (notify !== undefined) {\r\n                        let num = notify.get();\r\n                        if (num !== undefined) {\r\n                            if (num > 0) notifyCircle = <u>{num>99?'99+':num}</u>;\r\n                            else if (num < 0) notifyCircle = <u className=\"dot\" />;\r\n                        }\r\n                    }\r\n                    return <div key={index} className=\"\" onClick={()=>this.tabClick(v)}>\r\n                        <div className=\"align-self-center\">\r\n                            {notifyCircle}\r\n                            {caption(selected)}\r\n                        </div>\r\n                    </div>\r\n                })}\r\n            </div>\r\n        </div>\r\n    }\r\n};\r\n","import * as React from 'react';\r\nimport {FetchError} from '../fetchError';\r\nimport { refetchApi } from '../net';\r\n\r\nexport interface FetchErrorProps extends FetchError {\r\n    clearError: ()=>void\r\n}\r\n\r\nexport default class FetchErrorView extends React.Component<FetchErrorProps, null> {\r\n    private reApi = async () => {\r\n        this.props.clearError();\r\n        const {channel, url, options, resolve, reject} = this.props;\r\n        await refetchApi(channel, url, options, resolve, reject);\r\n    }\r\n    private close = async () => {\r\n        this.props.clearError();\r\n    }\r\n    render() {\r\n        let {error, url} = this.props;\r\n            //let errMsg = fetchError.errorMsg;\r\n        let errContent;\r\n        if (typeof error === 'object') {\r\n            let err = [];\r\n            for (let i in error) {\r\n                err.push(<li key={i}><label>{i}</label><div>{error[i]}</div></li>);\r\n            }\r\n            errContent = <ul>{err}</ul>;\r\n        }\r\n        else {\r\n            errContent = <div>{error}</div>;\r\n        }\r\n        return <li>\r\n            <article className=\"page-container\">\r\n                <section>\r\n                    <div  className=\"va-error\">\r\n                        <div>网络出现问题</div>\r\n                        <div>点击重新访问</div>\r\n                        <div>url: {url}</div>\r\n                        {errContent}\r\n                        <div className=\"p-3\">\r\n                            <button type='button' onClick={this.reApi}>重新API</button>\r\n                            <button type='button' onClick={this.close}>关闭</button>\r\n                        </div>\r\n                    </div>\r\n                </section>\r\n            </article>\r\n        </li>;\r\n    }\r\n}\r\n","import {User, Guest, Unit} from './user';\r\n\r\nexport interface ClearableData {\r\n    clear(): void;\r\n}\r\n\r\nexport class Data<T> implements ClearableData {\r\n    private name: string;\r\n    private value?: T;\r\n    constructor(name: string) {this.name = name; }\r\n    get(): T {\r\n        if (this.value !== undefined) return this.value;\r\n        let v = localStorage.getItem(this.name);\r\n        return this.value = v === null ? undefined : JSON.parse(v); \r\n    }\r\n    set(value: T) {\r\n        if (!value) { this.clear(); return; }\r\n        this.value = value;\r\n        localStorage.setItem(this.name, JSON.stringify(value));\r\n    }\r\n    clear() {\r\n        this.value = undefined;\r\n        localStorage.removeItem(this.name);\r\n    }\r\n}\r\n\r\nexport class LocalData {\r\n    user = new Data<User>('user');\r\n    guest = new Data<Guest>('guest');\r\n    unit = new Data<Unit>('unit');\r\n    homeTabCur = new Data<number>('homeTabCur');\r\n\r\n    logoutClear() {\r\n        [\r\n            this.user,\r\n            this.unit,\r\n            this.homeTabCur\r\n        ].map(d => d.clear());\r\n    }\r\n}\r\n","module.exports = __webpack_public_path__ + \"static/media/logo.ee7cd8ed.svg\";","import * as React from 'react';\r\nimport { Muted } from 'tonva-react-form';\r\nimport { TuidUI } from 'tonva-react-uq';\r\n\r\nconst organization:TuidUI = {\r\n    divs: {\r\n        post: {\r\n            content: (values) => {\r\n                let {id, title} = values;\r\n                return <>{title}</>\r\n            }\r\n        }\r\n    }\r\n};\r\n\r\nexport default {\r\n    user: {\r\n        content: (values) => {\r\n            let {id, name, nick, assigned} = values;\r\n            if (assigned !== undefined) {\r\n                return <>{assigned} - <Muted>{name}</Muted></>;\r\n            }\r\n            if (nick != undefined) {\r\n                return <>{nick} - <Muted>{name}</Muted></>;\r\n            }\r\n            if (name !== undefined) return name;\r\n            return 'id ' + id + ' ...';\r\n        }\r\n    },\r\n    section: {\r\n        content: (values) => {\r\n            let {id, name} = values;\r\n            return <>{name}</>;\r\n        }\r\n    },\r\n    organization: organization,\r\n}\r\n","import * as React from 'react';\r\nimport { Muted } from 'tonva-react-form';\r\nimport { left0 } from 'tonva-tools';\r\n//import { dictionary as x } from '../../res';\r\nimport { VMapMain, MapUI, Field, CMap }  from 'tonva-react-uq'; \r\n\r\nclass CMapTeamPerson extends CMap {\r\n    async searchOnKey(keyField:Field, param):Promise<number> {\r\n        switch (keyField.name) {\r\n            default: return await super.searchOnKey(keyField, param);\r\n            case 'post': return await this.searchOnPost(param);                \r\n        }\r\n    }\r\n\r\n    private async searchOnPost(param: any):Promise<number> {\r\n        let querySelect = this.cQuerySelect('teamPosts');\r\n        let val = await querySelect.call(param);\r\n        return val['post'].id;\r\n    }\r\n}\r\n\r\nclass VMapTeamPerson extends VMapMain {\r\n}\r\n\r\nconst ui:MapUI = {\r\n    CMap: CMapTeamPerson,\r\n    //label: '部门员工对照表',\r\n    //main: VMapTeamPerson,\r\n    keys: [\r\n        {\r\n            content: ({name, id}:any, x) => <><Muted>{x.team}</Muted> {name}</>,\r\n            none: (x)=>x.noStaff,\r\n        },\r\n        {\r\n            content: ({name, id}:any, x) => <><Muted>{x.staff}</Muted> {name} &nbsp; <Muted>{x.no} {left0(id, 4)}</Muted></>,\r\n            none: (x)=>x.noPost,\r\n        },\r\n        {\r\n            content: ({x, title, id}:any) => <><Muted>{x.post}</Muted> {title}</>,\r\n            none: undefined,\r\n        },\r\n    ]\r\n}\r\n\r\nexport default ui;\r\n","import teamPerson from './teamPerson';\r\n\r\nexport default {\r\n    teamPerson: teamPerson,\r\n};\r\n","import { observer } from \"mobx-react\";\r\nimport React from \"react\";\r\nimport { FA } from \"tonva-react-form\";\r\nimport { Page } from \"tonva-tools\";\r\nimport { CQuery, VQueryMain } from \"tonva-react-uq\";\r\nimport { tv } from 'tonva-react-uq';\r\n\r\nexport class CGetMessage extends CQuery {\r\n    protected get VQueryMain() {return VMain}\r\n}\r\n\r\nexport class VMain extends VQueryMain {\r\n    protected queryResult = observer((result:any) => {\r\n        let ret0 = result.ret[0];\r\n        let rightClose = <button\r\n            className=\"btn btn-outline-success\"\r\n            onClick={this.again}>\r\n            <FA name=\"search\" /> 再查询\r\n        </button>;\r\n        return <Page header={this.label} right={rightClose}>\r\n            重载的CGetMessage <br/>\r\n            {tv(ret0.fromUser)/*ret0.fromUser.content()*/}\r\n            <pre>{JSON.stringify(ret0, undefined, '\\t')}</pre>\r\n        </Page>;\r\n    })\r\n}\r\n","import React from 'react';\r\nimport { QueryUI, tv } from \"tonva-react-uq\";\r\nimport { observer } from 'mobx-react';\r\n\r\nconst ui:QueryUI = {\r\n    row: observer((values:any) => <div className=\"px-3 py-2\">{tv(values.post)/*.content()*/}</div>),\r\n}\r\n\r\nexport default ui;","import getMessage from './getMessage';\r\nimport teamPosts from './teamPosts';\r\n\r\nexport default {\r\n    getMessage: getMessage,\r\n    teamPosts: teamPosts,\r\n};\r\n","import { QueryUI } from \"tonva-react-uq\";\r\nimport { VMain } from \"./cGetMessge\";\r\n\r\nconst ui:QueryUI = {\r\n    main: VMain,\r\n}\r\n\r\nexport default ui;\r\n","import React from 'react';\r\nimport _ from 'lodash';\r\n\r\nexport default {\r\n    x: {\r\n        no: '编号',\r\n        team: '部门',\r\n        staff: '员工',\r\n        noStaff: '无员工',\r\n        post: '职位',\r\n        noPost: '无职位',\r\n        a: 'aaa',\r\n        b: {\r\n            s: 'sss',\r\n            d: ()=><span className=\"text-success\">ddd</span>,\r\n        },\r\n        c: ()=><span className=\"text-danger\">ccc</span>,\r\n    },\r\n    usq: '$UNITX',\r\n    tuid: '基础档案',\r\n    map: '对照表',\r\n    tuidPlaceHolder: '选择',\r\n    submit: '提交',\r\n    arrNew: '新增',\r\n    arrEdit: '保存',\r\n    entity: {\r\n        message: {\r\n            label: '消息-message',\r\n            arrNew: '新增消息',\r\n            arrEdit: '保存消息',\r\n            fields: {\r\n                fromUser: '发送人',\r\n                fromUnit: '发送部门',\r\n                type: '类型',\r\n                date: '日期',\r\n                subject: '主题',\r\n                discription: '描述',\r\n                content: '内容'\r\n            },\r\n        },\r\n        getMessage: {\r\n            label: '获取Message',\r\n            submit: '获取消息',\r\n            fields: {\r\n                msg: '消息'\r\n            }\r\n        },\r\n        newMessage: {\r\n            label: '新建消息',\r\n            fields: {\r\n                type: '类型',\r\n                subject: '主题',\r\n            },\r\n            arrs: {\r\n                to: {\r\n                    label: '发送',\r\n                    newSubmit: '新增to',\r\n                    editSumbit: '保存to',\r\n                },\r\n                cc: {\r\n                    label: '抄送',\r\n                    newSubmit: '新增cc',\r\n                    editSumbit: '保存cc',\r\n                }\r\n            }\r\n        },\r\n        sectionTeam: {\r\n            label: '大部设置',\r\n        },\r\n        teamPerson: {\r\n            label: '部门员工职位',\r\n            fields: {\r\n            },\r\n            confirmDelete: _.template('真的要删除${label}吗'),\r\n        },\r\n        teamOrganization: {\r\n            label: '部门机构对照表',\r\n        },\r\n        teamPosts: {\r\n            label: '部门职位',\r\n        },\r\n        person: {\r\n            label: '员工',\r\n            fields: {\r\n                name: '姓名',\r\n                nick: '别名',\r\n                given: '名字',\r\n                sur: '姓',\r\n                gender: '性别',\r\n                user: '用户',\r\n            }\r\n        },\r\n        organization: {\r\n            label: '组织结构',\r\n            arrs: {\r\n                post: {\r\n                    label: '职位',\r\n                }\r\n            }\r\n        },\r\n        user: {\r\n            label: '用户'\r\n        }\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { VTuidMain } from \"tonva-react-uq\";\r\nimport { Page } from 'tonva-tools';\r\nimport { SearchBox, List, Muted } from 'tonva-react-form';\r\n\r\nexport class MyVTuidMain extends VTuidMain {\r\n    protected get view() {\r\n        let {label, proxyLinks} = this.controller;\r\n        return () => <Page header={label}>\r\n            {proxyLinks === undefined ?\r\n            <>\r\n                <SearchBox className=\"w-100\" onSearch={this.onSearch} placeholder={'搜索'+label} />\r\n                改写的TuidMain\r\n                <div className='my-3'>\r\n                    <button className=\"ml-3 btn btn-primary\" onClick={this.onNew}>新增</button>\r\n                    <button className=\"ml-3 btn btn-primary\" onClick={this.onList}>列表</button>\r\n                </div>\r\n            </> :\r\n            <List className=\"my-2\"\r\n                header={<Muted>{label} 代理下列Tuid</Muted>}\r\n                items={proxyLinks}\r\n                item={{render: this.entityRender, onClick:this.entityClick}} />\r\n            }\r\n        </Page>;\r\n    }\r\n}","import { UqUI } from 'tonva-react-uq';\r\nimport tuid from './tuid';\r\nimport map from './map';\r\nimport query from './query';\r\nimport res from './res';\r\nimport { MyCTuid } from './cTuid';\r\n\r\nconst usqUI:UqUI = {\r\n    CTuidMain: MyCTuid,\r\n    tuid: tuid,\r\n    map: map,\r\n    query: query,\r\n    res: res,\r\n}\r\n\r\nexport default usqUI;","import { CTuidMain, VTuidMain, Field, FieldCall, VForm, TuidMain, FieldTuidUI } from \"tonva-react-uq\";\r\nimport { MyVTuidMain } from \"./vTuidMain\";\r\n\r\nexport class MyCTuid extends CTuidMain {\r\n    protected get VTuidMain():typeof VTuidMain {return MyVTuidMain}\r\n\r\n    protected buildSelect(field:Field, arr:string, fieldTuidUI: FieldTuidUI):FieldCall {\r\n        let {name} = field;\r\n        switch (arr) {\r\n        case undefined:\r\n            switch (name) {\r\n            case 'fromUser':\r\n                return async (form:VForm, field:Field, values:any):Promise<any> => {\r\n                    let {_tuid} = field;\r\n                    let cTuidSelect = this.cUq.cTuidSelect(_tuid);\r\n                    let ret = await cTuidSelect.call<any>();\r\n                    return ret.id;\r\n                };\r\n            }\r\n            break;\r\n        }\r\n        return super.buildSelect(field, arr, fieldTuidUI);\r\n    }\r\n}\r\n","import CN from './zh/CN';\r\n\r\nconst res = {\r\n    zh: {\r\n        CN: CN\r\n    }\r\n};\r\n\r\nexport default res;\r\n","import { UqUI } from 'tonva-react-uq';\r\nimport tuid from './tuid';\r\nimport sheet from './sheet';\r\n//import map from './map';\r\n//import query from './query';\r\n//import res from './res';\r\n//import { MyCTuid } from './cTuid';\r\n\r\nconst usqUI:UqUI = {\r\n    //CTuidMain: MyCTuid,\r\n    tuid: tuid,\r\n    sheet: sheet,\r\n    //map: map,\r\n    //query: query,\r\n    //res: res,\r\n}\r\n\r\nexport default usqUI;\r\n","import * as React from 'react';\r\nimport { TuidUI } from 'tonva-react-uq';\r\n\r\nexport default {\r\n    customer: {\r\n        content: (values) => {\r\n            let {id, name, discription} = values;\r\n            return <>{discription || name || 'id ' + id + ' ...'}</>;\r\n        }\r\n    },\r\n    article: {\r\n        content: (values) => {\r\n            let {id, name, discription, casNO} = values;\r\n            if (casNO !== undefined)\r\n                return <>CAS:{casNO} - {discription || name}</>;\r\n            return <>{discription || name || 'id ' + id + ' ...'}</>;\r\n        }\r\n    },\r\n}\r\n","import * as React from 'react';\r\nimport { SheetUI } from 'tonva-react-uq';\r\n\r\nconst orderUI:SheetUI = {\r\n    form: {\r\n        items: {\r\n            sumAmount: ():number => {\r\n                return 1;\r\n            },\r\n            articles: {\r\n                items: {\r\n                    amount: function(this:any):number {\r\n                        return (this.quantity === undefined || this.quantity === null? 0 : this.quantity) * \r\n                            (this.price === undefined || this.price === null? 0 : this.price);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n};\r\n\r\nexport default {\r\n    order: orderUI,\r\n}\r\n","import { UqUI } from 'tonva-react-uq';\r\n\r\n//import res from './res';\r\n//import tuid from './tuid';\r\n//import sheet from './sheet';\r\n//import map from './map';\r\n//import query from './query';\r\n//import { MyCTuid } from './cTuid';\r\n\r\nconst usqUI:UqUI = {\r\n    //CTuidMain: MyCTuid,\r\n    //tuid: tuid,\r\n    //sheet: sheet,\r\n    //map: map,\r\n    //query: query,\r\n    //res: res,\r\n}\r\n\r\nexport default usqUI;\r\n","import * as React from 'react';\r\nimport { Page, Edit, StringSchema } from \"tonva-tools\";\r\n\r\nexport function testPage() {\r\n    let schema = [\r\n        {name:'a', type:'string', required: true} as StringSchema\r\n    ];\r\n    let data = {\r\n        a: 'ttt'\r\n    };\r\n    return <Page>\r\n        <Edit schema={schema} data={data} />\r\n    </Page>\r\n}","import React from 'react';\r\nimport { VPage, Page, nav } from 'tonva-tools';\r\nimport { FA } from 'tonva-react-form';\r\nimport {AppUI, CApp} from 'tonva-react-uq';\r\nimport $unitx from './$unitx';\r\nimport devApp from './devApp';\r\nimport jkOrder, { aa_bbJkOrder } from './jkOrder';\r\nimport cart from './cart';\r\nimport res from './res';\r\nimport { CMyApp } from './CMyApp';\r\nimport { testPage } from './test';\r\n\r\nclass VAppMain extends VPage<CApp> {\r\n    async open(param?:any) {\r\n        this.openPage(this.appPage);\r\n    }\r\n\r\n    protected appPage = () => {\r\n        let {caption, cUqArr: cUsqArr} = this.controller;\r\n        let content;\r\n        if (cUsqArr.length === 0) {\r\n            content = <div className=\"p-3 text-info\">\r\n                <FA name=\"minus-circle\" className=\"text-danger\" size=\"lg\" /> &nbsp; 此APP没有绑定任何的USQ\r\n            </div>;\r\n        }\r\n        else {\r\n            content = cUsqArr.map((v,i) => <div key={i}>{v.render()}</div>);\r\n        }\r\n        return <Page header={caption} logout={true}>\r\n            <div className=\"p-3\">自定义程序界面了。显示这一段，自定义起作用了。可以在这里放置任何内容</div>\r\n            <div><button onClick={()=>this.openPage(testPage)}>test</button></div>\r\n            <div className=\"p-3\">hashParam: {nav.hashParam}</div>\r\n            {content}\r\n        </Page>;\r\n    };\r\n}\r\n\r\nlet uqs = {\r\n    \"$$$/$unitx\": $unitx,\r\n    \"DevApp/devappApi\": devApp,\r\n    \"JKDev/jkOrder\": jkOrder,\r\n    \"百灵威系统工程部/cart\": cart,\r\n}\r\n\r\nconst ui:AppUI = {\r\n    appName: 'BizDev/许可证',\r\n    //appName: 'bruce/SCMBase',\r\n    CApp: CMyApp,\r\n    res: res,\r\n    main: VAppMain,\r\n    uqs: uqs,\r\n\r\n    roles: {\r\n        'aa-bb': async () => (await import('./roles/aa-bb')).default,\r\n    }\r\n};\r\n\r\nexport default ui;\r\n\r\n","import * as React from 'react';\r\nimport { CApp, ControllerUq } from \"tonva-react-uq\";\r\nimport { VPage, Page } from \"tonva-tools\";\r\n\r\nexport class CMyApp extends CApp {\r\n    /*\r\n    protected async internalStart(param?:any) {\r\n        let cProduct = new CProduct(undefined, undefined);\r\n        await cProduct.start();\r\n    }*/\r\n}\r\n\r\nclass CProduct extends ControllerUq {\r\n    protected async internalStart(param?: any): Promise<void> {\r\n        this.openVPage(VProduct, param);\r\n    }\r\n}\r\n\r\nclass VProduct extends VPage<CProduct> {\r\n    async open(param?:any) {\r\n        this.openPageElement(<Page>\r\n            ddd\r\n        </Page>);\r\n    }\r\n}\r\n","import CN from './zh/CN';\r\n\r\nconst res = {\r\n    zh: {\r\n        CN: CN\r\n    }\r\n};\r\n\r\nexport default res;\r\n","import React from 'react';\r\nimport _ from 'lodash';\r\n\r\nexport default {\r\n    x: {\r\n        no: '编号',\r\n        team: '部门',\r\n    },\r\n    caption: 'Biz许可证管理',\r\n}\r\n","import * as React from 'react';\nimport { NavView } from 'tonva-tools';\nimport { startApp } from 'tonva-react-uq';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './App.css';\nimport ui from './ui';\n\n//const tonvaApp = 'JKDev/jkOrder';\n//const tonvaApp = '百灵威系统工程部/cart';\n//const tonvaA\n\nclass App extends React.Component {\n    async onLogined() {\n        await startApp(ui);\n    }\n    render() {\n        React.createElement(React.Fragment, {}, \n            React.createElement(NavView, {onLogined: this.onLogined}),\n            React.createElement(\"button\", {onClick: this.click}, \"test\"));\n        return <>\n            <NavView onLogined={this.onLogined} />\n        </>;\n        //<button onClick={this.click}>test</button>\n    }\n\n    click = async () => {\n        //let url = 'http://101.200.46.56/joint/27/jk-usq';\n        let url = 'http://localhost:3017/joint-usq-jk';\n        let data = [\n            {moniker: 'product', queue: 0, data: undefined},\n            {moniker: 'product', queue: undefined, data: {\n                no: 1002,\n                discription: 'a product test1',\n                packType: 23\n            }}\n        ];\n        let ret = await fetch(url, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json;charset=UTF-8'\n            },\n            body: JSON.stringify(data)\n        });\n        let text = await ret.text();\n        alert(text);\n    }\n}\n\nexport default App;\n","// tslint:disable:no-console\n// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the 'N+1' visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL!,\n      window.location.toString()\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (!isLocalhost) {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      } else {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker) {\n          installingWorker.onstatechange = () => {\n            if (installingWorker.state === 'installed') {\n              if (navigator.serviceWorker.controller) {\n                // At this point, the old content will have been purged and\n                // the fresh content will have been added to the cache.\n                // It's the perfect time to display a 'New content is\n                // available; please refresh.' message in your web app.\n                console.log('New content is available; please refresh.');\n              } else {\n                // At this point, everything has been precached.\n                // It's the perfect time to display a\n                // 'Content is cached for offline use.' message.\n                console.log('Content is cached for offline use.');\n              }\n            }\n          };\n        }\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type')!.indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\nimport './index.css';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root') as HTMLElement\n);\nregisterServiceWorker();\n"],"sourceRoot":""}